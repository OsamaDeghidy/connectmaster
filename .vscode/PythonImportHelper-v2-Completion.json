[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "static",
        "importPath": "django.conf.urls.static",
        "description": "django.conf.urls.static",
        "isExtraImport": true,
        "detail": "django.conf.urls.static",
        "documentation": {}
    },
    {
        "label": "psycopg2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "psycopg2",
        "description": "psycopg2",
        "detail": "psycopg2",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "machines",
        "description": "machines",
        "isExtraImport": true,
        "detail": "machines",
        "documentation": {}
    },
    {
        "label": "ImportExportModelAdmin",
        "importPath": "import_export.admin",
        "description": "import_export.admin",
        "isExtraImport": true,
        "detail": "import_export.admin",
        "documentation": {}
    },
    {
        "label": "ImportExportModelAdmin",
        "importPath": "import_export.admin",
        "description": "import_export.admin",
        "isExtraImport": true,
        "detail": "import_export.admin",
        "documentation": {}
    },
    {
        "label": "ImportExportModelAdmin",
        "importPath": "import_export.admin",
        "description": "import_export.admin",
        "isExtraImport": true,
        "detail": "import_export.admin",
        "documentation": {}
    },
    {
        "label": "SimpleHistoryAdmin",
        "importPath": "simple_history.admin",
        "description": "simple_history.admin",
        "isExtraImport": true,
        "detail": "simple_history.admin",
        "documentation": {}
    },
    {
        "label": "SimpleHistoryAdmin",
        "importPath": "simple_history.admin",
        "description": "simple_history.admin",
        "isExtraImport": true,
        "detail": "simple_history.admin",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "Attribute",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "FormattedValue",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "Attribute",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "FormattedValue",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "Attribute",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "FormattedValue",
        "importPath": "ast",
        "description": "ast",
        "isExtraImport": true,
        "detail": "ast",
        "documentation": {}
    },
    {
        "label": "label",
        "importPath": "cProfile",
        "description": "cProfile",
        "isExtraImport": true,
        "detail": "cProfile",
        "documentation": {}
    },
    {
        "label": "label",
        "importPath": "cProfile",
        "description": "cProfile",
        "isExtraImport": true,
        "detail": "cProfile",
        "documentation": {}
    },
    {
        "label": "default",
        "importPath": "email.policy",
        "description": "email.policy",
        "isExtraImport": true,
        "detail": "email.policy",
        "documentation": {}
    },
    {
        "label": "default",
        "importPath": "email.policy",
        "description": "email.policy",
        "isExtraImport": true,
        "detail": "email.policy",
        "documentation": {}
    },
    {
        "label": "default",
        "importPath": "email.policy",
        "description": "email.policy",
        "isExtraImport": true,
        "detail": "email.policy",
        "documentation": {}
    },
    {
        "label": "choices",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "choices",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "choices",
        "importPath": "random",
        "description": "random",
        "isExtraImport": true,
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "arabic_reshaper",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "arabic_reshaper",
        "description": "arabic_reshaper",
        "detail": "arabic_reshaper",
        "documentation": {}
    },
    {
        "label": "model",
        "importPath": "pyexpat",
        "description": "pyexpat",
        "isExtraImport": true,
        "detail": "pyexpat",
        "documentation": {}
    },
    {
        "label": "model",
        "importPath": "pyexpat",
        "description": "pyexpat",
        "isExtraImport": true,
        "detail": "pyexpat",
        "documentation": {}
    },
    {
        "label": "model",
        "importPath": "pyexpat",
        "description": "pyexpat",
        "isExtraImport": true,
        "detail": "pyexpat",
        "documentation": {}
    },
    {
        "label": "Widget",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Widget",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "Widget",
        "importPath": "tkinter",
        "description": "tkinter",
        "isExtraImport": true,
        "detail": "tkinter",
        "documentation": {}
    },
    {
        "label": "django",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django",
        "description": "django",
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "Order.models",
        "description": "Order.models",
        "isExtraImport": true,
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "Order.models",
        "description": "Order.models",
        "isExtraImport": true,
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "Order.models",
        "description": "Order.models",
        "isExtraImport": true,
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "importPath": "Order.models",
        "description": "Order.models",
        "isExtraImport": true,
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "OrderDeliveryDate",
        "importPath": "Order.models",
        "description": "Order.models",
        "isExtraImport": true,
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "audioop",
        "description": "audioop",
        "isExtraImport": true,
        "detail": "audioop",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "audioop",
        "description": "audioop",
        "isExtraImport": true,
        "detail": "audioop",
        "documentation": {}
    },
    {
        "label": "reverse",
        "importPath": "audioop",
        "description": "audioop",
        "isExtraImport": true,
        "detail": "audioop",
        "documentation": {}
    },
    {
        "label": "django.shortcuts",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseForbidden",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Sum",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Count",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "Q",
        "importPath": "django.db.models",
        "description": "django.db.models",
        "isExtraImport": true,
        "detail": "django.db.models",
        "documentation": {}
    },
    {
        "label": "multiselectfield.db.fields",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "multiselectfield.db.fields",
        "description": "multiselectfield.db.fields",
        "detail": "multiselectfield.db.fields",
        "documentation": {}
    },
    {
        "label": "simple_history.models",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "simple_history.models",
        "description": "simple_history.models",
        "detail": "simple_history.models",
        "documentation": {}
    },
    {
        "label": "HistoricalRecords",
        "importPath": "simple_history.models",
        "description": "simple_history.models",
        "isExtraImport": true,
        "detail": "simple_history.models",
        "documentation": {}
    },
    {
        "label": "Sequence",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "update",
        "importPath": "turtle",
        "description": "turtle",
        "isExtraImport": true,
        "detail": "turtle",
        "documentation": {}
    },
    {
        "label": "CharField",
        "importPath": "django.db.models.fields",
        "description": "django.db.models.fields",
        "isExtraImport": true,
        "detail": "django.db.models.fields",
        "documentation": {}
    },
    {
        "label": "DateField",
        "importPath": "django.db.models.fields",
        "description": "django.db.models.fields",
        "isExtraImport": true,
        "detail": "django.db.models.fields",
        "documentation": {}
    },
    {
        "label": "EmailField",
        "importPath": "django.db.models.fields",
        "description": "django.db.models.fields",
        "isExtraImport": true,
        "detail": "django.db.models.fields",
        "documentation": {}
    },
    {
        "label": "IntegerField",
        "importPath": "django.db.models.fields",
        "description": "django.db.models.fields",
        "isExtraImport": true,
        "detail": "django.db.models.fields",
        "documentation": {}
    },
    {
        "label": "TextField",
        "importPath": "django.db.models.fields",
        "description": "django.db.models.fields",
        "isExtraImport": true,
        "detail": "django.db.models.fields",
        "documentation": {}
    },
    {
        "label": "ForeignKey",
        "importPath": "django.db.models.fields.related",
        "description": "django.db.models.fields.related",
        "isExtraImport": true,
        "detail": "django.db.models.fields.related",
        "documentation": {}
    },
    {
        "label": "ImageField",
        "importPath": "django.db.models.fields.files",
        "description": "django.db.models.fields.files",
        "isExtraImport": true,
        "detail": "django.db.models.fields.files",
        "documentation": {}
    },
    {
        "label": "count",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "count",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "verbose",
        "importPath": "tabnanny",
        "description": "tabnanny",
        "isExtraImport": true,
        "detail": "tabnanny",
        "documentation": {}
    },
    {
        "label": "verbose",
        "importPath": "tabnanny",
        "description": "tabnanny",
        "isExtraImport": true,
        "detail": "tabnanny",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "code",
        "importPath": "isort",
        "description": "isort",
        "isExtraImport": true,
        "detail": "isort",
        "documentation": {}
    },
    {
        "label": "MultiSelectField",
        "importPath": "multiselectfield",
        "description": "multiselectfield",
        "isExtraImport": true,
        "detail": "multiselectfield",
        "documentation": {}
    },
    {
        "label": "MultiSelectField",
        "importPath": "multiselectfield",
        "description": "multiselectfield",
        "isExtraImport": true,
        "detail": "multiselectfield",
        "documentation": {}
    },
    {
        "label": "close_all",
        "importPath": "asyncore",
        "description": "asyncore",
        "isExtraImport": true,
        "detail": "asyncore",
        "documentation": {}
    },
    {
        "label": "Stats",
        "importPath": "pstats",
        "description": "pstats",
        "isExtraImport": true,
        "detail": "pstats",
        "documentation": {}
    },
    {
        "label": "X",
        "importPath": "re",
        "description": "re",
        "isExtraImport": true,
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "X",
        "importPath": "re",
        "description": "re",
        "isExtraImport": true,
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "name",
        "importPath": "unicodedata",
        "description": "unicodedata",
        "isExtraImport": true,
        "detail": "unicodedata",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "user_passes_test",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "Customer",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "CorrectiveActions",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Design_And_Printing_Specifications",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Paper_Specification",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Aftar_Print_Services",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Crushing_Data",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Gluing_And_Binding_Data",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Finished_product_and_packing_data",
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "isExtraImport": true,
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "CorrectiveActionsForm",
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "isExtraImport": true,
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "shapely.wkb",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shapely.wkb",
        "description": "shapely.wkb",
        "detail": "shapely.wkb",
        "documentation": {}
    },
    {
        "label": "shapely.geometry",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shapely.geometry",
        "description": "shapely.geometry",
        "detail": "shapely.geometry",
        "documentation": {}
    },
    {
        "label": "shapely.ops",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shapely.ops",
        "description": "shapely.ops",
        "detail": "shapely.ops",
        "documentation": {}
    },
    {
        "label": "copy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "copy",
        "description": "copy",
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "ogr",
        "importPath": "osgeo",
        "description": "osgeo",
        "isExtraImport": true,
        "detail": "osgeo",
        "documentation": {}
    },
    {
        "label": "osr",
        "importPath": "osgeo",
        "description": "osgeo",
        "isExtraImport": true,
        "detail": "osgeo",
        "documentation": {}
    },
    {
        "label": "ogr",
        "importPath": "osgeo",
        "description": "osgeo",
        "isExtraImport": true,
        "detail": "osgeo",
        "documentation": {}
    },
    {
        "label": "osr",
        "importPath": "osgeo",
        "description": "osgeo",
        "isExtraImport": true,
        "detail": "osgeo",
        "documentation": {}
    },
    {
        "label": "Grammar",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "EvaluableParseManager",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "SymbolTable",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "Bind",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "Grammar",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "EvaluableParseManager",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "SymbolTable",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "Bind",
        "importPath": "booleano.parser",
        "description": "booleano.parser",
        "isExtraImport": true,
        "detail": "booleano.parser",
        "documentation": {}
    },
    {
        "label": "Variable",
        "importPath": "booleano.operations",
        "description": "booleano.operations",
        "isExtraImport": true,
        "detail": "booleano.operations",
        "documentation": {}
    },
    {
        "label": "Variable",
        "importPath": "booleano.operations",
        "description": "booleano.operations",
        "isExtraImport": true,
        "detail": "booleano.operations",
        "documentation": {}
    },
    {
        "label": "django_filters",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_filters",
        "description": "django_filters",
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "DateFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "CharFilter",
        "importPath": "django_filters",
        "description": "django_filters",
        "isExtraImport": true,
        "detail": "django_filters",
        "documentation": {}
    },
    {
        "label": "In_stockForm",
        "importPath": "storge.forms",
        "description": "storge.forms",
        "isExtraImport": true,
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "formset_factory",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "django.forms",
        "description": "django.forms",
        "isExtraImport": true,
        "detail": "django.forms",
        "documentation": {}
    },
    {
        "label": "functools",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "functools",
        "description": "functools",
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "pre_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "django_tables2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django_tables2",
        "description": "django_tables2",
        "detail": "django_tables2",
        "documentation": {}
    },
    {
        "label": "SingleTableView",
        "importPath": "django_tables2",
        "description": "django_tables2",
        "isExtraImport": true,
        "detail": "django_tables2",
        "documentation": {}
    },
    {
        "label": "RequestConfig",
        "importPath": "django_tables2",
        "description": "django_tables2",
        "isExtraImport": true,
        "detail": "django_tables2",
        "documentation": {}
    },
    {
        "label": "mark_safe",
        "importPath": "django.utils.safestring",
        "description": "django.utils.safestring",
        "isExtraImport": true,
        "detail": "django.utils.safestring",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "urllib",
        "description": "urllib",
        "isExtraImport": true,
        "detail": "urllib",
        "documentation": {}
    },
    {
        "label": "FilterView",
        "importPath": "django_filters.views",
        "description": "django_filters.views",
        "isExtraImport": true,
        "detail": "django_filters.views",
        "documentation": {}
    },
    {
        "label": "Paginator",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "PageNotAnInteger",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "EmptyPage",
        "importPath": "django.core.paginator",
        "description": "django.core.paginator",
        "isExtraImport": true,
        "detail": "django.core.paginator",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "site",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "site",
        "description": "site",
        "detail": "site",
        "documentation": {}
    },
    {
        "label": "glob",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "glob",
        "description": "glob",
        "detail": "glob",
        "documentation": {}
    },
    {
        "label": "shutil",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "shutil",
        "description": "shutil",
        "detail": "shutil",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "distutils.sysconfig",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "distutils.sysconfig",
        "description": "distutils.sysconfig",
        "detail": "distutils.sysconfig",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "print_function",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "secrets",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "secrets",
        "description": "secrets",
        "detail": "secrets",
        "documentation": {}
    },
    {
        "label": "Form",
        "importPath": "tkinter.tix",
        "description": "tkinter.tix",
        "isExtraImport": true,
        "detail": "tkinter.tix",
        "documentation": {}
    },
    {
        "label": "count_nonzero",
        "importPath": "numpy",
        "description": "numpy",
        "isExtraImport": true,
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "requests",
        "description": "requests",
        "isExtraImport": true,
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Connect_ERP_System.asgi",
        "description": "Connect_ERP_System.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "Connect_ERP_System.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "BASE_DIR = os. path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',\n    'Users',\n    'Work_Orders',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'simple_history.middleware.HistoryRequestMiddleware',\n]",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "ROOT_URLCONF = 'Connect_ERP_System.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "WSGI_APPLICATION = 'Connect_ERP_System.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n# Password validation",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "Connect_ERP_System.settings",
        "description": "Connect_ERP_System.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Connect_ERP_System.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Connect_ERP_System.urls",
        "description": "Connect_ERP_System.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('',include('Work_Orders.urls')),\n    path('',include('Users.urls')),\n    path('',include('Order.urls')),\n    path('',include('machines.urls')),\n    path('', include('storge.urls')),\n]\nurlpatterns += static(settings.STATIC_URL, document_root=settings.STATIC_ROOT)\nif settings.DEBUG:",
        "detail": "Connect_ERP_System.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "Connect_ERP_System.wsgi",
        "description": "Connect_ERP_System.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "Connect_ERP_System.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0001_initial",
        "description": "machines.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('Order', '0048_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Machine',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "machines.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0002_rename_machine_name_machine_order_machine_and_more",
        "description": "machines.migrations.0002_rename_machine_name_machine_order_machine_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0001_initial'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='machine_order',\n            old_name='machine_name',\n            new_name='machine',\n        ),",
        "detail": "machines.migrations.0002_rename_machine_name_machine_order_machine_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0003_alter_machine_machine_name_alter_machine_order_order",
        "description": "machines.migrations.0003_alter_machine_machine_name_alter_machine_order_order",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0048_alter_order_states_name'),\n        ('machines', '0002_rename_machine_name_machine_order_machine_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='machine',\n            name='machine_name',\n            field=models.CharField(blank=True, choices=[('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق')], max_length=200, null=True, unique=True),",
        "detail": "machines.migrations.0003_alter_machine_machine_name_alter_machine_order_order",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0004_machine_order_machines_number_and_more",
        "description": "machines.migrations.0004_machine_order_machines_number_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0003_alter_machine_machine_name_alter_machine_order_order'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='machine_order',\n            name='machines_number',\n            field=models.IntegerField(blank=True, null=True),\n        ),",
        "detail": "machines.migrations.0004_machine_order_machines_number_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0005_remove_machine_order_machines_number",
        "description": "machines.migrations.0005_remove_machine_order_machines_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0004_machine_order_machines_number_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='machine_order',\n            name='machines_number',\n        ),\n    ]",
        "detail": "machines.migrations.0005_remove_machine_order_machines_number",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0006_remove_machine_order_machine_machineorder_and_more",
        "description": "machines.migrations.0006_remove_machine_order_machine_machineorder_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0005_remove_machine_order_machines_number'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='machine_order',\n            name='machine',\n        ),\n        migrations.CreateModel(",
        "detail": "machines.migrations.0006_remove_machine_order_machine_machineorder_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0007_remove_machine_order_machines_machine_order_machine_and_more",
        "description": "machines.migrations.0007_remove_machine_order_machines_machine_order_machine_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0006_remove_machine_order_machine_machineorder_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='machine_order',\n            name='machines',\n        ),\n        migrations.AddField(",
        "detail": "machines.migrations.0007_remove_machine_order_machines_machine_order_machine_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0008_machine_order_binding_and_more",
        "description": "machines.migrations.0008_machine_order_binding_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0007_remove_machine_order_machines_machine_order_machine_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='machine_order',\n            name='binding',\n            field=models.CharField(blank=True, max_length=5, null=True, verbose_name='تجليد'),\n        ),",
        "detail": "machines.migrations.0008_machine_order_binding_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "machines.migrations.0009_alter_machine_order_binding_and_more",
        "description": "machines.migrations.0009_alter_machine_order_binding_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('machines', '0008_machine_order_binding_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='machine_order',\n            name='binding',\n            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='تجليد'),\n        ),",
        "detail": "machines.migrations.0009_alter_machine_order_binding_and_more",
        "documentation": {}
    },
    {
        "label": "MachineAdmin",
        "kind": 6,
        "importPath": "machines.admin",
        "description": "machines.admin",
        "peekOfCode": "class MachineAdmin(ImportExportModelAdmin):\n    pass\nclass MachineOrderAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Machine, MachineAdmin)\nadmin.site.register(Machine_Order, MachineOrderAdmin)",
        "detail": "machines.admin",
        "documentation": {}
    },
    {
        "label": "MachineOrderAdmin",
        "kind": 6,
        "importPath": "machines.admin",
        "description": "machines.admin",
        "peekOfCode": "class MachineOrderAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Machine, MachineAdmin)\nadmin.site.register(Machine_Order, MachineOrderAdmin)",
        "detail": "machines.admin",
        "documentation": {}
    },
    {
        "label": "MachinesConfig",
        "kind": 6,
        "importPath": "machines.apps",
        "description": "machines.apps",
        "peekOfCode": "class MachinesConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'machines'",
        "detail": "machines.apps",
        "documentation": {}
    },
    {
        "label": "MachineForm",
        "kind": 6,
        "importPath": "machines.forms",
        "description": "machines.forms",
        "peekOfCode": "class MachineForm(forms.ModelForm):\n    class Meta:\n        model = Machine\n        fields = ['machine_name', 'machine_code']\nclass Machine_OrderForm(forms.ModelForm):\n    machine = forms.ModelMultipleChoiceField(\n        queryset=Machine.objects.all(),\n        widget=forms.CheckboxSelectMultiple(\n            attrs={'style': 'margin-bottom: 13px;'}\n        ),",
        "detail": "machines.forms",
        "documentation": {}
    },
    {
        "label": "Machine_OrderForm",
        "kind": 6,
        "importPath": "machines.forms",
        "description": "machines.forms",
        "peekOfCode": "class Machine_OrderForm(forms.ModelForm):\n    machine = forms.ModelMultipleChoiceField(\n        queryset=Machine.objects.all(),\n        widget=forms.CheckboxSelectMultiple(\n            attrs={'style': 'margin-bottom: 13px;'}\n        ),\n    )\n    order = forms.ModelChoiceField(\n        queryset=Order.objects.all(),\n        widget=forms.Select(attrs={'class': 'form-control'}),",
        "detail": "machines.forms",
        "documentation": {}
    },
    {
        "label": "Machine",
        "kind": 6,
        "importPath": "machines.models",
        "description": "machines.models",
        "peekOfCode": "class Machine(models.Model):\n    machine_CHOICES = (  \n#printing \n    ('تجهيز ورق', 'تجهيز ورق'),\n    ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'),\n    ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'),\n    ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'),\n    ('SORM طباعة نص', 'SORM طباعة نص'),\n    ('SM(2) طباعة نص', 'SM(2) طباعة نص'),\n    ('SM طباعة فرخ', 'SM طباعة فرخ'),",
        "detail": "machines.models",
        "documentation": {}
    },
    {
        "label": "Machine_Order",
        "kind": 6,
        "importPath": "machines.models",
        "description": "machines.models",
        "peekOfCode": "class Machine_Order(models.Model):\n    machine = models.ManyToManyField(Machine)\n    order = models.OneToOneField(Order, on_delete=models.CASCADE)\n    paper_processing = models.PositiveIntegerField(blank=True, null=True, verbose_name='تجهيز ورق')\n    gto1_print_quarter = models.PositiveIntegerField(blank=True, null=True, verbose_name='GTO(1) طباعة ربع')\n    sm2_print_quarter = models.PositiveIntegerField(blank=True, null=True, verbose_name='SM(2) طباعة ربع')\n    sm5_print_quarter = models.PositiveIntegerField(blank=True, null=True, verbose_name='SM(5) طباعة ربع')\n    sorm_print_half = models.PositiveIntegerField(blank=True, null=True, verbose_name='SORM طباعة نص')\n    sm2_print_half = models.PositiveIntegerField(blank=True, null=True, verbose_name='SM(2) طباعة نص')\n    sm_print_chick = models.PositiveIntegerField(blank=True, null=True, verbose_name='SM طباعة فرخ')",
        "detail": "machines.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "machines.urls",
        "description": "machines.urls",
        "peekOfCode": "urlpatterns = [\n    path('machine/<int:order_id>/edit/', views.machineorder_edite, name='machine_edit'),\n    # urls.py\n    path('GTO/', views.GTO_view, name='GTO_view'),\n    path('SM2/', views.SM2_view, name='SM2_view'),\n    path('SM5/', views.SM5_view, name='SM5_view'),\n    path('SORM/', views.SORM_view, name='SORM_view'),\n    path('SM2_half/', views.SM2_half_view, name='SM2_half_view'),\n    path('SM_full/', views.SM_full_view, name='SM_full_view'),\n    path('CD5/', views.CD5_view, name='CD5_view'),",
        "detail": "machines.urls",
        "documentation": {}
    },
    {
        "label": "machineorder_edite",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def machineorder_edite(request, order_id):\n    order = get_object_or_404(Order, pk=order_id)\n    machine_order, _ = Machine_Order.objects.get_or_create(order=order)\n    if request.method == 'POST':\n        form = Machine_OrderForm(request.POST, instance=machine_order)\n        if form.is_valid():\n            form.save()  # حفظ البيانات في قاعدة البيانات\n            return redirect('orders')\n    else:\n        form = Machine_OrderForm(instance=machine_order)",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "machine_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def machine_view(request, machine_name, template_name):\n    filtered_machines = [machine_name]\n    machines = Machine_Order.objects.filter(machine__machine_name__in=filtered_machines).distinct()\n    design = machines.filter(order__Ord_states__name__contains='تصميم').order_by('-id')\n    produced_by = machines.filter(order__Ord_states__name__contains='مونتاج').order_by('-id')\n    aflam = machines.filter(order__Ord_states__name__contains='أفلام').order_by('-id')\n    buy_paper = machines.filter(order__Ord_states__name__contains='شراء ورق').order_by('-id')\n    paper = machines.filter(order__Ord_states__name__contains='ورق').exclude(order__Ord_states__name__contains='تجهيز ورق').exclude(order__Ord_states__name__contains='شراء ورق').order_by('-id')\n    chitter = machines.filter(order__Ord_states__name__contains='شيتر').order_by('-id')\n    paper_processing = machines.filter(order__Ord_states__name__contains='تجهيز ورق').order_by('-id')",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "allow_volt_only",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def allow_volt_only(view_func):\n    def _wrapped_view_func(request, *args, **kwargs):\n        if request.user.username == \"volt\":\n            return view_func(request, *args, **kwargs)\n        else:\n            return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return _wrapped_view_func\n@allow_volt_only\ndef GTO_view(request):\n    return machine_view(request, 'GTO(1) طباعة ربع', 'machinfilter/printing.html')",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "GTO_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def GTO_view(request):\n    return machine_view(request, 'GTO(1) طباعة ربع', 'machinfilter/printing.html')\n@allow_volt_only\ndef SM2_view(request):\n    return machine_view(request, 'SM(2) طباعة ربع', 'machinfilter/printing.html')\ndef SORM_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SORM طباعة نص', 'machinfilter/printing.html')\ndef SM2_half_view(request):",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "SM2_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def SM2_view(request):\n    return machine_view(request, 'SM(2) طباعة ربع', 'machinfilter/printing.html')\ndef SORM_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SORM طباعة نص', 'machinfilter/printing.html')\ndef SM2_half_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SM(2) طباعة نص', 'machinfilter/printing.html')",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "SORM_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def SORM_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SORM طباعة نص', 'machinfilter/printing.html')\ndef SM2_half_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SM(2) طباعة نص', 'machinfilter/printing.html')\ndef SM_full_view(request):\n    if request.user.username == \"volt\":",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "SM2_half_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def SM2_half_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SM(2) طباعة نص', 'machinfilter/printing.html')\ndef SM_full_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SM طباعة فرخ', 'machinfilter/printing.html')\n# Create specific views by passing appropriate parameters\n# def GTO_view(request):",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "SM_full_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def SM_full_view(request):\n    if request.user.username == \"volt\":\n        return HttpResponseForbidden(\"You are not allowed to view this page.\")\n    return machine_view(request, 'SM طباعة فرخ', 'machinfilter/printing.html')\n# Create specific views by passing appropriate parameters\n# def GTO_view(request):\n#     return machine_view(request, 'GTO(1) طباعة ربع', 'machinfilter/printing.html')\n# def SM2_view(request):\n#     return machine_view(request, 'SM(2) طباعة ربع', 'machinfilter/printing.html')\ndef SM5_view(request):",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "SM5_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def SM5_view(request):\n     return machine_view(request, 'SM(5) طباعة ربع', 'machinfilter/printing.html')\n# def SORM_view(request):\n#     return machine_view(request, 'SORM طباعة نص', 'machinfilter/printing.html')\n# def SM2_half_view(request):\n#     return machine_view(request, 'SM(2) طباعة نص', 'machinfilter/printing.html')\n# def SM_full_view(request):\n#     return machine_view(request, 'SM طباعة فرخ', 'machinfilter/printing.html')\ndef CD5_view(request):\n     return machine_view(request, 'CD(5) طباعة فرخ', 'machinfilter/printing.html')",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "CD5_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def CD5_view(request):\n     return machine_view(request, 'CD(5) طباعة فرخ', 'machinfilter/printing.html')\n# دالة لإنشاء فلتر بناءً على المراحل\ndef get_filtered_order_query(stages, exclude_stage):\n    filtered_order_query = Q()\n    for stage in stages:\n        if stage != exclude_stage:\n            filtered_order_query |= Q(order__Ord_states__name__contains=stage)\n    return filtered_order_query\n# دالة عامة لعرض النتائج المفلترة",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "get_filtered_order_query",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def get_filtered_order_query(stages, exclude_stage):\n    filtered_order_query = Q()\n    for stage in stages:\n        if stage != exclude_stage:\n            filtered_order_query |= Q(order__Ord_states__name__contains=stage)\n    return filtered_order_query\n# دالة عامة لعرض النتائج المفلترة\ndef filter_view(request, template_name, machine_names, additional_stages):\n    # المرحلة الحالية هي آخر مرحلة في قائمة المراحل\n    current_stage = additional_stages[-1]",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "filter_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def filter_view(request, template_name, machine_names, additional_stages):\n    # المرحلة الحالية هي آخر مرحلة في قائمة المراحل\n    current_stage = additional_stages[-1]\n    # إنشاء فلتر بدون المرحلة الحالية\n    filtered_order_query = get_filtered_order_query(additional_stages, current_stage)\n    machines = Machine_Order.objects.filter(machine__machine_name__in=machine_names).distinct()\n    orders = machines.filter(filtered_order_query).distinct().order_by('-id')\n    section = machines.filter(order__Ord_states__name__contains=current_stage).order_by('-id')\n    context = {\n        'machines': machines,",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "machine_filter_view",
        "kind": 2,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "def machine_filter_view(request, machine_name):\n    machine_names = [machine_name]\n    additional_stages = base_stages[:base_stages.index(machine_name) + 1]\n    return filter_view(request, 'machinfilter/otherfilter.html', machine_names, additional_stages)",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "base_stages",
        "kind": 5,
        "importPath": "machines.views",
        "description": "machines.views",
        "peekOfCode": "base_stages = [\n    'تصميم',\n    'مونتاج',\n    'أفلام',\n    'شراء ورق',\n    'ورق',\n    'شيتر',\n    'تجهيز ورق',\n    'GTO(1) طباعة ربع',\n    'SM(2) طباعة ربع',",
        "detail": "machines.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0001_initial",
        "description": "Order.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('Work_Orders', '0032_alter_design_and_printing_specifications_pro_old_execution_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Paper_and_cardboard_data',\n            fields=[",
        "detail": "Order.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0002_order_ord_annexes_design_data_and_more",
        "description": "Order.migrations.0002_order_ord_annexes_design_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_Annexes_design_data',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='المرفقات للتصميم والتجهيزات الفنيه'),\n        ),",
        "detail": "Order.migrations.0002_order_ord_annexes_design_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0003_alter_order_ord_created_by",
        "description": "Order.migrations.0003_alter_order_ord_created_by",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('Order', '0002_order_ord_annexes_design_data_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Created_By',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Orders', to='auth.user'),",
        "detail": "Order.migrations.0003_alter_order_ord_created_by",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0004_paper_and_cardboard_data_card_order",
        "description": "Order.migrations.0004_paper_and_cardboard_data_card_order",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0003_alter_order_ord_created_by'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='paper_and_cardboard_data',\n            name='CARD_Order',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Order.order', verbose_name='الامر'),\n        ),",
        "detail": "Order.migrations.0004_paper_and_cardboard_data_card_order",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0005_order_ord_code_edited_alter_order_order_details",
        "description": "Order.migrations.0005_order_ord_code_edited_alter_order_order_details",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0004_paper_and_cardboard_data_card_order'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_code_Edited',\n            field=models.CharField(blank=True, max_length=50, null=True),\n        ),",
        "detail": "Order.migrations.0005_order_ord_code_edited_alter_order_order_details",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0006_alter_order_ord_breaking_services_and_more",
        "description": "Order.migrations.0006_alter_order_ord_breaking_services_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0005_order_ord_code_edited_alter_order_order_details'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Breaking_services',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('فورمه جديد', 'فورمه جديد'), ('فورمه قديمه', 'فورمه قديمه'), ('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], max_length=42, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0006_alter_order_ord_breaking_services_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0007_rename_ord_cust_name_order_ord_customer_name",
        "description": "Order.migrations.0007_rename_ord_cust_name_order_ord_customer_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0006_alter_order_ord_breaking_services_and_more'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='order',\n            old_name='Ord_Cust_Name',\n            new_name='Ord_Customer_Name',\n        ),",
        "detail": "Order.migrations.0007_rename_ord_cust_name_order_ord_customer_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0008_alter_order_ord_code_edited_and_more",
        "description": "Order.migrations.0008_alter_order_ord_code_edited_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0007_rename_ord_cust_name_order_ord_customer_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_code_Edited',\n            field=models.CharField(default='', editable=False, max_length=50),\n            preserve_default=False,",
        "detail": "Order.migrations.0008_alter_order_ord_code_edited_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0009_order_states",
        "description": "Order.migrations.0009_order_states",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0008_alter_order_ord_code_edited_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Order_states',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(blank=True, max_length=50, null=True, verbose_name='الاسم')),",
        "detail": "Order.migrations.0009_order_states",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0010_order_ord_states",
        "description": "Order.migrations.0010_order_ord_states",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0009_order_states'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_states',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Order.order_states', verbose_name='المرحلة'),\n        ),",
        "detail": "Order.migrations.0010_order_ord_states",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0011_remove_order_customer_representative_and_more",
        "description": "Order.migrations.0011_remove_order_customer_representative_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0010_order_ord_states'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='customer_representative',\n        ),\n        migrations.AlterField(",
        "detail": "Order.migrations.0011_remove_order_customer_representative_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0012_order_ord_breaking_services_two_and_more",
        "description": "Order.migrations.0012_order_ord_breaking_services_two_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0011_remove_order_customer_representative_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0012_order_ord_breaking_services_two_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0013_alter_order_ord_breaking_services_two",
        "description": "Order.migrations.0013_alter_order_ord_breaking_services_two",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0012_order_ord_breaking_services_two_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], default=0, max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0013_alter_order_ord_breaking_services_two",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0014_alter_order_ord_breaking_services_two",
        "description": "Order.migrations.0014_alter_order_ord_breaking_services_two",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0013_alter_order_ord_breaking_services_two'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('...', '....'), ('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0014_alter_order_ord_breaking_services_two",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0015_alter_order_ord_breaking_services_two",
        "description": "Order.migrations.0015_alter_order_ord_breaking_services_two",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0014_alter_order_ord_breaking_services_two'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0015_alter_order_ord_breaking_services_two",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0016_remove_order_ord_breaking_services_two",
        "description": "Order.migrations.0016_remove_order_ord_breaking_services_two",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0015_alter_order_ord_breaking_services_two'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n        ),\n    ]",
        "detail": "Order.migrations.0016_remove_order_ord_breaking_services_two",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0017_order_ord_breaking_services_two",
        "description": "Order.migrations.0017_order_ord_breaking_services_two",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0016_remove_order_ord_breaking_services_two'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_Breaking_services_two',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('شباك جديد', 'شباك جديد'), ('شباك قديم', 'شباك قديم')], max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0017_order_ord_breaking_services_two",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0018_order_ord_code_pro_order_ord_code_pro_update_and_more",
        "description": "Order.migrations.0018_order_ord_code_pro_order_ord_code_pro_update_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0017_order_ord_breaking_services_two'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order',\n            name='Ord_code_pro',\n            field=models.CharField(blank=True, editable=False, max_length=50, null=True),\n        ),",
        "detail": "Order.migrations.0018_order_ord_code_pro_order_ord_code_pro_update_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0019_alter_order_ord_code_pro_and_more",
        "description": "Order.migrations.0019_alter_order_ord_code_pro_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0018_order_ord_code_pro_order_ord_code_pro_update_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_code_pro',\n            field=models.CharField(default='', editable=False, max_length=50, unique=True),\n            preserve_default=False,",
        "detail": "Order.migrations.0019_alter_order_ord_code_pro_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0020_remove_order_ord_code_pro_and_more",
        "description": "Order.migrations.0020_remove_order_ord_code_pro_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0019_alter_order_ord_code_pro_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='Ord_code_pro',\n        ),\n        migrations.RemoveField(",
        "detail": "Order.migrations.0020_remove_order_ord_code_pro_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0021_remove_order_ord_height_remove_order_ord_length_and_more",
        "description": "Order.migrations.0021_remove_order_ord_height_remove_order_ord_length_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0020_remove_order_ord_code_pro_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='Ord_Height',\n        ),\n        migrations.RemoveField(",
        "detail": "Order.migrations.0021_remove_order_ord_height_remove_order_ord_length_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0022_order_states_update_by_order_states_update_date",
        "description": "Order.migrations.0022_order_states_update_by_order_states_update_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('Order', '0021_remove_order_ord_height_remove_order_ord_length_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='order_states',\n            name='update_by',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='auth.user', verbose_name='تم التعديل بواسطة'),",
        "detail": "Order.migrations.0022_order_states_update_by_order_states_update_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0023_remove_order_states_update_by_and_more",
        "description": "Order.migrations.0023_remove_order_states_update_by_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('Order', '0022_order_states_update_by_order_states_update_date'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order_states',\n            name='update_by',\n        ),",
        "detail": "Order.migrations.0023_remove_order_states_update_by_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0024_paper_and_cardboard_data_card_gross_weight_1_and_more",
        "description": "Order.migrations.0024_paper_and_cardboard_data_card_gross_weight_1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0023_remove_order_states_update_by_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='paper_and_cardboard_data',\n            name='CARD_Gross_weight_1',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='الوزن القائم'),\n        ),",
        "detail": "Order.migrations.0024_paper_and_cardboard_data_card_gross_weight_1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0025_paper_and_cardboard_data_card_number_1_and_more",
        "description": "Order.migrations.0025_paper_and_cardboard_data_card_number_1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0024_paper_and_cardboard_data_card_gross_weight_1_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='paper_and_cardboard_data',\n            name='CARD_Number_1',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='العدد'),\n        ),",
        "detail": "Order.migrations.0025_paper_and_cardboard_data_card_number_1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0026_alter_paper_and_cardboard_data_card_gross_weight_and_more",
        "description": "Order.migrations.0026_alter_paper_and_cardboard_data_card_gross_weight_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0025_paper_and_cardboard_data_card_number_1_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='paper_and_cardboard_data',\n            name='CARD_Gross_weight',\n            field=models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='الوزن القائم'),\n        ),",
        "detail": "Order.migrations.0026_alter_paper_and_cardboard_data_card_gross_weight_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0027_remove_paper_and_cardboard_data_card_total_cut_and_fiber_and_more",
        "description": "Order.migrations.0027_remove_paper_and_cardboard_data_card_total_cut_and_fiber_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0026_alter_paper_and_cardboard_data_card_gross_weight_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='paper_and_cardboard_data',\n            name='CARD_Total_cut_and_fiber',\n        ),\n        migrations.AddField(",
        "detail": "Order.migrations.0027_remove_paper_and_cardboard_data_card_total_cut_and_fiber_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0028_remove_order_ord_binding_gluing_order_states_orders_and_more",
        "description": "Order.migrations.0028_remove_order_ord_binding_gluing_order_states_orders_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0027_remove_paper_and_cardboard_data_card_total_cut_and_fiber_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order',\n            name='Ord_Binding_Gluing',\n        ),\n        migrations.AddField(",
        "detail": "Order.migrations.0028_remove_order_ord_binding_gluing_order_states_orders_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0029_remove_order_states_orders_and_more",
        "description": "Order.migrations.0029_remove_order_states_orders_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0028_remove_order_ord_binding_gluing_order_states_orders_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='order_states',\n            name='orders',\n        ),\n        migrations.AlterField(",
        "detail": "Order.migrations.0029_remove_order_states_orders_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0030_alter_order_ord_others",
        "description": "Order.migrations.0030_alter_order_ord_others",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0029_remove_order_states_orders_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Others',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[(' ', ' '), ('كفراج', 'كفراج'), ('تنظيف', 'تنظيف'), ('اخرى', 'اخرى')], max_length=100, null=True, verbose_name='اخرى'),\n        ),",
        "detail": "Order.migrations.0030_alter_order_ord_others",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0031_alter_order_ord_others",
        "description": "Order.migrations.0031_alter_order_ord_others",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0030_alter_order_ord_others'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Others',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('', ''), ('كفراج', 'كفراج'), ('تنظيف', 'تنظيف'), ('اخرى', 'اخرى')], max_length=100, null=True, verbose_name='اخرى'),\n        ),",
        "detail": "Order.migrations.0031_alter_order_ord_others",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0032_alter_order_ord_created_dt",
        "description": "Order.migrations.0032_alter_order_ord_created_dt",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0031_alter_order_ord_others'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Created_Dt',\n            field=models.DateField(auto_now_add=True),\n        ),",
        "detail": "Order.migrations.0032_alter_order_ord_created_dt",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0033_alter_order_states_name",
        "description": "Order.migrations.0033_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0032_alter_order_ord_created_dt'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('', ''), ('Arial', 'Arial'), ('Times New Roman', 'Times New Roman'), ('Verdana', 'Verdana'), ('Helvetica', 'Helvetica'), ('Courier New', 'Courier New'), ('Tahoma', 'Tahoma'), ('Georgia', 'Georgia'), ('Calibri', 'Calibri'), ('Palatino', 'Palatino'), ('Impact', 'Impact'), ('Comic Sans MS', 'Comic Sans MS'), ('Inter', 'Inter'), ('Roboto', 'Roboto'), ('Font Awesome 5 Free', 'Font Awesome 5 Free'), ('auto', 'Auto'), ('cursive', 'Cursive'), ('emoji', 'Emoji'), ('fangsong', 'Fangsong'), ('fantasy', 'Fantasy'), ('inherit', 'Inherit'), ('initial', 'Initial'), ('math', 'Math'), ('monospace', 'Monospace'), ('none', 'None'), ('revert', 'Revert'), ('sans-serif', 'Sans-serif'), ('serif', 'Serif'), ('system-ui', 'System UI'), ('ui-monospace', 'UI Monospace'), ('ui-rounded', 'UI Rounded'), ('ui-sans-serif', 'UI Sans-serif')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0033_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0034_alter_order_states_name",
        "description": "Order.migrations.0034_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0033_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('', ''), ('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('Calibri', 'Calibri'), ('Palatino', 'Palatino'), ('Impact', 'Impact'), ('Comic Sans MS', 'Comic Sans MS'), ('Inter', 'Inter'), ('Roboto', 'Roboto'), ('Font Awesome 5 Free', 'Font Awesome 5 Free'), ('auto', 'Auto'), ('cursive', 'Cursive'), ('emoji', 'Emoji'), ('fangsong', 'Fangsong'), ('fantasy', 'Fantasy'), ('inherit', 'Inherit'), ('initial', 'Initial'), ('math', 'Math'), ('monospace', 'Monospace'), ('none', 'None'), ('revert', 'Revert'), ('sans-serif', 'Sans-serif'), ('serif', 'Serif'), ('system-ui', 'System UI'), ('ui-monospace', 'UI Monospace'), ('ui-rounded', 'UI Rounded'), ('ui-sans-serif', 'UI Sans-serif')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0034_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0035_alter_order_states_name",
        "description": "Order.migrations.0035_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0034_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0035_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0036_alter_order_states_name",
        "description": "Order.migrations.0036_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0035_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], default='جديد', max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0036_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0037_alter_order_states_name",
        "description": "Order.migrations.0037_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0036_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], default='جديد', max_length=50, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0037_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0038_alter_order_states_name",
        "description": "Order.migrations.0038_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0037_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0038_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0039_alter_order_ord_states",
        "description": "Order.migrations.0039_alter_order_ord_states",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0038_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_states',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='Order.order_states', verbose_name='المرحلة'),\n            preserve_default=False,",
        "detail": "Order.migrations.0039_alter_order_ord_states",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0040_alter_order_ord_states",
        "description": "Order.migrations.0040_alter_order_ord_states",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0039_alter_order_ord_states'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_states',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='Order.order_states', verbose_name='المرحلة'),\n        ),",
        "detail": "Order.migrations.0040_alter_order_ord_states",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0041_alter_order_states_name",
        "description": "Order.migrations.0041_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0040_alter_order_ord_states'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('افلام ', 'افلام'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0041_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0042_alter_order_states_name",
        "description": "Order.migrations.0042_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0041_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('أفلام ', 'أفلام'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0042_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0043_alter_order_ord_breaking_services_and_more",
        "description": "Order.migrations.0043_alter_order_ord_breaking_services_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0042_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_Breaking_services',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('', ''), ('فورمه جديد', 'فورمه جديد'), ('فورمه قديمه', 'فورمه قديمه')], max_length=100, null=True, verbose_name='خدمات التكسير'),\n        ),",
        "detail": "Order.migrations.0043_alter_order_ord_breaking_services_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0044_orderdeliverydate_order_ord_delivery_date",
        "description": "Order.migrations.0044_orderdeliverydate_order_ord_delivery_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0043_alter_order_ord_breaking_services_and_more'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='OrderDeliveryDate',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('RDD', models.DateField()),",
        "detail": "Order.migrations.0044_orderdeliverydate_order_ord_delivery_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0045_alter_orderdeliverydate_edd_and_more",
        "description": "Order.migrations.0045_alter_orderdeliverydate_edd_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0044_orderdeliverydate_order_ord_delivery_date'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='orderdeliverydate',\n            name='EDD',\n            field=models.DateField(blank=True, null=True),\n        ),",
        "detail": "Order.migrations.0045_alter_orderdeliverydate_edd_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0046_alter_order_ord_custom_colors_and_more",
        "description": "Order.migrations.0046_alter_order_ord_custom_colors_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0045_alter_orderdeliverydate_edd_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order',\n            name='Ord_custom_colors',\n            field=models.CharField(blank=True, max_length=500, null=True, verbose_name='الوان مخصوصة'),\n        ),",
        "detail": "Order.migrations.0046_alter_order_ord_custom_colors_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0047_alter_order_states_name",
        "description": "Order.migrations.0047_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0046_alter_order_ord_custom_colors_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('أفلام ', 'أفلام'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted'), ('Finshed', 'Finshed')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0047_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0048_alter_order_states_name",
        "description": "Order.migrations.0048_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0047_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('أفلام ', 'أفلام'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted'), ('Finished', 'Finished')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0048_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0049_historicalorder",
        "description": "Order.migrations.0049_historicalorder",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('Work_Orders', '0074_representative_customer_representative'),\n        ('Order', '0048_alter_order_states_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='HistoricalOrder',\n            fields=[",
        "detail": "Order.migrations.0049_historicalorder",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Order.migrations.0050_alter_order_states_name",
        "description": "Order.migrations.0050_alter_order_states_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Order', '0049_historicalorder'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='order_states',\n            name='name',\n            field=models.CharField(blank=True, choices=[('جديد', 'جديد'), ('تصميم', 'تصميم'), ('مونتاج', 'مونتاج'), ('أفلام ', 'أفلام'), ('سلوفان', 'سلوفان'), ('شراء ورق', 'شراء ورق'), ('ورق', 'ورق'), ('شيتر', 'شيتر'), ('تجهيز ورق', 'تجهيز ورق'), ('GTO(1) طباعة ربع', 'GTO(1) طباعة ربع'), ('SM(2) طباعة ربع', 'SM(2) طباعة ربع'), ('SM(5) طباعة ربع', 'SM(5) طباعة ربع'), ('SORM طباعة نص', 'SORM طباعة نص'), ('SM(2) طباعة نص', 'SM(2) طباعة نص'), ('SM طباعة فرخ', 'SM طباعة فرخ'), ('CD(5) طباعة فرخ', 'CD(5) طباعة فرخ'), ('سلوفان', 'سلوفان'), ('خدمات طباعة ورنيش/يوفي', 'خدمات طباعة ورنيش/يوفي'), ('خدمات طباعة خارجي', 'خدمات طباعة خارجي'), ('DIE 46 تكسير', 'DIE 46 تكسير'), ('DIE 57 تكسير', 'DIE 57 تكسير'), ('BOBST تكسير', 'BOBST تكسير'), ('التسليك و التنظيف', 'التسليك و التنظيف'), ('PACTEK 85 تلزيق', 'PACTEK 85 تلزيق'), ('PACTEK 65 تلزيق', 'PACTEK 65 تلزيق'), ('FG  تلزيق', 'FG  تلزيق'), ('SBL  تلزيق', 'SBL  تلزيق'), ('تلزيق يدوي', 'تلزيق يدوي'), ('تجليد', 'تجليد'), ('قص بضاعة منتهية', 'قص بضاعة منتهية'), ('تلزيق خارجي', 'تلزيق خارجي'), ('Under Delivery', 'Under Delivery'), ('Closed', 'Closed'), ('حسابات', 'حسابات'), ('Invoiced', 'Invoiced'), ('Deleted', 'Deleted'), ('Finished', 'Finished')], max_length=50, null=True, verbose_name='الاسم'),\n        ),",
        "detail": "Order.migrations.0050_alter_order_states_name",
        "documentation": {}
    },
    {
        "label": "OrderDeliveryDateAdmin",
        "kind": 6,
        "importPath": "Order.admin",
        "description": "Order.admin",
        "peekOfCode": "class OrderDeliveryDateAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ['RDD', 'EDD']\nadmin.site.register(OrderDeliveryDate, OrderDeliveryDateAdmin)\nclass PaperAndCardboardDataAdmin(ImportExportModelAdmin):\n    pass\nclass OrderStatesAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Paper_and_cardboard_data, PaperAndCardboardDataAdmin)\nadmin.site.register(Order_states, OrderStatesAdmin)\nclass OrderAdmin(ImportExportModelAdmin, SimpleHistoryAdmin):",
        "detail": "Order.admin",
        "documentation": {}
    },
    {
        "label": "PaperAndCardboardDataAdmin",
        "kind": 6,
        "importPath": "Order.admin",
        "description": "Order.admin",
        "peekOfCode": "class PaperAndCardboardDataAdmin(ImportExportModelAdmin):\n    pass\nclass OrderStatesAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Paper_and_cardboard_data, PaperAndCardboardDataAdmin)\nadmin.site.register(Order_states, OrderStatesAdmin)\nclass OrderAdmin(ImportExportModelAdmin, SimpleHistoryAdmin):\n    list_display = ('Ord_work_order_number', 'Ord_states', 'get_product_name', 'Ord_Customer_Name')\n    list_filter = ('Ord_states',)\n    search_fields = ('Ord_work_order_number',)",
        "detail": "Order.admin",
        "documentation": {}
    },
    {
        "label": "OrderStatesAdmin",
        "kind": 6,
        "importPath": "Order.admin",
        "description": "Order.admin",
        "peekOfCode": "class OrderStatesAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Paper_and_cardboard_data, PaperAndCardboardDataAdmin)\nadmin.site.register(Order_states, OrderStatesAdmin)\nclass OrderAdmin(ImportExportModelAdmin, SimpleHistoryAdmin):\n    list_display = ('Ord_work_order_number', 'Ord_states', 'get_product_name', 'Ord_Customer_Name')\n    list_filter = ('Ord_states',)\n    search_fields = ('Ord_work_order_number',)\n    ordering = ('Ord_work_order_number',)\n    list_editable = ('Ord_states',)",
        "detail": "Order.admin",
        "documentation": {}
    },
    {
        "label": "OrderAdmin",
        "kind": 6,
        "importPath": "Order.admin",
        "description": "Order.admin",
        "peekOfCode": "class OrderAdmin(ImportExportModelAdmin, SimpleHistoryAdmin):\n    list_display = ('Ord_work_order_number', 'Ord_states', 'get_product_name', 'Ord_Customer_Name')\n    list_filter = ('Ord_states',)\n    search_fields = ('Ord_work_order_number',)\n    ordering = ('Ord_work_order_number',)\n    list_editable = ('Ord_states',)\n    def get_product_name(self, obj):\n        return obj.Ord_Product.Product_Name\n    get_product_name.short_description = 'Product Name'\n# Register your models here.",
        "detail": "Order.admin",
        "documentation": {}
    },
    {
        "label": "OrderConfig",
        "kind": 6,
        "importPath": "Order.apps",
        "description": "Order.apps",
        "peekOfCode": "class OrderConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'Order'",
        "detail": "Order.apps",
        "documentation": {}
    },
    {
        "label": "add_variable_to_context",
        "kind": 2,
        "importPath": "Order.context_processors",
        "description": "Order.context_processors",
        "peekOfCode": "def add_variable_to_context(request):\n    new_orders_count = Order.objects.filter(Ord_states__name='جديد').count()\n    design_orders_count = Order.objects.filter(Ord_states__name='تصميم').count()\n    montage_orders_count = Order.objects.filter(Ord_states__name='مونتاج').count()\n    total_Prepress_count = new_orders_count + design_orders_count + montage_orders_count\n    films_orders_count = Order.objects.filter(Ord_states__name='أفلام ').count()\n    paper_purchase_orders_count = Order.objects.filter(Ord_states__name='شراء ورق').count()\n    paper_orders_count = Order.objects.filter(Ord_states__name='ورق').count()\n    sheeter_orders_count = Order.objects.filter(Ord_states__name='شيتر').count()\n    total_Paper_Prepration_count = (films_orders_count  +",
        "detail": "Order.context_processors",
        "documentation": {}
    },
    {
        "label": "OrderDeliveryDateForm",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class OrderDeliveryDateForm(forms.ModelForm):\n    RDD = forms.DateField(label='RDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    EDD = forms.DateField(label='EDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    class Meta:\n        model = OrderDeliveryDate\n        fields = ['RDD', 'EDD']\nclass RDDForm(forms.ModelForm):\n    RDD = forms.DateField(label='RDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    class Meta:\n        model = OrderDeliveryDate",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "RDDForm",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class RDDForm(forms.ModelForm):\n    RDD = forms.DateField(label='RDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    class Meta:\n        model = OrderDeliveryDate\n        fields = ['RDD']\nclass EDDForm(forms.ModelForm):\n    EDD = forms.DateField(label='EDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    class Meta:\n        model = OrderDeliveryDate\n        fields = ['EDD']",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "EDDForm",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class EDDForm(forms.ModelForm):\n    EDD = forms.DateField(label='EDD', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    class Meta:\n        model = OrderDeliveryDate\n        fields = ['EDD']\nclass NewOrderForm(forms.ModelForm):\n    #Ord_Created_Dt = forms.DateField(label='التاريخ', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    #Ord_work_order_number = forms.CharField(label='رقم امر الشغل', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    #customer_representative = forms.CharField(label='ممثل العميل', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=True)\n    #Customer_product_code = models.CharField(max_length=50, null=True, blank=True,verbose_name='كود المنتج للعميل')",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "NewOrderForm",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class NewOrderForm(forms.ModelForm):\n    #Ord_Created_Dt = forms.DateField(label='التاريخ', widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),required=False)\n    #Ord_work_order_number = forms.CharField(label='رقم امر الشغل', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    #customer_representative = forms.CharField(label='ممثل العميل', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=True)\n    #Customer_product_code = models.CharField(max_length=50, null=True, blank=True,verbose_name='كود المنتج للعميل')\n    #Company_product_code = models.CharField(max_length=50, null=True, blank=True,verbose_name='كود المنتج للشركة')\n    Ord_Required_quantity = forms.CharField(label='الكمية المطلوبة', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    Ord_import_order_number = forms.CharField(label='رقم امر التوريد', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n#بيانات التصميم والتجهيزات الفنيه \n    Ord_Operation_type =forms.ChoiceField(choices=[('',''),('مكررة','مكررة'),('جديدة','جديدة'),('تعديل','تعديل')],label='نوع العملية',widget=forms.Select(attrs={'class':'form-control'}),required=False)",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "New_Paper_and_cardboard_data_For",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class New_Paper_and_cardboard_data_Form (forms.ModelForm):\n    CARD_Work_order_number_in_chart= forms.CharField(label='رقم امر الشغل فى  الشيتر', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_note_Paper_type_and_size = forms.CharField(label='ملاحظات على نوع الورق ومقاسة', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_Cut_size = forms.CharField(label='مقاس قص السكينه', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_fiber_direction = forms.CharField(label='اتجاه الالياف', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_Total_cut_and_fiber = forms.CharField(label=' الاجمالى للقطع والالياف', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_Total_weight = forms.CharField(label='العدد الاجمالى', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n#-----------------main data------------------------------------------------------------------------------------------------------\n    CARD_Supplier = forms.CharField(label='المورد', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)\n    CARD_Paper_type_and_size = forms.CharField(label='نوع الورق ومقاسة', max_length=50, widget=forms.TextInput(attrs={'class': 'form-control'}),required=False)",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "Order_states_For",
        "kind": 6,
        "importPath": "Order.forms",
        "description": "Order.forms",
        "peekOfCode": "class Order_states_Form (forms.ModelForm):\n    class Meta:\n        model = Order_states\n        fields = ['name',]",
        "detail": "Order.forms",
        "documentation": {}
    },
    {
        "label": "OrderDeliveryDate",
        "kind": 6,
        "importPath": "Order.models",
        "description": "Order.models",
        "peekOfCode": "class OrderDeliveryDate(models.Model):\n    RDD = models.DateField(null=True, blank=True)\n    EDD = models.DateField(null=True, blank=True)\n    def __str__(self):\n        return f\"RDD: {self.RDD}, EDD: {self.EDD}\"\n# Create your models here.\n# Orders Table\nclass Order(models.Model):\n    Ord_delivery_date = models.OneToOneField('OrderDeliveryDate', on_delete=models.CASCADE, null=True, blank=True)\n#---------------------------------------------------------------------------------------------------",
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Order",
        "kind": 6,
        "importPath": "Order.models",
        "description": "Order.models",
        "peekOfCode": "class Order(models.Model):\n    Ord_delivery_date = models.OneToOneField('OrderDeliveryDate', on_delete=models.CASCADE, null=True, blank=True)\n#---------------------------------------------------------------------------------------------------\n    Ord_code_Edited = models.CharField(max_length=50,editable=False)\n    Ord_Created_Dt = models.DateField(auto_now_add=True)\n    Ord_Product = models.ForeignKey('Work_Orders.Product', on_delete=models.CASCADE, null=True, blank=True)\n    Ord_Customer_Name = models.ForeignKey('Work_Orders.Customer', on_delete=models.CASCADE, null=True, blank=True, verbose_name='اسم العميل')\n    Ord_Created_By = models.ForeignKey(User,related_name='Orders',on_delete=models.CASCADE, null=True, blank=True)\n    Ord_updated_by = models.ForeignKey(User,related_name='Orders_updated',on_delete=models.CASCADE, null=True, blank=True)\n    history = HistoricalRecords()",
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Paper_and_cardboard_data",
        "kind": 6,
        "importPath": "Order.models",
        "description": "Order.models",
        "peekOfCode": "class Paper_and_cardboard_data(models.Model):\n    CARD_Work_order_number_in_chart=models.CharField(max_length=50, null=True, blank=True,verbose_name='رقم امر الشغل فى  الشيتر')\n    CARD_note_Paper_type_and_size = models.CharField(max_length=50, null=True, blank=True,verbose_name='ملاحظات على نوع الورق ومقاسة')\n    CARD_Cut_size = models.CharField(max_length=50, null=True, blank=True,verbose_name='مقاس قص السكينه')\n    CARD_fiber_direction = models.CharField(max_length=50, null=True, blank=True,verbose_name='اتجاه الالياف')\n    CARD_Total_weight = models.CharField(max_length=50, null=True, blank=True,verbose_name='العددالاجمالى')\n    CARD_Order = models.ForeignKey(Order, on_delete=models.CASCADE, null=True, blank=True,verbose_name='الامر')\n#--------------------main data------------------------------------------------------------------------------------------------------\n    CARD_Supplier = models.CharField(max_length=50, null=True, blank=True,verbose_name='المورد',default='')\n    CARD_Paper_type_and_size= models.CharField(max_length=50, null=True, blank=True,verbose_name='نوع الورق ومقاسة',default='')",
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "Order_states",
        "kind": 6,
        "importPath": "Order.models",
        "description": "Order.models",
        "peekOfCode": "class Order_states(models.Model):\n    FONT_CHOICES = (\n    ('جديد', 'جديد'),\n    ('تصميم', 'تصميم'),\n    ('مونتاج', 'مونتاج'),\n    ('أفلام ', 'أفلام'),\n    ('سلوفان', 'سلوفان'),\n    ('شراء ورق', 'شراء ورق'),\n    ('ورق', 'ورق'),\n    ('شيتر', 'شيتر'),",
        "detail": "Order.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Order.urls",
        "description": "Order.urls",
        "peekOfCode": "urlpatterns = [\n    path('<int:Sector_id>/<int:Customer_id>/<int:Product_id>', views.product_orders, name='product_orders'),\n    path('<int:Sector_id>/<int:Customer_id>/<int:Product_id>/new', views.new_order, name='new_order'),\n    path('<int:Sector_id>/<int:Customer_id>/<int:Product_id>/<int:Order_id>/edit', views.OrderUpdatedView, name='order_update'),\n    path('<int:Sector_id>/<int:Customer_id>/<int:Product_id>/<int:Order_id>/status', views.OrderStatusupdate, name='order_status_update'),\n    path('<int:Order_id>/print', views.print_order, name='print_order'),\n    #order status url name = open_order\n    path('Prepressied', views.Prepressied, name='Prepressied'),\n    path('paperpreprat', views.paperpreprat_veiw, name='paperpreprat'),\n    path('In_progress', views.In_progress, name='In_progress'),",
        "detail": "Order.urls",
        "documentation": {}
    },
    {
        "label": "OrderDeliveryDateveiw_list",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def OrderDeliveryDateveiw_list(request):    \n    orders = Order.objects.filter(~Q(Ord_states__name__in=['Closed', 'حسابات', 'Invoiced','Deleted'])).order_by('-id')\n    return render(request, 'ODD/ODD_list.html', {'orders': orders})\n@login_required\ndef edit_order_delivery_date(request, order_id):\n    order = get_object_or_404(Order, pk=order_id)\n    order_delivery_date_instance = order.Ord_delivery_date\n    if request.method == 'POST':\n        form = OrderDeliveryDateForm(request.POST, instance=order_delivery_date_instance)\n        if form.is_valid():",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "edit_order_delivery_date",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def edit_order_delivery_date(request, order_id):\n    order = get_object_or_404(Order, pk=order_id)\n    order_delivery_date_instance = order.Ord_delivery_date\n    if request.method == 'POST':\n        form = OrderDeliveryDateForm(request.POST, instance=order_delivery_date_instance)\n        if form.is_valid():\n            order_delivery_date_instance = form.save(commit=False)\n            order_delivery_date_instance.save()\n            order.Ord_delivery_date = order_delivery_date_instance\n            order.save()",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "edit_rdd",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def edit_rdd(request, order_id):\n    order = get_object_or_404(Order, pk=order_id)\n    # Check if delivery date exists, if not create a new instance\n    if order.Ord_delivery_date:\n        rdd_instance = order.Ord_delivery_date\n    else:\n        rdd_instance = OrderDeliveryDate()  # Assuming `OrderDeliveryDate` is the model for `Ord_delivery_date`\n    if request.method == 'POST':\n        form = RDDForm(request.POST, instance=rdd_instance)\n        if form.is_valid():",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "edit_edd",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def edit_edd(request, order_id):\n    order = get_object_or_404(Order, pk=order_id)\n    # Check if delivery date exists, if not create a new instance\n    if order.Ord_delivery_date:\n        edd_instance = order.Ord_delivery_date\n    else:\n        edd_instance = OrderDeliveryDate()  # Assuming `OrderDeliveryDate` is the model for `Ord_delivery_date`\n    if request.method == 'POST':\n        form = EDDForm(request.POST, instance=edd_instance)\n        if form.is_valid():",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "product_orders",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def product_orders(request,Sector_id, Customer_id, Product_id):\n     product = get_object_or_404(Product,  Product_Sector__pk= Sector_id, Product_Customer__pk= Customer_id, pk = Product_id )\n     orders = Order.objects.filter(Ord_Product__pk = Product_id)\n     corrective_actions = CorrectiveActions.objects.filter(product__pk = Product_id)\n     return render (request,'orders/Product_Orders.html',{'product':product ,'orders':orders,'corrective_actions':corrective_actions})\n@login_required\ndef new_corrective_action(request, product_id):\n    if request.method == 'POST':\n        form = CorrectiveActionsForm(request.POST)\n        if form.is_valid():",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "new_corrective_action",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def new_corrective_action(request, product_id):\n    if request.method == 'POST':\n        form = CorrectiveActionsForm(request.POST)\n        if form.is_valid():\n            corrective_action = form.save(commit=False)\n            corrective_action.product_id = product_id\n            corrective_action.save()\n            return redirect('product_orders', Sector_id=corrective_action.product.Product_Sector.pk, Customer_id=corrective_action.product.Product_Customer.pk, Product_id=product_id)\n    else:\n        form = CorrectiveActionsForm()",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "edit_corrective_action",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def edit_corrective_action(request, corrective_action_id):\n    # Get the corrective action object\n    corrective_action = get_object_or_404(CorrectiveActions, pk=corrective_action_id)\n    if request.method == 'POST':\n        # If the request method is POST, initialize the form with the POST data and the instance of corrective action\n        form = CorrectiveActionsForm(request.POST, instance=corrective_action)\n        if form.is_valid():\n            # Save the updated corrective action\n            form.save()\n            #return redirect('product_orders', Sector_id=corrective_action.product.Product_Sector.pk, Customer_id=corrective_action.product.Product_Customer.pk, Product_id=corrective_action.product.pk)",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "new_order",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def new_order(request,Sector_id,Customer_id,Product_id):\n     customer = get_object_or_404(Customer, pk = Customer_id)\n     product = get_object_or_404(Product, Product_Sector__pk = Sector_id, Product_Customer__pk = Customer_id, pk= Product_id)\n     form = NewOrderForm()\n     form_2 = New_Paper_and_cardboard_data_Form()\n     user = User.objects.get(username=request.user)\n     if request.method == \"POST\":\n          form = NewOrderForm(request.POST)\n          form_2 = New_Paper_and_cardboard_data_Form(request.POST)\n          if all ([form.is_valid(),form_2.is_valid()]):",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "OrderUpdatedVie",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def OrderUpdatedView (request,Sector_id,Customer_id,Product_id,Order_id):\n     product = get_object_or_404(Product, Product_Sector__pk = Sector_id, Product_Customer__pk = Customer_id, pk= Product_id)\n     orders = get_object_or_404(Order, pk = Order_id)\n     paper_and_cardboard_data = get_object_or_404(Paper_and_cardboard_data, CARD_Order__pk = Order_id)\n     form = NewOrderForm(instance=orders)\n     form_2 = New_Paper_and_cardboard_data_Form(instance=paper_and_cardboard_data)\n     useredite = User.objects.get(username=request.user)\n     code = orders.Ord_work_order_number\n     orders.Ord_code_Edited = code\n     if request.method == \"POST\":",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "OrderStatusupdate",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def OrderStatusupdate(request,Sector_id,Customer_id,Product_id,Order_id):\n     orders = get_object_or_404(Order, pk = Order_id)\n     form = NewOrderForm(instance=orders.Ord_states)\n     useredite = User.objects.get(username=request.user)\n     code = orders.Ord_work_order_number\n     orders.Ord_code_Edited = code\n     if request.method == \"POST\":\n          form = NewOrderForm(request.POST,instance=orders)\n          if form.is_valid():\n               orders = form.save(commit=False)",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "print_orde",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def print_order (request,Order_id):\n     orders = get_object_or_404(Order, pk = Order_id)\n     paper_and_cardboard_data = get_object_or_404(Paper_and_cardboard_data, CARD_Order__pk = Order_id)\n     return render (request,'orders/print_order.html',{'orders':orders,'paper_and_cardboard_data':paper_and_cardboard_data})         \n#.order_by('-Ord_Created_Dt')\n@login_required\ndef Prepressied (request):\n     New = Order.objects.filter(Ord_states__name__contains='جديد').order_by('-id')\n     design = Order.objects.filter(Ord_states__name__contains = 'تصميم').order_by('-id')\n     Produced_by = Order.objects.filter(Ord_states__name__contains = 'مونتاج').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Prepressie",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Prepressied (request):\n     New = Order.objects.filter(Ord_states__name__contains='جديد').order_by('-id')\n     design = Order.objects.filter(Ord_states__name__contains = 'تصميم').order_by('-id')\n     Produced_by = Order.objects.filter(Ord_states__name__contains = 'مونتاج').order_by('-id')\n     aflam = Order.objects.filter(Ord_states__name__contains = 'أفلام').order_by('-id')\n     Stats = Order_states.objects.all () \n     return render (request,'orders/Prepressied.html',{'Stats':Stats,'New':New,'design':design,'Produced_by':Produced_by,'aflam':aflam,})\n@login_required\ndef paperpreprat_veiw (request):\n     aflam = Order.objects.filter(Ord_states__name__contains = 'أفلام').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "paperpreprat_vei",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def paperpreprat_veiw (request):\n     aflam = Order.objects.filter(Ord_states__name__contains = 'أفلام').order_by('-id')\n     buy_paper = Order.objects.filter(Ord_states__name__contains = 'شراء ورق').order_by('-id')\n     paper = Order.objects.filter(Ord_states__name__contains='ورق').exclude(Ord_states__name__contains='تجهيز ورق').exclude(Ord_states__name__contains='شراء ورق').order_by('-id')\n     chitter = Order.objects.filter(Ord_states__name__contains = 'شيتر').order_by('-id')\n     paper_processing = Order.objects.filter(Ord_states__name__contains = 'تجهيز ورق').order_by('-id')\n     Stats = Order_states.objects.all () \n     return render (request,'orders/paperpreprat.html',{'aflam':aflam,'Stats':Stats,'buy_paper':buy_paper,'paper':paper,'chitter':chitter,'paper_processing':paper_processing})\n#-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n@login_required",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "In_progres",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def In_progress (request):  #PRINTING \n     paper_processing = Order.objects.filter(Ord_states__name__contains = 'تجهيز ورق').order_by('-id')\n     #-------طباعه------------------------------------------------------------------------\n     Gto= Order.objects.filter(Ord_states__name__contains = 'GTO(1) طباعة ربع').order_by('-id')\n     SM = Order.objects.filter(Ord_states__name__contains = 'SM(2) طباعة ربع').order_by('-id')\n     SM5 = Order.objects.filter(Ord_states__name__contains = 'SM(5) طباعة ربع').order_by('-id')#add\n     SORM = Order.objects.filter(Ord_states__name__contains = 'SORM طباعة نص').order_by('-id')\n     SM2 = Order.objects.filter(Ord_states__name__contains = 'SM(2) طباعة نص').order_by('-id')#add\n     SM_chick = Order.objects.filter(Ord_states__name = 'SM طباعة فرخ').order_by('-id')\n     SD_SM = Order.objects.filter(Ord_states__name__contains = 'CD(5) طباعة فرخ').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "PrintingServics_vei",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def PrintingServics_veiw  (request):  #PRINTING \n     cellophane = Order.objects.filter(Ord_states__name__contains = 'سلوفان').order_by('-id')\n     #------- ----خدمات طباعه -------------------------------------------------------------------------\n     Varnish_UV = Order.objects.filter(Ord_states__name__contains = 'خدمات طباعة ورنيش/يوفي').order_by('-id')\n     Outside_printing = Order.objects.filter(Ord_states__name__contains = 'خدمات طباعة خارجي').order_by('-id')\n     #-----------------------تكسير-----------------------------------------------------------------------------\n     return render (request,'orders/PrintingServics.html',{'cellophane':cellophane,'Varnish_UV':Varnish_UV,'Outside_printing':Outside_printing,})\n@login_required\ndef diecvting_veiw (request):  #PRINTING \n     #-----------------------تكسير-----------------------------------------------------------------------------",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "diecvting_vei",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def diecvting_veiw (request):  #PRINTING \n     #-----------------------تكسير-----------------------------------------------------------------------------\n     DIE_46 = Order.objects.filter(Ord_states__name__contains = 'DIE 46 تكسير').order_by('-id')\n     DIE_57 = Order.objects.filter(Ord_states__name__contains = 'DIE 57 تكسير').order_by('-id')\n     BOBST = Order.objects.filter(Ord_states__name__contains = 'BOBST تكسير').order_by('-id')\n     #-------------------------------------------------------------------------------------------------\n     cleaning = Order.objects.filter(Ord_states__name__contains = 'التسليك و التنظيف').order_by('-id')\n     return render (request,'orders/diecvting.html',{'DIE_46':DIE_46,'DIE_57':DIE_57,'BOBST':BOBST,'cleaning':cleaning,})\n@login_required\ndef gluing_veiw (request):  #PRINTING ",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "gluing_vei",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def gluing_veiw (request):  #PRINTING \n     #-----------------------تلزيق------------------------------------------------------------------------\n     BACTED_8S = Order.objects.filter(Ord_states__name__contains = 'PACTEK 85 تلزيق').order_by('-id')\n     BACTECHGS = Order.objects.filter(Ord_states__name__contains = 'PACTEK 65 تلزيق').order_by('-id')\n     FG = Order.objects.filter(Ord_states__name__contains = 'FG  تلزيق').order_by('-id')\n     SBL= Order.objects.filter(Ord_states__name__contains = 'SBL  تلزيق').order_by('-id')\n     Manual = Order.objects.filter(Ord_states__name__contains = 'تلزيق يدوي').order_by('-id')\n     #-------------------------------------------------------------------------------------------------\n     bind = Order.objects.filter(Ord_states__name__contains = 'تجليد').order_by('-id')\n     finished_goods = Order.objects.filter(Ord_states__name__contains = 'قص بضاعة منتهية').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "opend_orders",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def opend_orders(request):\n     New = Order.objects.filter(Ord_states__name__contains='جديد').order_by('-id')\n     design = Order.objects.filter(Ord_states__name__contains = 'تصميم').order_by('-id')\n     Produced_by = Order.objects.filter(Ord_states__name__contains = 'مونتاج').order_by('-id')\n     aflam = Order.objects.filter(Ord_states__name__contains = 'أفلام').order_by('-id')\n     buy_paper = Order.objects.filter(Ord_states__name__contains = 'شراء ورق').order_by('-id')\n     paper = Order.objects.filter(Ord_states__name__contains='ورق').exclude(Ord_states__name__contains='تجهيز ورق').exclude(Ord_states__name__contains='شراء ورق').order_by('-id')\n     chitter = Order.objects.filter(Ord_states__name__contains = 'شيتر').order_by('-id')\n     paper_processing = Order.objects.filter(Ord_states__name__contains = 'تجهيز ورق').order_by('-id')\n     paper_processing = Order.objects.filter(Ord_states__name__contains = 'تجهيز ورق').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Under_Delivery",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Under_Delivery(request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Under Delivery').order_by('-id')\n     return render (request,'ODD/ODD_list.html',{'orders':orders})\n@login_required\ndef Closed (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Finished').order_by('-id')\n     return render (request,'orders/Closed.html',{'Stats':Stats,'orders':orders})\n@login_required\ndef Fenished (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'حسابات').order_by('-id')",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Close",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Closed (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Finished').order_by('-id')\n     return render (request,'orders/Closed.html',{'Stats':Stats,'orders':orders})\n@login_required\ndef Fenished (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'حسابات').order_by('-id')\n     return render (request,'orders/Fenished.html',{'Stats':Stats,'orders':orders})\n@login_required     \ndef In_voiced (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Closed').order_by('-id')     ",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Fenishe",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Fenished (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'حسابات').order_by('-id')\n     return render (request,'orders/Fenished.html',{'Stats':Stats,'orders':orders})\n@login_required     \ndef In_voiced (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Closed').order_by('-id')     \n     return render (request,'orders/In_voiced.html',{'Stats':Stats,'orders':orders})\n@login_required\ndef Deleted (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Deleted').order_by('-id')  ",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "In_voice",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def In_voiced (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Closed').order_by('-id')     \n     return render (request,'orders/In_voiced.html',{'Stats':Stats,'orders':orders})\n@login_required\ndef Deleted (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Deleted').order_by('-id')  \n     return render (request,'orders/Deleted.html',{'Stats':Stats,'orders':orders}) \n@login_required\ndef Order_details (request,Order_id):\n     orders = get_object_or_404(Order, pk = Order_id)",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Delete",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Deleted (request):\n     orders = Order.objects.filter(Ord_states__name__contains = 'Deleted').order_by('-id')  \n     return render (request,'orders/Deleted.html',{'Stats':Stats,'orders':orders}) \n@login_required\ndef Order_details (request,Order_id):\n     orders = get_object_or_404(Order, pk = Order_id)\n     paper_and_cardboard_data = get_object_or_404(Paper_and_cardboard_data, CARD_Order__pk = Order_id)\n     return render (request,'orders/Order_details.html',{'orders':orders,'paper_and_cardboard_data':paper_and_cardboard_data})      \n# veiw to filter order as Order.Ord_Product.customer_representative\n@login_required",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "Order_detail",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def Order_details (request,Order_id):\n     orders = get_object_or_404(Order, pk = Order_id)\n     paper_and_cardboard_data = get_object_or_404(Paper_and_cardboard_data, CARD_Order__pk = Order_id)\n     return render (request,'orders/Order_details.html',{'orders':orders,'paper_and_cardboard_data':paper_and_cardboard_data})      \n# veiw to filter order as Order.Ord_Product.customer_representative\n@login_required\ndef filter_orders_by_representative(request, representative_name):\n    filtered_orders = Order.objects.filter(Ord_Product__customer_representative=representative_name)\n    return render(request, 'ODD/ODD_list.html', {'orders': filtered_orders, 'representative_name': representative_name})",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "filter_orders_by_representative",
        "kind": 2,
        "importPath": "Order.views",
        "description": "Order.views",
        "peekOfCode": "def filter_orders_by_representative(request, representative_name):\n    filtered_orders = Order.objects.filter(Ord_Product__customer_representative=representative_name)\n    return render(request, 'ODD/ODD_list.html', {'orders': filtered_orders, 'representative_name': representative_name})",
        "detail": "Order.views",
        "documentation": {}
    },
    {
        "label": "JQVMap",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class JQVMap:\n  def __init__(self, name, language):\n    self.paths = {}\n    self.name = name\n    self.language = language\n    self.width = 0\n    self.height = 0\n    self.bbox = []\n  def addPath(self, path, code, name):\n    self.paths[code] = {\"path\": path, \"name\": name}",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Converter",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Converter:\n  def __init__(self, config):\n    args = {\n      'buffer_distance': -0.4,\n      'simplify_tolerance': 0.2,\n      'longitude0': 0,\n      'projection': 'mill',\n      'name': 'world',\n      'width': 900,\n      'left': 0,",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Geometry",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Geometry:\n  def __init__(self, geometry, properties):\n    self.geom = geometry\n    self.properties = properties\nclass GeometryProperty(Variable):\n  operations = set([\"equality\", \"membership\"])\n  def __init__(self, name):\n    self.name = name\n  def equals(self, value, context):\n    return context[self.name] == value",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "GeometryProperty",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class GeometryProperty(Variable):\n  operations = set([\"equality\", \"membership\"])\n  def __init__(self, name):\n    self.name = name\n  def equals(self, value, context):\n    return context[self.name] == value\n  def belongs_to(self, value, context):\n    return value in context[self.name]\n  def is_subset(self, value, context):\n    return set(value).issubset(set(context[self.name]))",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "DataSource",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class DataSource:\n  def __init__(self, config):\n    default_config = {\n      \"projection\": \"merc\",\n      \"longitude0\": 0\n    }\n    default_config.update(config)\n    self.config = default_config\n    self.spatialRef = osr.SpatialReference()\n    projString = '+proj='+str(self.config['projection'])+' +a=6381372 +b=6381372 +lat_0=0'",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "PolygonSimplifier",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class PolygonSimplifier:\n  def __init__(self, geometries):\n    self.format = '%.8f %.8f'\n    self.tolerance = 0.05\n    self.geometries = geometries\n    connections = {}\n    counter = 0\n    for geom in geometries:\n      counter += 1\n      polygons = []",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Processor",
        "kind": 6,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Processor:\n  def __init__(self, config):\n    self.config = config\n  def process(self):\n    self.data_sources = {}\n    for action in self.config:\n      getattr(self, action['name'])( action, self.data_sources.get(\".\") )\n  def read_data(self, config, data_source):\n    self.data_sources[\".\"] = DataSource( config )\n    self.data_sources[\".\"].load_data()",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "args = {}\nif len(sys.argv) > 1:\n  paramsJson = open(sys.argv[1], 'r').read()\nelse:\n  paramsJson = sys.stdin.read()\nparamsJson = json.loads(paramsJson)\nprocessor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "paramsJson",
        "kind": 5,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "paramsJson = json.loads(paramsJson)\nprocessor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "processor",
        "kind": 5,
        "importPath": "static.vendors.jqvmap.create.jqvmap",
        "description": "static.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "processor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "JQVMap",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class JQVMap:\n  def __init__(self, name, language):\n    self.paths = {}\n    self.name = name\n    self.language = language\n    self.width = 0\n    self.height = 0\n    self.bbox = []\n  def addPath(self, path, code, name):\n    self.paths[code] = {\"path\": path, \"name\": name}",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Converter",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Converter:\n  def __init__(self, config):\n    args = {\n      'buffer_distance': -0.4,\n      'simplify_tolerance': 0.2,\n      'longitude0': 0,\n      'projection': 'mill',\n      'name': 'world',\n      'width': 900,\n      'left': 0,",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Geometry",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Geometry:\n  def __init__(self, geometry, properties):\n    self.geom = geometry\n    self.properties = properties\nclass GeometryProperty(Variable):\n  operations = set([\"equality\", \"membership\"])\n  def __init__(self, name):\n    self.name = name\n  def equals(self, value, context):\n    return context[self.name] == value",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "GeometryProperty",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class GeometryProperty(Variable):\n  operations = set([\"equality\", \"membership\"])\n  def __init__(self, name):\n    self.name = name\n  def equals(self, value, context):\n    return context[self.name] == value\n  def belongs_to(self, value, context):\n    return value in context[self.name]\n  def is_subset(self, value, context):\n    return set(value).issubset(set(context[self.name]))",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "DataSource",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class DataSource:\n  def __init__(self, config):\n    default_config = {\n      \"projection\": \"merc\",\n      \"longitude0\": 0\n    }\n    default_config.update(config)\n    self.config = default_config\n    self.spatialRef = osr.SpatialReference()\n    projString = '+proj='+str(self.config['projection'])+' +a=6381372 +b=6381372 +lat_0=0'",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "PolygonSimplifier",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class PolygonSimplifier:\n  def __init__(self, geometries):\n    self.format = '%.8f %.8f'\n    self.tolerance = 0.05\n    self.geometries = geometries\n    connections = {}\n    counter = 0\n    for geom in geometries:\n      counter += 1\n      polygons = []",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Processor",
        "kind": 6,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "class Processor:\n  def __init__(self, config):\n    self.config = config\n  def process(self):\n    self.data_sources = {}\n    for action in self.config:\n      getattr(self, action['name'])( action, self.data_sources.get(\".\") )\n  def read_data(self, config, data_source):\n    self.data_sources[\".\"] = DataSource( config )\n    self.data_sources[\".\"].load_data()",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "args",
        "kind": 5,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "args = {}\nif len(sys.argv) > 1:\n  paramsJson = open(sys.argv[1], 'r').read()\nelse:\n  paramsJson = sys.stdin.read()\nparamsJson = json.loads(paramsJson)\nprocessor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "paramsJson",
        "kind": 5,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "paramsJson = json.loads(paramsJson)\nprocessor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "processor",
        "kind": 5,
        "importPath": "static_root.vendors.jqvmap.create.jqvmap",
        "description": "static_root.vendors.jqvmap.create.jqvmap",
        "peekOfCode": "processor = Processor(paramsJson)\nprocessor.process()",
        "detail": "static_root.vendors.jqvmap.create.jqvmap",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0001_initial",
        "description": "storge.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Customer',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100)),",
        "detail": "storge.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0002_supplier_user",
        "description": "storge.migrations.0002_supplier_user",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('storge', '0001_initial'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='supplier',\n            name='user',\n            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "storge.migrations.0002_supplier_user",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0003_alter_supplier_address_alter_supplier_email_and_more",
        "description": "storge.migrations.0003_alter_supplier_address_alter_supplier_email_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0002_supplier_user'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='supplier',\n            name='address',\n            field=models.CharField(max_length=100, verbose_name='العنوان'),\n        ),",
        "detail": "storge.migrations.0003_alter_supplier_address_alter_supplier_email_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0004_alter_iteam_code_alter_iteam_description_and_more",
        "description": "storge.migrations.0004_alter_iteam_code_alter_iteam_description_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0003_alter_supplier_address_alter_supplier_email_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='code',\n            field=models.CharField(max_length=100, unique=True, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0004_alter_iteam_code_alter_iteam_description_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0005_alter_iteam_code_alter_iteam_name",
        "description": "storge.migrations.0005_alter_iteam_code_alter_iteam_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0004_alter_iteam_code_alter_iteam_description_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='code',\n            field=models.CharField(editable=False, max_length=100, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0005_alter_iteam_code_alter_iteam_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0006_remove_iteam_description_remove_iteam_quntity",
        "description": "storge.migrations.0006_remove_iteam_description_remove_iteam_quntity",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0005_alter_iteam_code_alter_iteam_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='iteam',\n            name='description',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0006_remove_iteam_description_remove_iteam_quntity",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0007_alter_iteam_code_alter_iteam_name",
        "description": "storge.migrations.0007_alter_iteam_code_alter_iteam_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0006_remove_iteam_description_remove_iteam_quntity'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='code',\n            field=models.CharField(default='00-00-00-00-000', max_length=100, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0007_alter_iteam_code_alter_iteam_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0008_in_stock_pako_in_stock_pukker_in_stock_sub",
        "description": "storge.migrations.0008_in_stock_pako_in_stock_pukker_in_stock_sub",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0007_alter_iteam_code_alter_iteam_name'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stock',\n            name='pako',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storge.pako'),\n        ),",
        "detail": "storge.migrations.0008_in_stock_pako_in_stock_pukker_in_stock_sub",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0009_alter_iteam_code_alter_iteam_name",
        "description": "storge.migrations.0009_alter_iteam_code_alter_iteam_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0008_in_stock_pako_in_stock_pukker_in_stock_sub'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='code',\n            field=models.CharField(default='00-00-00-00-000', max_length=100, unique=True, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0009_alter_iteam_code_alter_iteam_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0009_alter_pako_grams_alter_pako_linght_and_more",
        "description": "storge.migrations.0009_alter_pako_grams_alter_pako_linght_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0008_in_stock_pako_in_stock_pukker_in_stock_sub'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pako',\n            name='grams',\n            field=models.FloatField(default=0),\n        ),",
        "detail": "storge.migrations.0009_alter_pako_grams_alter_pako_linght_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0010_alter_iteam_code_alter_iteam_name",
        "description": "storge.migrations.0010_alter_iteam_code_alter_iteam_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0009_alter_iteam_code_alter_iteam_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='code',\n            field=models.CharField(default='00-00-00-00-000', max_length=100, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0010_alter_iteam_code_alter_iteam_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0010_remove_pako_grams_remove_sub_grams_and_more",
        "description": "storge.migrations.0010_remove_pako_grams_remove_sub_grams_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0009_alter_pako_grams_alter_pako_linght_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='pako',\n            name='grams',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0010_remove_pako_grams_remove_sub_grams_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0011_remove_in_stock_iteam",
        "description": "storge.migrations.0011_remove_in_stock_iteam",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0010_remove_pako_grams_remove_sub_grams_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='iteam',\n        ),\n    ]",
        "detail": "storge.migrations.0011_remove_in_stock_iteam",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0012_alter_gram_categore_code_alter_gram_categore_name",
        "description": "storge.migrations.0012_alter_gram_categore_code_alter_gram_categore_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0011_remove_in_stock_iteam'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gram_categore',\n            name='code',\n            field=models.CharField(max_length=100),\n        ),",
        "detail": "storge.migrations.0012_alter_gram_categore_code_alter_gram_categore_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0013_linght_width_rename_width_pukker_total_linght_and_more",
        "description": "storge.migrations.0013_linght_width_rename_width_pukker_total_linght_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0012_alter_gram_categore_code_alter_gram_categore_name'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='linght',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.FloatField(default=0, max_length=100)),",
        "detail": "storge.migrations.0013_linght_width_rename_width_pukker_total_linght_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0014_alter_out_stock_date",
        "description": "storge.migrations.0014_alter_out_stock_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0013_linght_width_rename_width_pukker_total_linght_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='out_stock',\n            name='date',\n            field=models.DateTimeField(auto_now_add=True),\n        ),",
        "detail": "storge.migrations.0014_alter_out_stock_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0015_alter_pako_iteam_alter_pukker_iteam_alter_sub_iteam",
        "description": "storge.migrations.0015_alter_pako_iteam_alter_pukker_iteam_alter_sub_iteam",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0014_alter_out_stock_date'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pako',\n            name='iteam',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storge.iteam'),\n        ),",
        "detail": "storge.migrations.0015_alter_pako_iteam_alter_pukker_iteam_alter_sub_iteam",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0016_alter_out_stock_date",
        "description": "storge.migrations.0016_alter_out_stock_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0015_alter_pako_iteam_alter_pukker_iteam_alter_sub_iteam'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='out_stock',\n            name='date',\n            field=models.DateTimeField(blank=True, null=True),\n        ),",
        "detail": "storge.migrations.0016_alter_out_stock_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0017_merge_20230206_1412",
        "description": "storge.migrations.0017_merge_20230206_1412",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0010_alter_iteam_code_alter_iteam_name'),\n        ('storge', '0016_alter_out_stock_date'),\n    ]\n    operations = [\n    ]",
        "detail": "storge.migrations.0017_merge_20230206_1412",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0018_alter_in_stock_date_alter_out_stock_date",
        "description": "storge.migrations.0018_alter_in_stock_date_alter_out_stock_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0017_merge_20230206_1412'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='in_stock',\n            name='date',\n            field=models.DateTimeField(auto_now_add=True, null=True),\n        ),",
        "detail": "storge.migrations.0018_alter_in_stock_date_alter_out_stock_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0019_alter_in_stock_date_alter_in_stock_price_and_more",
        "description": "storge.migrations.0019_alter_in_stock_date_alter_in_stock_price_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0018_alter_in_stock_date_alter_out_stock_date'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='in_stock',\n            name='date',\n            field=models.DateTimeField(blank=True, null=True),\n        ),",
        "detail": "storge.migrations.0019_alter_in_stock_date_alter_in_stock_price_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0020_alter_pukker_number",
        "description": "storge.migrations.0020_alter_pukker_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0019_alter_in_stock_date_alter_in_stock_price_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pukker',\n            name='number',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "storge.migrations.0020_alter_pukker_number",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0021_alter_pukker_number",
        "description": "storge.migrations.0021_alter_pukker_number",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0020_alter_pukker_number'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='pukker',\n            name='number',\n            field=models.IntegerField(blank=True, default=0, null=True),\n        ),",
        "detail": "storge.migrations.0021_alter_pukker_number",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0022_alter_iteam_gram_categore_alter_iteam_linght_and_more",
        "description": "storge.migrations.0022_alter_iteam_gram_categore_alter_iteam_linght_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0021_alter_pukker_number'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='iteam',\n            name='gram_categore',\n            field=models.IntegerField(default=0),\n        ),",
        "detail": "storge.migrations.0022_alter_iteam_gram_categore_alter_iteam_linght_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0023_remove_in_stock_pako_remove_in_stock_pukker_and_more",
        "description": "storge.migrations.0023_remove_in_stock_pako_remove_in_stock_pukker_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0022_alter_iteam_gram_categore_alter_iteam_linght_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='pako',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0023_remove_in_stock_pako_remove_in_stock_pukker_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0024_in_stock_iteam",
        "description": "storge.migrations.0024_in_stock_iteam",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0023_remove_in_stock_pako_remove_in_stock_pukker_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stock',\n            name='iteam',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='storge.iteam'),\n            preserve_default=False,",
        "detail": "storge.migrations.0024_in_stock_iteam",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0025_in_stock_code_in_stock_name",
        "description": "storge.migrations.0025_in_stock_code_in_stock_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0024_in_stock_iteam'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stock',\n            name='code',\n            field=models.CharField(default='00-00-00-00-000000000000-0000', max_length=100, verbose_name='الكود'),\n        ),",
        "detail": "storge.migrations.0025_in_stock_code_in_stock_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0026_remove_in_stock_code_remove_in_stock_iteam_and_more",
        "description": "storge.migrations.0026_remove_in_stock_code_remove_in_stock_iteam_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0025_in_stock_code_in_stock_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='code',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0026_remove_in_stock_code_remove_in_stock_iteam_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0027_in_stoke_detals_in_stock",
        "description": "storge.migrations.0027_in_stoke_detals_in_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0026_remove_in_stock_code_remove_in_stock_iteam_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stoke_detals',\n            name='in_stock',\n            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='storge.in_stock'),\n            preserve_default=False,",
        "detail": "storge.migrations.0027_in_stoke_detals_in_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0028_remove_in_stoke_detals_in_stock_in_stoke_detals_date_and_more",
        "description": "storge.migrations.0028_remove_in_stoke_detals_in_stock_in_stoke_detals_date_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0027_in_stoke_detals_in_stock'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stoke_detals',\n            name='in_stock',\n        ),\n        migrations.AddField(",
        "detail": "storge.migrations.0028_remove_in_stoke_detals_in_stock_in_stoke_detals_date_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0029_alter_in_stoke_detals_date_and_more",
        "description": "storge.migrations.0029_alter_in_stoke_detals_date_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0028_remove_in_stoke_detals_in_stock_in_stoke_detals_date_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='in_stoke_detals',\n            name='date',\n            field=models.DateField(auto_now_add=True, null=True),\n        ),",
        "detail": "storge.migrations.0029_alter_in_stoke_detals_date_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0030_alter_in_stoke_detals_date",
        "description": "storge.migrations.0030_alter_in_stoke_detals_date",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0029_alter_in_stoke_detals_date_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='in_stoke_detals',\n            name='date',\n            field=models.DateField(auto_now_add=True),\n        ),",
        "detail": "storge.migrations.0030_alter_in_stoke_detals_date",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0031_customer_slug",
        "description": "storge.migrations.0031_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0030_alter_in_stoke_detals_date'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='slug',\n            field=models.SlugField(default='', max_length=100, unique=True),\n            preserve_default=False,",
        "detail": "storge.migrations.0031_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0032_alter_customer_slug",
        "description": "storge.migrations.0032_alter_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0031_customer_slug'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='slug',\n            field=models.SlugField(max_length=100),\n        ),",
        "detail": "storge.migrations.0032_alter_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0033_alter_customer_slug",
        "description": "storge.migrations.0033_alter_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0032_alter_customer_slug'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='slug',\n            field=models.SlugField(blank=True, max_length=100, null=True),\n        ),",
        "detail": "storge.migrations.0033_alter_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0034_alter_customer_slug",
        "description": "storge.migrations.0034_alter_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0033_alter_customer_slug'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='slug',\n            field=models.SlugField(default='', max_length=100, unique=True),\n            preserve_default=False,",
        "detail": "storge.migrations.0034_alter_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0035_alter_customer_slug",
        "description": "storge.migrations.0035_alter_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0034_alter_customer_slug'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='slug',\n            field=models.SlugField(blank=True, max_length=100, unique=True),\n        ),",
        "detail": "storge.migrations.0035_alter_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0036_remove_customer_slug",
        "description": "storge.migrations.0036_remove_customer_slug",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0035_alter_customer_slug'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customer',\n            name='slug',\n        ),\n    ]",
        "detail": "storge.migrations.0036_remove_customer_slug",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0037_remove_out_stock_in_stock_remove_out_stock_iteam_and_more",
        "description": "storge.migrations.0037_remove_out_stock_in_stock_remove_out_stock_iteam_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0036_remove_customer_slug'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='In_stock',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0037_remove_out_stock_in_stock_remove_out_stock_iteam_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0038_customer_user_alter_out_stock_customer_and_more",
        "description": "storge.migrations.0038_customer_user_alter_out_stock_customer_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n        ('storge', '0037_remove_out_stock_in_stock_remove_out_stock_iteam_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='user',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),",
        "detail": "storge.migrations.0038_customer_user_alter_out_stock_customer_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0039_remove_in_stock_supplier_in_stock_code_and_more",
        "description": "storge.migrations.0039_remove_in_stock_supplier_in_stock_code_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0038_customer_user_alter_out_stock_customer_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='supplier',\n        ),\n        migrations.AddField(",
        "detail": "storge.migrations.0039_remove_in_stock_supplier_in_stock_code_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0040_in_stock_supplier",
        "description": "storge.migrations.0040_in_stock_supplier",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0039_remove_in_stock_supplier_in_stock_code_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stock',\n            name='supplier',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='storge.supplier', verbose_name='المورد'),\n            preserve_default=False,",
        "detail": "storge.migrations.0040_in_stock_supplier",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0041_remove_in_stock_supplier_and_more",
        "description": "storge.migrations.0041_remove_in_stock_supplier_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0040_in_stock_supplier'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='supplier',\n        ),\n        migrations.AlterField(",
        "detail": "storge.migrations.0041_remove_in_stock_supplier_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0042_instocknumber_states",
        "description": "storge.migrations.0042_instocknumber_states",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0041_remove_in_stock_supplier_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='instocknumber',\n            name='states',\n            field=models.BooleanField(default=False, verbose_name='الحاله'),\n        ),",
        "detail": "storge.migrations.0042_instocknumber_states",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0043_rename_states_instocknumber_status",
        "description": "storge.migrations.0043_rename_states_instocknumber_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0042_instocknumber_states'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='instocknumber',\n            old_name='states',\n            new_name='status',\n        ),",
        "detail": "storge.migrations.0043_rename_states_instocknumber_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0044_alter_instocknumber_status",
        "description": "storge.migrations.0044_alter_instocknumber_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0043_rename_states_instocknumber_status'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='instocknumber',\n            name='status',\n            field=models.CharField(choices=[('تعديل', 'تعديل'), ('نهائى', 'نهائى')], default='تعديل', max_length=100, verbose_name='الحاله'),\n        ),",
        "detail": "storge.migrations.0044_alter_instocknumber_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0045_alter_instocknumber_status",
        "description": "storge.migrations.0045_alter_instocknumber_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0044_alter_instocknumber_status'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='instocknumber',\n            name='status',\n            field=models.CharField(choices=[('تعديل', 'تعديل'), ('نهائي', 'نهائي')], default='تعديل', max_length=100, verbose_name='الحاله'),\n        ),",
        "detail": "storge.migrations.0045_alter_instocknumber_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0046_rename_instocknumber_in_stock_in_stocknumber",
        "description": "storge.migrations.0046_rename_instocknumber_in_stock_in_stocknumber",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0045_alter_instocknumber_status'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='in_stock',\n            old_name='InStockNumber',\n            new_name='in_stocknumber',\n        ),",
        "detail": "storge.migrations.0046_rename_instocknumber_in_stock_in_stocknumber",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0047_alter_in_stock_sheet_out_stocknumber",
        "description": "storge.migrations.0047_alter_in_stock_sheet_out_stocknumber",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0046_rename_instocknumber_in_stock_in_stocknumber'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='in_stock',\n            name='sheet',\n            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='الورقه'),\n        ),",
        "detail": "storge.migrations.0047_alter_in_stock_sheet_out_stocknumber",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0048_remove_out_stock_in_stock_detals_out_stock_in_stock",
        "description": "storge.migrations.0048_remove_out_stock_in_stock_detals_out_stock_in_stock",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0047_alter_in_stock_sheet_out_stocknumber'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='in_stock_detals',\n        ),\n        migrations.AddField(",
        "detail": "storge.migrations.0048_remove_out_stock_in_stock_detals_out_stock_in_stock",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0049_remove_out_stock_code_out_stock_out_stocknumber",
        "description": "storge.migrations.0049_remove_out_stock_code_out_stock_out_stocknumber",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0048_remove_out_stock_in_stock_detals_out_stock_in_stock'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='code',\n        ),\n        migrations.AddField(",
        "detail": "storge.migrations.0049_remove_out_stock_code_out_stock_out_stocknumber",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0050_remove_out_stock_customer",
        "description": "storge.migrations.0050_remove_out_stock_customer",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0049_remove_out_stock_code_out_stock_out_stocknumber'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='customer',\n        ),\n    ]",
        "detail": "storge.migrations.0050_remove_out_stock_customer",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0051_out_stock_total_sheet_out_stock_total_weight",
        "description": "storge.migrations.0051_out_stock_total_sheet_out_stock_total_weight",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0050_remove_out_stock_customer'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='out_stock',\n            name='total_sheet',\n            field=models.IntegerField(default=0, verbose_name='الشيت الكلي'),\n        ),",
        "detail": "storge.migrations.0051_out_stock_total_sheet_out_stock_total_weight",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0052_remove_out_stock_total_sheet_and_more",
        "description": "storge.migrations.0052_remove_out_stock_total_sheet_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0051_out_stock_total_sheet_out_stock_total_weight'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='total_sheet',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0052_remove_out_stock_total_sheet_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0053_in_stock_total_sheet_in_stock_total_weight_and_more",
        "description": "storge.migrations.0053_in_stock_total_sheet_in_stock_total_weight_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0052_remove_out_stock_total_sheet_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='in_stock',\n            name='total_sheet',\n            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='إجمالي الشيت'),\n        ),",
        "detail": "storge.migrations.0053_in_stock_total_sheet_in_stock_total_weight_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0054_remove_in_stock_total_sheet_and_more",
        "description": "storge.migrations.0054_remove_in_stock_total_sheet_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0053_in_stock_total_sheet_in_stock_total_weight_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stock',\n            name='total_sheet',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0054_remove_in_stock_total_sheet_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0055_remove_in_stoke_detals_code_and_more",
        "description": "storge.migrations.0055_remove_in_stoke_detals_code_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0054_remove_in_stock_total_sheet_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='in_stoke_detals',\n            name='code',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0055_remove_in_stoke_detals_code_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0056_out_stock_iteam",
        "description": "storge.migrations.0056_out_stock_iteam",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0055_remove_in_stoke_detals_code_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='out_stock',\n            name='iteam',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='storge.iteam', verbose_name='الصنف'),\n        ),",
        "detail": "storge.migrations.0056_out_stock_iteam",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0057_out_stock_ts_out_stock_tw_out_stock_name",
        "description": "storge.migrations.0057_out_stock_ts_out_stock_tw_out_stock_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0056_out_stock_iteam'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='out_stock',\n            name='TS',\n            field=models.IntegerField(blank=True, default=0, null=True, verbose_name='الشيت الكلي'),\n        ),",
        "detail": "storge.migrations.0057_out_stock_ts_out_stock_tw_out_stock_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0058_remove_out_stock_name",
        "description": "storge.migrations.0058_remove_out_stock_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0057_out_stock_ts_out_stock_tw_out_stock_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='name',\n        ),\n    ]",
        "detail": "storge.migrations.0058_remove_out_stock_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0059_remove_out_stock_ts_remove_out_stock_tw",
        "description": "storge.migrations.0059_remove_out_stock_ts_remove_out_stock_tw",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0058_remove_out_stock_name'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='out_stock',\n            name='TS',\n        ),\n        migrations.RemoveField(",
        "detail": "storge.migrations.0059_remove_out_stock_ts_remove_out_stock_tw",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "storge.migrations.0060_auto_20230625_0122",
        "description": "storge.migrations.0060_auto_20230625_0122",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('storge', '0059_remove_out_stock_ts_remove_out_stock_tw'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='gram_categore',\n            name='code',\n            field=models.CharField(default=0, max_length=3),\n        ),",
        "detail": "storge.migrations.0060_auto_20230625_0122",
        "documentation": {}
    },
    {
        "label": "StorgeConfig",
        "kind": 6,
        "importPath": "storge.apps",
        "description": "storge.apps",
        "peekOfCode": "class StorgeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'storge'",
        "detail": "storge.apps",
        "documentation": {}
    },
    {
        "label": "In_StockFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class In_StockFilter(django_filters.FilterSet):\n    iteam = django_filters.ModelChoiceFilter(queryset=Iteam.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}),label=' اسم الصنف ',required=False)\n    code  = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الرقم')\n    date = django_filters.DateFilter(widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),label='التاريخ')\n    class Meta:\n        model = In_stock\n        fields = '__all__'\n        exclude = ['id', 'supplier', 'date', 'name', 'price','sheet','weaight','in_stocknumber','supplier']\nclass Out_StockFilter(django_filters.FilterSet):\n    in_stock=django_filters.ModelChoiceFilter(queryset=In_stock.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}),label=' اسم الصنف ',required=False)",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "Out_StockFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class Out_StockFilter(django_filters.FilterSet):\n    in_stock=django_filters.ModelChoiceFilter(queryset=In_stock.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}),label=' اسم الصنف ',required=False)\n    iteam=django_filters.ModelChoiceFilter(queryset=Iteam.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}),label=' اسم الصنف ',required=False)\n    date = django_filters.DateFilter(widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),label='التاريخ')\n    class Meta:\n        model = Out_Stock\n        fields = '__all__'\n        exclude = ['id','date','weaight','sheet','price','out_stocknumber','in_stock','iteam','customer']\nclass SupplierFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم ')",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "SupplierFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class SupplierFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم ')\n    phone = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الهاتف')\n    email = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الايميل')\n    class Meta:\n        model = Supplier\n        fields = '__all__'\n        exclude = ['id', 'user', 'name', 'phone', 'address', 'email']        \nclass InStockNumberFilter(django_filters.FilterSet):\n    number = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الرقم')",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "InStockNumberFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class InStockNumberFilter(django_filters.FilterSet):\n    number = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الرقم')\n    supplier = django_filters.ModelChoiceFilter(queryset=Supplier.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='المورد')\n    date = django_filters.DateFilter(widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),label='التاريخ')\n    class Meta:\n        model = InStockNumber\n        fields = '__all__'\n        exclude = ['id', 'user', 'supplier', 'date', 'number','status']\nclass IteamFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم ')",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "IteamFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class IteamFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم ')\n    code = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الكود')\n    #main_categorey = django_filters.ModelChoiceFilter(queryset=Main_categorey.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='القسم الرئيسي')\n    sub_categorey = django_filters.ModelChoiceFilter(queryset=Sub_categorey.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='القسم الفرعي')\n    #peper_type_country = django_filters.ModelChoiceFilter(queryset=Peper_type_country.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='الدولة المصدرة')\n    #degree = django_filters.ModelChoiceFilter(queryset=Degree.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='الدرجة')\n    #linght = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الطول')\n    #width = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='العرض')\n    class Meta:",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "In_stockFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class In_stockFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم')\n    code = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الكود')\n    iteam = django_filters.ModelChoiceFilter(queryset=Iteam.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='الصنف')\n    date = django_filters.DateFilter(field_name='date',widget=forms.DateInput(attrs={'class': 'form-control','type': 'date'}),label='التاريخ')\n    #price = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='السعر')\n    #total = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاجمالي')\n    class Meta:\n        model = In_stock\n        fields = '__all__'",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "CustomerFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class CustomerFilter(django_filters.FilterSet):\n    name = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم')\n    phone = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الهاتف')\n    email = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الايميل')\n    class Meta:\n        model = Customer\n        fields = '__all__'\n        exclude = ['id', 'user', 'name', 'phone', 'address', 'email']\nclass Out_StockNumberFilter(django_filters.FilterSet):\n    number = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الرقم')",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "Out_StockNumberFilter",
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class Out_StockNumberFilter(django_filters.FilterSet):\n    number = django_filters.CharFilter(lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الرقم')\n    customer = django_filters.ModelChoiceFilter(queryset=Customer.objects.all(),widget=forms.Select(attrs={'class': 'form-control'}),label='العميل')\n    date = django_filters.DateFilter(widget=forms.DateInput(attrs={'type': 'date','class': 'form-control'}),label='التاريخ')\n    class Meta:\n        model = Out_StockNumber\n        fields = '__all__'\n        exclude = ['id', 'user', 'customer', 'date', 'number','status']\nclass  out_stockFilter (django_filters.FilterSet):  \n    in_stock_name = django_filters.CharFilter(field_name='in_stock__name',lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم')",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  out_stockFilter (django_filters.FilterSet):  \n    in_stock_name = django_filters.CharFilter(field_name='in_stock__name',lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم')\n    in_stock_code = django_filters.CharFilter(field_name='in_stock__code',lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الكود')\n    date = django_filters.DateFilter(field_name='date',widget=forms.DateInput(attrs={'class': 'form-control','type': 'date'}),label='التاريخ')\n    class Meta:\n        model = Out_Stock\n        fields = '__all__'\n        exclude = ['id','date','weaight','sheet','price','out_stocknumber','in_stock','iteam']\n#In_stoke_detalsFilter"
        },
        "kind": 6,
        "importPath": "storge.filters",
        "description": "storge.filters",
        "peekOfCode": "class  out_stockFilter (django_filters.FilterSet):  \n    in_stock_name = django_filters.CharFilter(field_name='in_stock__name',lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الاسم')\n    in_stock_code = django_filters.CharFilter(field_name='in_stock__code',lookup_expr='icontains',widget=forms.TextInput(attrs={'class': 'form-control ',}),label='الكود')\n    date = django_filters.DateFilter(field_name='date',widget=forms.DateInput(attrs={'class': 'form-control','type': 'date'}),label='التاريخ')\n    class Meta:\n        model = Out_Stock\n        fields = '__all__'\n        exclude = ['id','date','weaight','sheet','price','out_stocknumber','in_stock','iteam']\n#In_stoke_detalsFilter",
        "detail": "storge.filters",
        "documentation": {}
    },
    {
        "label": "SupplierForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class SupplierForm(forms.ModelForm):\n    name = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    phone = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    email = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    address = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    class Meta:\n        model = Supplier\n        fields = ('name', 'phone', 'email', 'address')\nclass InStockNumberForm(forms.ModelForm):\n    supplier = forms.ModelChoiceField(queryset=Supplier.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "InStockNumberForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class InStockNumberForm(forms.ModelForm):\n    supplier = forms.ModelChoiceField(queryset=Supplier.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    class Meta:\n        model = InStockNumber\n        fields = ('supplier',)\n        exclude = ('date','number','status')\nclass InStockNumberForm2(forms.ModelForm):\n    status = forms.ChoiceField(choices=InStockNumber.STATUS, widget=forms.Select(attrs={'class': 'form-control'}),required=False)\n    class Meta:\n        model = InStockNumber",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "InStockNumberForm2",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class InStockNumberForm2(forms.ModelForm):\n    status = forms.ChoiceField(choices=InStockNumber.STATUS, widget=forms.Select(attrs={'class': 'form-control'}),required=False)\n    class Meta:\n        model = InStockNumber\n        fields = ('status',)\n        exclude = ('date','number','supplier')\nclass IteamForm(forms.ModelForm):    \n    main_categorey = forms.ModelChoiceField(queryset=Main_categorey.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    sub_categorey = forms.ModelChoiceField(queryset=Sub_categorey.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    degree = forms.ModelChoiceField(queryset=Degree.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "IteamForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class IteamForm(forms.ModelForm):    \n    main_categorey = forms.ModelChoiceField(queryset=Main_categorey.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    sub_categorey = forms.ModelChoiceField(queryset=Sub_categorey.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    degree = forms.ModelChoiceField(queryset=Degree.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    peper_type_country = forms.ModelChoiceField(queryset=Peper_type_country.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    gram_categore = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control'}),max_value=999)\n    linght = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control'}),max_value=9999)\n    width = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control'}),max_value=9999)\n    class Meta:\n        model = Iteam",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "In_stockForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class In_stockForm(forms.ModelForm):\n    weaight = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'kg'}),label='الوزن',required=False)\n    sheet = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'sheets'}),label='العدد ',required=False,)\n    price = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'LE'}),label='السعر',required=False)\n    iteam = forms.ModelChoiceField(queryset=Iteam.objects.all(), widget=forms.Select(attrs={'class': 'form-control col-lg-12'}),label=' اسم الصنف ',required=False)  \n    class Meta:\n        model = In_stock\n        fields = ('iteam', 'weaight', 'sheet', 'price')\n        exclude = ('id','name','code','supplier','date')\nIn_stockFormSet = formset_factory(In_stockForm, extra=10)",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "CustomerForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class CustomerForm(forms.ModelForm):\n    name = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    phone = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    email = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    address = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    class Meta:\n        model = Customer\n        fields = ('name', 'phone', 'email', 'address')      \n        exclude = ('id',)\nclass Out_StockNumberForm(forms.ModelForm):",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Out_StockNumberForm",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class Out_StockNumberForm(forms.ModelForm):\n    customer = forms.ModelChoiceField(queryset=Customer.objects.all(), widget=forms.Select(attrs={'class': 'form-control'}))\n    class Meta:\n        model = Out_StockNumber\n        fields = ('customer',)\n        exclude = ('date','number','status')\nclass Out_StockNumberForm2(forms.ModelForm):\n    status = forms.ChoiceField(choices=Out_StockNumber.STATUS, widget=forms.Select(attrs={'class': 'form-control'}),required=False)\n    class Meta:\n        model = Out_StockNumber",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Out_StockNumberForm2",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class Out_StockNumberForm2(forms.ModelForm):\n    status = forms.ChoiceField(choices=Out_StockNumber.STATUS, widget=forms.Select(attrs={'class': 'form-control'}),required=False)\n    class Meta:\n        model = Out_StockNumber\n        fields = ('status',)\n        exclude = ('date','number','customer')\nclass Out_stokeForm (forms.ModelForm):\n    weaight = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'kg'}),label='الوزن',required=False)\n    sheet = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'sheets'}),label='العدد ',required=False,)\n    price = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'LE'}),label='السعر',required=False)",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Out_stokeFor",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class Out_stokeForm (forms.ModelForm):\n    weaight = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'kg'}),label='الوزن',required=False)\n    sheet = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'sheets'}),label='العدد ',required=False,)\n    price = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'LE'}),label='السعر',required=False)\n    in_stock= forms.ModelChoiceField(queryset=In_stock.objects.all(), widget=forms.Select(attrs={'class': 'form-control col-lg-12'}),label=' اسم الصنف ',required=False)\n    in_stock_id = forms.IntegerField(widget=forms.HiddenInput(), required=False)\n    class Meta:\n        model = Out_Stock\n        fields = ('in_stock', 'weaight', 'sheet', 'price','in_stock_id')\n        exclude = ('id','name','code','date','out_stocknumber')",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Out_stoke_allFor",
        "kind": 6,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "class Out_stoke_allForm (forms.ModelForm):\n    weaight = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'kg'}),label='الوزن',required=False)\n    sheet = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'sheets'}),label='العدد ',required=False)\n    price = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'LE'}),label='السعر',required=False)\n    in_stock= forms.ModelChoiceField(queryset=In_stock.objects.all(), widget=forms.Select(attrs={'class': 'form-control col-lg-12'}),label=' اسم الصنف ',required=False)\n    class Meta:\n        model = Out_Stock\n        fields = ('in_stock', 'weaight', 'sheet', 'price')\n        exclude = ('id','name','code','customer','date','out_stocknumber')",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "In_stockFormSet",
        "kind": 5,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "In_stockFormSet = formset_factory(In_stockForm, extra=10)\nclass CustomerForm(forms.ModelForm):\n    name = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    phone = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    email = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    address = forms.CharField(widget=forms.TextInput(attrs={'class': 'form-control'}))\n    class Meta:\n        model = Customer\n        fields = ('name', 'phone', 'email', 'address')      \n        exclude = ('id',)",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Out_stokeFormSet",
        "kind": 5,
        "importPath": "storge.forms",
        "description": "storge.forms",
        "peekOfCode": "Out_stokeFormSet = formset_factory(Out_stokeForm, extra=3)\nclass Out_stoke_allForm (forms.ModelForm):\n    weaight = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'kg'}),label='الوزن',required=False)\n    sheet = forms.IntegerField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'sheets'}),label='العدد ',required=False)\n    price = forms.FloatField(widget=forms.TextInput(attrs={'class': 'form-control col-lg-10','placeholder': 'LE'}),label='السعر',required=False)\n    in_stock= forms.ModelChoiceField(queryset=In_stock.objects.all(), widget=forms.Select(attrs={'class': 'form-control col-lg-12'}),label=' اسم الصنف ',required=False)\n    class Meta:\n        model = Out_Stock\n        fields = ('in_stock', 'weaight', 'sheet', 'price')\n        exclude = ('id','name','code','customer','date','out_stocknumber')",
        "detail": "storge.forms",
        "documentation": {}
    },
    {
        "label": "Main_categorey",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Main_categorey(models.Model):\n    name = models.CharField(max_length=100)\n    code = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\n    #code \n    def  code_Main_categorey   (self):\n        return self.code  \nclass Sub_categorey(models.Model):\n    name = models.CharField(max_length=100)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Sub_categorey",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Sub_categorey(models.Model):\n    name = models.CharField(max_length=100)\n    code = models.CharField(max_length=100)\n    main_categorey = models.ForeignKey(Main_categorey, on_delete=models.CASCADE)\n    def __str__(self):\n        return self.name\n    #code\n    def  code_Sub_categorey   (self):\n        return self.code\nclass Peper_type_country(models.Model):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Peper_type_country",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Peper_type_country(models.Model):\n    name = models.CharField(max_length=100)\n    code = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name\n    #code\n    def  code_Peper_type_country   (self):\n        return self.code\nclass Degree(models.Model):\n    name = models.CharField(max_length=100)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Degree",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Degree(models.Model):\n    name = models.CharField(max_length=100)\n    code = models.CharField(max_length=100)\n    def __str__(self):\n        return self.name   \n    #code\n    def  code_Degree   (self):\n        return self.code     \nclass Gram_Categore (models.Model):\n    name = models.FloatField(max_length=100,default=0000)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Gram_Categor",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Gram_Categore (models.Model):\n    name = models.FloatField(max_length=100,default=0000)\n    code = models.CharField(max_length=3,default=0000)\n    def __str__(self):\n        return str (self.name)   \n        #code\n    def  code_Gram_Categore   (self):   \n        return str (self.name)\nclass linght (models.Model):\n    name = models.FloatField(max_length=100 ,default=0000)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "lingh",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class linght (models.Model):\n    name = models.FloatField(max_length=100 ,default=0000)\n    code = models.CharField(max_length=4, default=0000 )\n    def __str__(self):\n        return str (self.name)   \n    #code\n    def  code_linght   (self):   \n        return str (self.name)   \nclass width (models.Model):\n    name = models.FloatField(max_length=100,default=0000)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "widt",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class width (models.Model):\n    name = models.FloatField(max_length=100,default=0000)\n    code = models.CharField(max_length=4,default=0000)\n    def __str__(self):\n        return str (self.name)   \n    #code\n    def  code_width   (self):   \n        return str (self.name)\n#المورديدن\nclass Supplier(models.Model):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Supplier",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Supplier(models.Model):\n    user=models.ForeignKey(User, on_delete=models.CASCADE)\n    name = models.CharField(max_length=100, verbose_name='الاسم')\n    address = models.CharField(max_length=100 , verbose_name='العنوان')\n    phone = models.CharField(max_length=100 , verbose_name='الهاتف')\n    email = models.EmailField(max_length=100 , verbose_name='الايميل')\n    def __str__(self):\n        return str (self.name) \n#الاصناف\nclass Iteam (models.Model):# iteam ",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Itea",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Iteam (models.Model):# iteam \n    code = models.CharField(max_length=100, verbose_name='الكود',default='00-00-00-00-000',  )\n    name = models.CharField(max_length=100, verbose_name='الاسم',default='الاسم الكامل للصنف ', )\n    main_categorey = models.ForeignKey(Main_categorey, on_delete=models.CASCADE, null=True, blank=True)\n    sub_categorey = models.ForeignKey(Sub_categorey, on_delete=models.CASCADE, null=True, blank=True)\n    degree = models.ForeignKey(Degree, on_delete=models.CASCADE, null=True, blank=True)\n    peper_type_country = models.ForeignKey(Peper_type_country, on_delete=models.CASCADE, null=True, blank=True)\n    gram_categore = models.IntegerField(default='000')\n    linght = models.IntegerField(default='0000')\n    width = models.IntegerField(default='0000')",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "InStockNumber",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class InStockNumber(models.Model):\n    STATUS = (\n        ('تعديل', 'تعديل'),\n        ('نهائي', 'نهائي'),\n       )\n    date=models.DateField(auto_now_add=True,verbose_name='التاريخ')\n    number = models.IntegerField(default=0,verbose_name='رقم امر التوريد ')\n    supplier = models.ForeignKey(Supplier, on_delete=models.CASCADE,verbose_name='المورد')\n    status = models.CharField(max_length=100, verbose_name='الحاله',default='تعديل' ,choices=STATUS)\n    def __str__(self):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "In_stock",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class In_stock(models.Model): \n    date = models.DateField(auto_now_add=True,verbose_name='التاريخ',null=True, blank=True)\n    in_stocknumber = models.ForeignKey(InStockNumber, on_delete=models.CASCADE,verbose_name='رقم امر التوريد')\n    iteam = models.ForeignKey(Iteam, on_delete=models.CASCADE,verbose_name='الصنف')\n    weaight = models.FloatField(max_length=100, verbose_name='الوزن',default=0,null=True, blank=True)\n    sheet = models.IntegerField(default=0,null=True, blank=True,verbose_name='الورقه')\n    price = models.FloatField(max_length=100, verbose_name='السعر',default=0,null=True, blank=True)\n    name=models.CharField(max_length=100, verbose_name='الاسم',default='اذن توريد')\n    code=models.CharField(max_length=100, verbose_name='الكود',default='00-00-00-00-000000000000-0000', )\n    def __str__(self):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Customer(models.Model):\n    name = models.CharField(max_length=100, verbose_name='الاسم')\n    user=models.ForeignKey(User, on_delete=models.CASCADE)\n    address = models.CharField(max_length=100, verbose_name='العنوان')\n    phone = models.CharField(max_length=100, verbose_name='الهاتف')\n    email = models.EmailField(max_length=100, verbose_name='الايميل')\n    def __str__(self):\n        return str (self.name)\n# اذن صرف الريسى    \nclass Out_StockNumber(models.Model):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Out_StockNumber",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Out_StockNumber(models.Model):\n    STATUS = (\n        ('تعديل', 'تعديل'),\n        ('نهائي', 'نهائي'),\n    )\n    date = models.DateField(auto_now_add=True,null=True, blank=True,verbose_name='التاريخ')\n    number = models.IntegerField(default=0,verbose_name='رقم امر الصرف ')\n    customer = models.ForeignKey(Customer, on_delete=models.CASCADE,verbose_name='العميل')\n    status = models.CharField(max_length=100, verbose_name='الحاله',default='تعديل' ,choices=STATUS)\n    def __str__(self):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": {
            "name": "",
            "kind": 6,
            "peekOfCode": "class  Out_Stock(models.Model):\n    date = models.DateField(auto_now_add=True,null=True, blank=True,verbose_name='التاريخ')\n    iteam=models.ForeignKey(Iteam, on_delete=models.CASCADE,verbose_name='الصنف',null=True, blank=True)\n    out_stocknumber = models.ForeignKey(Out_StockNumber, on_delete=models.CASCADE,verbose_name='رقم امر الصرف')\n    in_stock= models.ForeignKey(In_stock, on_delete=models.CASCADE,verbose_name='الصنف')\n    weaight = models.FloatField(max_length=100, verbose_name='الوزن',default=0,null=True, blank=True)\n    sheet = models.IntegerField(default=0,null=True, blank=True,verbose_name='الشيت')\n    price = models.FloatField(max_length=100, verbose_name='السعر',default=0,null=True, blank=True)\n    def __str__(self):\n        return str (self.in_stock.name)"
        },
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class  Out_Stock(models.Model):\n    date = models.DateField(auto_now_add=True,null=True, blank=True,verbose_name='التاريخ')\n    iteam=models.ForeignKey(Iteam, on_delete=models.CASCADE,verbose_name='الصنف',null=True, blank=True)\n    out_stocknumber = models.ForeignKey(Out_StockNumber, on_delete=models.CASCADE,verbose_name='رقم امر الصرف')\n    in_stock= models.ForeignKey(In_stock, on_delete=models.CASCADE,verbose_name='الصنف')\n    weaight = models.FloatField(max_length=100, verbose_name='الوزن',default=0,null=True, blank=True)\n    sheet = models.IntegerField(default=0,null=True, blank=True,verbose_name='الشيت')\n    price = models.FloatField(max_length=100, verbose_name='السعر',default=0,null=True, blank=True)\n    def __str__(self):\n        return str (self.in_stock.name)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "In_stoke_detal",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class In_stoke_detals (models.Model):\n    date = models.DateField(auto_now_add=True)\n#البكر #removed\nclass Pukker (models.Model):  \n    weaight = models.FloatField(default=0, null=True, blank=True)\n#البكر الواباكو  #removed\nclass Sub (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)\n#removed\nclass Pako (models.Model):",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Pukke",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Pukker (models.Model):  \n    weaight = models.FloatField(default=0, null=True, blank=True)\n#البكر الواباكو  #removed\nclass Sub (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)\n#removed\nclass Pako (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Su",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Sub (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)\n#removed\nclass Pako (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "Pak",
        "kind": 6,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "class Pako (models.Model):\n    weaight = models.FloatField(default=0, null=True, blank=True)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "set_iteam_code_and_name",
        "kind": 2,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "def set_iteam_code_and_name(sender, instance, **kwargs):\n    instance.code = f\"{instance.main_categorey.code}-{instance.sub_categorey.code}-{instance.degree.code}-{instance.peper_type_country.code}-{instance.gram_categore}{instance.linght}{instance.width}\"\n    instance.name = f\"{instance.main_categorey.name} {instance.sub_categorey.name} {instance.degree.name} {instance.peper_type_country.name} {instance.gram_categore} {instance.linght} {instance.width}\"\nclass InStockNumber(models.Model):\n    STATUS = (\n        ('تعديل', 'تعديل'),\n        ('نهائي', 'نهائي'),\n       )\n    date=models.DateField(auto_now_add=True,verbose_name='التاريخ')\n    number = models.IntegerField(default=0,verbose_name='رقم امر التوريد ')",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "update_instocknumber_count",
        "kind": 2,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "def update_instocknumber_count(sender, instance, created, **kwargs):\n    if created:\n        instance.number = InStockNumber.objects.count()\n        instance.save() \n#اذن التوريد\nclass In_stock(models.Model): \n    date = models.DateField(auto_now_add=True,verbose_name='التاريخ',null=True, blank=True)\n    in_stocknumber = models.ForeignKey(InStockNumber, on_delete=models.CASCADE,verbose_name='رقم امر التوريد')\n    iteam = models.ForeignKey(Iteam, on_delete=models.CASCADE,verbose_name='الصنف')\n    weaight = models.FloatField(max_length=100, verbose_name='الوزن',default=0,null=True, blank=True)",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "set_In_stoke_code",
        "kind": 2,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "def set_In_stoke_code(sender, instance, **kwargs):\n  if instance.iteam:\n    similar_items = In_stock.objects.filter(\n        iteam=instance.iteam.id  \n    )\n    counter = similar_items.count()+1\n    instance.code = f\"{instance.iteam.code}-{str(counter).zfill(4)}\"\n    instance.name = f\"{instance.iteam.name}-{str(counter).zfill(4)}\"\n  else:\n        # Handle the case where iteam is not set",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "update_outstocknumber_count",
        "kind": 2,
        "importPath": "storge.models",
        "description": "storge.models",
        "peekOfCode": "def update_outstocknumber_count(sender, instance, created, **kwargs):\n    if created:\n        instance.number = Out_StockNumber.objects.count()\n        instance.save()\n#اذن صرف \nclass  Out_Stock(models.Model):\n    date = models.DateField(auto_now_add=True,null=True, blank=True,verbose_name='التاريخ')\n    iteam=models.ForeignKey(Iteam, on_delete=models.CASCADE,verbose_name='الصنف',null=True, blank=True)\n    out_stocknumber = models.ForeignKey(Out_StockNumber, on_delete=models.CASCADE,verbose_name='رقم امر الصرف')\n    in_stock= models.ForeignKey(In_stock, on_delete=models.CASCADE,verbose_name='الصنف')",
        "detail": "storge.models",
        "documentation": {}
    },
    {
        "label": "In_StockTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class In_StockTable(tables.Table):\n    class Meta:\n        model = In_stock\n        fields = ('date','name','weaight')\n        attrs = {\"class\": \"table table-striped table-hover\"}\nclass Out_StockTable(tables.Table):\n    class Meta:\n        model = Out_Stock\n        fields = ('date','in_stock.name','weaight')\n        attrs = {\"class\": \"table table-striped table-hover\"}",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "Out_StockTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class Out_StockTable(tables.Table):\n    class Meta:\n        model = Out_Stock\n        fields = ('date','in_stock.name','weaight')\n        attrs = {\"class\": \"table table-striped table-hover\"}\nclass SupplierTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"supplier_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')\n    #name add link to update\n    name = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"in_stock_supplier\" record.pk %}\">{{record.name}}</a>', verbose_name='الاسم')\n    class Meta:",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "SupplierTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class SupplierTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"supplier_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')\n    #name add link to update\n    name = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"in_stock_supplier\" record.pk %}\">{{record.name}}</a>', verbose_name='الاسم')\n    class Meta:\n        model = Supplier\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('name', 'phone', 'address', 'email', 'edit')\n        exclude = ('id',)\nclass InStockNumberTable(tables.Table):",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "InStockNumberTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class InStockNumberTable(tables.Table):\n    #edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"InStockNumber_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')\n    number=tables.TemplateColumn(template_code='<a href=\"{% url \"in_stock\" record.pk %}\">{{record.number}}</a>', verbose_name='العدد')\n    class Meta:\n        model= InStockNumber\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('date','supplier', 'number','status')\n        exclude = ('id',)\nclass IteamTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')    ",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "IteamTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class IteamTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')    \n    class Meta:\n        model = Iteam\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('name','code')\n        exclude = ('id','edit')      \nclass In_stockTable(tables.Table):\n    class Meta:\n        model = In_stock",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "In_stockTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class In_stockTable(tables.Table):\n    class Meta:\n        model = In_stock\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('in_stocknumber','date','name','code','weaight','sheet','price')\n        exclude = ('id',)\nclass stocksTable(tables.Table):\n    class Meta:\n        model = In_stock\n        template_name = \"django_tables2/bootstrap4.html\"",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "stocksTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class stocksTable(tables.Table):\n    class Meta:\n        model = In_stock\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('name','code','price','total_weight','total_sheet','in_stocknumber')\n        exclude = ('id',) \nclass customerTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"custmer_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')  \n    name = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"out_stock_customer\" record.pk %}\">{{record.name}}</a>', verbose_name='الاسم')  \n    class Meta:",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "customerTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class customerTable(tables.Table):\n    edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"custmer_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')  \n    name = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"out_stock_customer\" record.pk %}\">{{record.name}}</a>', verbose_name='الاسم')  \n    class Meta:\n        model = Customer\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('name','phone','address','email','edit')\n        exclude = ('id',)\nclass Out_StockNumberTable(tables.Table):\n    #edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"OutStockNumber_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')  ",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "Out_StockNumberTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class Out_StockNumberTable(tables.Table):\n    #edit = tables.TemplateColumn(orderable=False,template_code='<a href=\"{% url \"OutStockNumber_update\" record.pk %}\"><i class=\"fas fa-edit\"></i></a></a>', verbose_name='تعديل')  \n    number=tables.TemplateColumn(template_code='<a href=\"{% url \"out_stock\" record.pk %}\">{{record.number}}</a>', verbose_name='العدد')  \n    class Meta:\n        model= Out_StockNumber\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('date','customer', 'number','status')\n        exclude = ('id',)\nclass out_stockTable(tables.Table):\n    class Meta:",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "out_stockTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class out_stockTable(tables.Table):\n    class Meta:\n        model = Out_Stock\n        template_name = \"django_tables2/bootstrap4.html\"\n        fields = ('out_stocknumber','date','in_stock.name','in_stock.code','weaight','sheet','price')\n        exclude = ('id',)\nimport django_tables2 as tables\nfrom django.db import models\nfrom .models import Iteam, In_stock, Out_Stock\nclass StockTable(tables.Table):",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "StockTable",
        "kind": 6,
        "importPath": "storge.table",
        "description": "storge.table",
        "peekOfCode": "class StockTable(tables.Table):\n    edit = tables.TemplateColumn(\n        orderable=False,\n        template_code='<a href=\"\"><i class=\"fas fa-edit\"></i></a></a>',\n        verbose_name='تعديل'\n    )\n    total_weight = tables.Column(verbose_name='الوزن الإجمالي', empty_values=(), orderable=False)\n    total_sheets = tables.Column(verbose_name='عدد الأوراق الإجمالي', empty_values=(), orderable=False)\n    class Meta:\n        model = Iteam",
        "detail": "storge.table",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "storge.urls",
        "description": "storge.urls",
        "peekOfCode": "urlpatterns = [  \n    path ('tr', views.transaction, name='transaction'),\n    path('storge/supplier/', views.supplier_view, name='supplier'),\n    path('storge/supplier/add/', views.supplier_add_view, name='supplier_add'),\n    path('storge/supplier/update/<int:pk>/', views.supplier_update_view, name='supplier_update'),\n    path ('storge/iteam/add/', views.iteam_add_view, name='iteam_add'),\n    path ('storge/iteam/', views.iteam_view, name='iteam'),\n    path('storge/InStockNumbery/', views.InStockNember_view, name='InStockNumber'),\n    path('storge/InStockNumbery/update/<int:pk>/', views.InStockNember_update_view, name='InStockNumber_update'),\n    path ('storge/in_stock/<int:pk>/', views.in_stock_view, name='in_stock'),",
        "detail": "storge.urls",
        "documentation": {}
    },
    {
        "label": "transaction",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def transaction(request):\n    in_stock=In_stock.objects.all()\n    out_stock=Out_Stock.objects.all()\n    in_stock_table = In_StockTable(In_stock.objects.order_by('-date'))\n    out_stock_table = Out_StockTable(Out_Stock.objects.order_by('-date'))\n    filterin = In_StockFilter(request.GET, queryset=in_stock)\n    filterout = Out_StockFilter(request.GET, queryset=out_stock)\n    in_stock_table = filterin.qs\n    out_stock_table = filterout.qs\n    in_stock_table = In_StockTable(in_stock_table)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "supplier_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def supplier_view(request):\n    supplier=Supplier.objects.all()\n    table = SupplierTable(supplier)\n    filter = SupplierFilter(request.GET, queryset=supplier)\n    supplier = filter.qs\n    table = SupplierTable(supplier)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    context = { 'supplier': supplier,'filter': filter, 'table': table}\n    return render(request, 'storge/supplier/supplier.html', context)\n#اضافه مورد",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "supplier_add_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def supplier_add_view(request):\n    form = SupplierForm()\n    user = User.objects.first()\n    if request.method == 'POST':\n        form = SupplierForm(request.POST)\n        if form.is_valid():\n            form = form.save(commit=False)\n            form.user = user\n            form.save()\n            return redirect('supplier')",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "supplier_update_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def supplier_update_view(request, pk):\n    supplier = get_object_or_404(Supplier, pk=pk)\n    form = SupplierForm(instance=supplier)\n    user=User.objects.first()\n    if request.method == 'POST':\n        form = SupplierForm(request.POST, instance=supplier)\n        if form.is_valid():\n            form = form.save(commit=False)\n            form.user = user\n            form.save()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "InStockNember_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def InStockNember_view(request):\n    in_stock=InStockNumber.objects.all()\n#defolt sort by number\n    in_stock = in_stock.order_by('-number')\n    table = InStockNumberTable(in_stock)\n    filter = InStockNumberFilter(request.GET, queryset=in_stock)\n    in_stock = filter.qs\n    table = InStockNumberTable(in_stock)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    form = InStockNumberForm()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "InStockNember_update_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def InStockNember_update_view(request, pk):\n    in_stock = get_object_or_404(InStockNumber, pk=pk)\n    form = InStockNumberForm2(instance=in_stock)\n    #number=InStockNumber.objects.get(id=pk)\n    if request.method == 'POST':\n        form = InStockNumberForm2(request.POST, instance=in_stock)\n        if form.is_valid():\n            form = form.save(commit=False)\n            #form.number = number\n            form.save()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "iteam_add_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def iteam_add_view(request):\n    form = IteamForm()\n    if request.method == 'POST':\n        form = IteamForm(request.POST)\n        if form.is_valid():\n            form.save()\n            return redirect('iteam')\n    else:\n        form = IteamForm()\n    context = {'form': form}",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "iteam_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def iteam_view(request):\n    iteam=Iteam.objects.all()\n    table = IteamTable(iteam)\n    filter = IteamFilter(request.GET, queryset=iteam)\n    iteam = filter.qs\n    table = IteamTable(iteam)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    context = { 'iteam': iteam,'filter': filter, 'table': table}\n    return render(request, 'storge/iteam/iteam_main.html', context)\n@login_required(login_url='login')",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "in_stock_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def in_stock_view(request,pk):\n    in_stocknumber = InStockNumber.objects.get(id=pk)\n    in_stock=In_stock.objects.filter(in_stocknumber=in_stocknumber)\n    table = In_stockTable(in_stock)\n    filter = In_stockFilter(request.GET, queryset=in_stock)\n    in_stock = filter.qs\n    table = In_stockTable(in_stock)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    form = In_stockForm()\n    if request.method == 'POST':",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "in_stock_add_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def in_stock_add_view(request, pk):\n    in_stocknumber = get_object_or_404(InStockNumber,pk=pk)\n    formset=In_stockFormSet()\n    if request.method == 'POST':\n        formset=In_stockFormSet(request.POST)\n        if formset.is_valid():\n            for form in formset:\n                in_stock=form.save(commit=False)\n                in_stock.in_stocknumber=in_stocknumber\n                in_stock.save()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "in_stock_supplier_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def in_stock_supplier_view(request,pk):\n    supplier = get_object_or_404(Supplier, pk=pk)\n    in_stocknumber = InStockNumber.objects.get(supplier=supplier)\n    in_stock=In_stock.objects.filter(in_stocknumber=in_stocknumber)\n    table = In_stockTable(in_stock)\n    filter = In_stockFilter(request.GET, queryset=in_stock)\n    in_stock = filter.qs\n    table = In_stockTable(in_stock)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    context = { 'in_stock': in_stock,'filter': filter, 'table': table}",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "out_stock_customer_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def out_stock_customer_view(request, pk):\n    customer = get_object_or_404(Customer, pk=pk)\n    out_StockNumber = Out_StockNumber.objects.filter(customer=customer)\n    out_stoke=Out_Stock.objects.filter(out_stocknumber__in=out_StockNumber)\n    tables = out_stockTable(out_stoke)\n    filter = out_stockFilter(request.GET, queryset=out_stoke)\n    out_stoke = filter.qs\n    tables = out_stockTable(out_stoke)\n    RequestConfig(request, paginate={'per_page': 30}).configure(tables)  \n    context = { 'out_stoke': out_stoke,'filter': filter, 'tables': tables}",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "in_stocks_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def in_stocks_view(request):\n    if request.method == 'POST':\n        form = In_stockForm(request.POST)\n        if form.is_valid():\n            in_stock = form.save(commit=False)\n            in_stock.save()\n            for inner_form in form.inner_form_set:\n                if inner_form.is_valid():\n                    inner_form.instance.in_stock = in_stock\n                    inner_form.save()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "custmer_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def custmer_view(request):\n    custmer=Customer.objects.all()\n    table = customerTable(custmer)\n    filter = CustomerFilter(request.GET, queryset=custmer)\n    custmer = filter.qs\n    table = customerTable(custmer)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    form = CustomerForm()\n    if request.method == 'POST':\n        form = CustomerForm(request.POST)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "custmer_update_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def custmer_update_view(request, pk):\n    custmer = get_object_or_404(Customer, pk=pk)\n    form = CustomerForm(instance=custmer)\n    if request.method == 'POST':\n        form = CustomerForm(request.POST, instance=custmer)\n        if form.is_valid():\n            form.save()\n            return redirect(\"custmer\")\n    context = {'form': form}\n    return render(request, 'storge/customer/customer_edit.html', context)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "Out_StockNumber_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def Out_StockNumber_view(request):\n    out_stocknumber=Out_StockNumber.objects.all() \n    #defolt sort by number\n    out_stocknumber = Out_StockNumber.objects.order_by('-number') \n    table = Out_StockNumberTable(out_stocknumber)\n    filter = Out_StockNumberFilter(request.GET, queryset=out_stocknumber)\n    out_stocknumber = filter.qs\n    table = Out_StockNumberTable(out_stocknumber)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    form = Out_StockNumberForm()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "Out_StockNumber_update_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def Out_StockNumber_update_view(request, pk):\n    out_stocknumber = get_object_or_404(Out_StockNumber, pk=pk)\n    form = Out_StockNumberForm2(instance=out_stocknumber)\n    if request.method == 'POST':\n        form = Out_StockNumberForm2(request.POST, instance=out_stocknumber)\n        if form.is_valid():\n            form.save()\n            return redirect(\"OutStockNumber\")\n    context = {'form': form}\n    return render(request, 'storge/OutStock/out_stocknumber_edit.html', context)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "out_stock_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def out_stock_view(request, pk): \n    out_stocknumber = get_object_or_404(Out_StockNumber, pk=pk)\n    out_stoke= Out_Stock.objects.filter(out_stocknumber=out_stocknumber)\n    tables = out_stockTable(out_stoke)\n    filter = out_stockFilter(request.GET, queryset=out_stoke)\n    out_stoke = filter.qs\n    tables = out_stockTable(out_stoke)\n    RequestConfig(request, paginate={'per_page': 30}).configure(tables)\n    form = Out_stokeForm()\n    if request.method == 'POST':",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "out_stock_add_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def out_stock_add_view(request, pk):\n    out_stocknumber = get_object_or_404(Out_StockNumber,pk=pk)\n    formset=Out_stokeFormSet()\n    if request.method == 'POST':\n        formset=Out_stokeFormSet(request.POST)\n        if formset.is_valid():\n            for form in formset:\n                out_stoke=form.save(commit=False)\n                out_stoke.out_stocknumber=out_stocknumber\n                out_stoke.save()",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "out_stock_update_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def out_stock_update_view(request, pk):\n    out_stoke = get_object_or_404(Out_Stock, pk=pk)\n    form = Out_stokeForm(instance=out_stoke)\n    if request.method == 'POST':\n        form = Out_stokeForm(request.POST, instance=out_stoke)\n        if form.is_valid():\n            form.save()\n            return redirect(\"out_stoke\")\n    context = {'form': form}\n    return render(request, 'storge/OutStock/out_stoke_edit.html', context)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "out_stock_all_view",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def out_stock_all_view(request):\n    out_stoke=Out_Stock.objects.all()\n    tables = out_stockTable(out_stoke)\n    filter = out_stockFilter(request.GET, queryset=out_stoke)\n    out_stoke = filter.qs\n    tables = out_stockTable(out_stoke)\n    RequestConfig(request, paginate={'per_page': 30}).configure(tables)\n    form = Out_stoke_allForm()\n    if request.method == 'POST':\n        form = Out_stoke_allForm(request.POST)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "item_stock_vei",
        "kind": 2,
        "importPath": "storge.views",
        "description": "storge.views",
        "peekOfCode": "def item_stock_veiw (request):\n    table = StockTable(Iteam.objects.all())\n    filter = IteamFilter(request.GET, queryset=Iteam.objects.all())\n    table = filter.qs\n    table = StockTable(table)\n    RequestConfig(request, paginate={'per_page': 30}).configure(table)\n    context = {'table': table, 'filter': filter}\n    return render(request, 'storge/main/item_stock.html', context)",
        "detail": "storge.views",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "Users.apps",
        "description": "Users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'Users'",
        "detail": "Users.apps",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Users.urls",
        "description": "Users.urls",
        "peekOfCode": "urlpatterns = [\n        path('signup/', views.signup, name='signup'),\n        path('logout/', auth_views.LogoutView.as_view(),name='logout'),\n        path('login/', auth_views.LoginView.as_view(template_name='Login.html'), name='login'),\n        path('change_password/', auth_views.PasswordChangeView.as_view(template_name='change_password.html'), name='change password'),\n        path('change_password/done/', auth_views.PasswordChangeDoneView.as_view(template_name='change_password_done.html'), name='password_change_done' )\n]",
        "detail": "Users.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "Users.views",
        "description": "Users.views",
        "peekOfCode": "def signup(request):\n    form = UserCreationForm()\n    if request.method =='POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            user = form.save()\n            return redirect('sectors' )\n    return render (request, 'Signup.html', {'form':form})",
        "detail": "Users.views",
        "documentation": {}
    },
    {
        "label": "bin_dir",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "bin_dir = os.path.dirname(abs_file)\nbase = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "base",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "base = bin_dir[: -len(\"Scripts\") - 1]  # strip away the bin part from the __file__, plus the path separator\n# prepend bin to PATH (this file is inside the bin directory)\nos.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"PATH\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"PATH\"] = os.pathsep.join([bin_dir] + os.environ.get(\"PATH\", \"\").split(os.pathsep))\nos.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "os.environ[\"VIRTUAL_ENV\"]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "os.environ[\"VIRTUAL_ENV\"] = base  # virtual env is right above bin directory\n# add the virtual environments libraries to the host python import mechanism\nprev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "prev_length",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "prev_length = len(sys.path)\nfor lib in \"..\\Lib\\site-packages\".split(os.pathsep):\n    path = os.path.realpath(os.path.join(bin_dir, lib))\n    site.addsitedir(path.decode(\"utf-8\") if \"\" else path)\nsys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.path[:]",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.path[:] = sys.path[prev_length:] + sys.path[0:prev_length]\nsys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.real_prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.real_prefix = sys.prefix\nsys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "sys.prefix",
        "kind": 5,
        "importPath": "venv.Scripts.activate_this",
        "description": "venv.Scripts.activate_this",
        "peekOfCode": "sys.prefix = base",
        "detail": "venv.Scripts.activate_this",
        "documentation": {}
    },
    {
        "label": "Tee",
        "kind": 6,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "class Tee:\n    def __init__(self, file):\n        self.f = file\n    def write(self, what):\n        if self.f is not None:\n            try:\n                self.f.write(what.replace(\"\\n\", \"\\r\\n\"))\n            except IOError:\n                pass\n        tee_f.write(what)",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "CopyTo",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def CopyTo(desc, src, dest):\n    import win32api, win32con\n    while 1:\n        try:\n            win32api.CopyFile(src, dest, 0)\n            return\n        except win32api.error as details:\n            if details.winerror==5: # access denied - user not admin.\n                raise\n            if silent:",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "LoadSystemModule",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def LoadSystemModule(lib_dir, modname):\n    # See if this is a debug build.\n    import importlib.util, importlib.machinery\n    suffix = '_d' if '_d.pyd' in importlib.machinery.EXTENSION_SUFFIXES else ''\n    filename = \"%s%d%d%s.dll\" % \\\n               (modname, sys.version_info[0], sys.version_info[1], suffix)\n    filename = os.path.join(lib_dir, \"pywin32_system32\", filename)\n    loader = importlib.machinery.ExtensionFileLoader(modname, filename)\n    spec = importlib.machinery.ModuleSpec(name=modname, loader=loader, origin=filename)\n    mod = importlib.util.module_from_spec(spec)",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "SetPyKeyVal",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def SetPyKeyVal(key_name, value_name, value):\n    root_hkey = get_root_hkey()\n    root_key = winreg.OpenKey(root_hkey, root_key_name)\n    try:\n        my_key = winreg.CreateKey(root_key, key_name)\n        try:\n            winreg.SetValueEx(my_key, value_name, 0, winreg.REG_SZ, value)\n        finally:\n            my_key.Close()\n    finally:",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "RegisterCOMObjects",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def RegisterCOMObjects(register = 1):\n    import win32com.server.register\n    if register:\n        func = win32com.server.register.RegisterClasses\n    else:\n        func = win32com.server.register.UnregisterClasses\n    flags = {}\n    if not verbose:\n        flags['quiet']=1\n    for module, klass_name in com_modules:",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "RegisterPythonwin",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def RegisterPythonwin(register=True):\n    \"\"\" Add (or remove) Pythonwin to context menu for python scripts.\n        ??? Should probably also add Edit command for pys files also.\n        Also need to remove these keys on uninstall, but there's no function\n            like file_created to add registry entries to uninstall log ???\n    \"\"\"\n    import os\n    lib_dir = distutils.sysconfig.get_python_lib(plat_specific=1)\n    classes_root=get_root_hkey()\n    ## Installer executable doesn't seem to pass anything to postinstall script indicating if it's a debug build,",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "get_shortcuts_folder",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def get_shortcuts_folder():\n    if get_root_hkey()==winreg.HKEY_LOCAL_MACHINE:\n        try:\n            fldr = get_special_folder_path(\"CSIDL_COMMON_PROGRAMS\")\n        except OSError:\n            # No CSIDL_COMMON_PROGRAMS on this platform\n            fldr = get_special_folder_path(\"CSIDL_PROGRAMS\")\n    else:\n        # non-admin install - always goes in this user's start menu.\n        fldr = get_special_folder_path(\"CSIDL_PROGRAMS\")",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "get_system_dir",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def get_system_dir():\n    import win32api # we assume this exists.\n    try:\n        import pythoncom\n        import win32process\n        from win32com.shell import shell, shellcon\n        try:\n            if win32process.IsWow64Process():\n                return shell.SHGetSpecialFolderPath(0,shellcon.CSIDL_SYSTEMX86)\n            return shell.SHGetSpecialFolderPath(0,shellcon.CSIDL_SYSTEM)",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "fixup_dbi",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def fixup_dbi():\n    # We used to have a dbi.pyd with our .pyd files, but now have a .py file.\n    # If the user didn't uninstall, they will find the .pyd which will cause\n    # problems - so handle that.\n    import win32api, win32con\n    pyd_name = os.path.join(os.path.dirname(win32api.__file__), \"dbi.pyd\")\n    pyd_d_name = os.path.join(os.path.dirname(win32api.__file__), \"dbi_d.pyd\")\n    py_name = os.path.join(os.path.dirname(win32con.__file__), \"dbi.py\")\n    for this_pyd in (pyd_name, pyd_d_name):\n        this_dest = this_pyd + \".old\"",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "install",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def install(lib_dir):\n    import traceback\n    # The .pth file is now installed as a regular file.\n    # Create the .pth file in the site-packages dir, and use only relative paths\n    # We used to write a .pth directly to sys.prefix - clobber it.\n    if os.path.isfile(os.path.join(sys.prefix, \"pywin32.pth\")):\n        os.unlink(os.path.join(sys.prefix, \"pywin32.pth\"))\n    # The .pth may be new and therefore not loaded in this session.\n    # Setup the paths just in case.\n    for name in \"win32 win32\\\\lib Pythonwin\".split():",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "uninstall",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def uninstall(lib_dir):\n    # First ensure our system modules are loaded from pywin32_system, so\n    # we can remove the ones we copied...\n    LoadSystemModule(lib_dir, \"pywintypes\")\n    LoadSystemModule(lib_dir, \"pythoncom\")\n    try:\n        RegisterCOMObjects(False)\n    except Exception as why:\n        print(\"Failed to unregister COM objects: %s\" % (why,))\n    try:",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "verify_destination",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "def verify_destination(location):\n    if not os.path.isdir(location):\n        raise argparse.ArgumentTypeError(\"Path \\\"{}\\\" does not exist!\".format(location))\n    return location\nif __name__ == '__main__':\n    import argparse\n    parser = argparse.ArgumentParser(formatter_class=argparse.RawDescriptionHelpFormatter,\n                                     description=\"\"\"A post-install script for the pywin32 extensions.\n    * Typical usage:\n    > python pywin32_postinstall.py -install",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "tee_f",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "tee_f = open(os.path.join(tempfile.gettempdir(), 'pywin32_postinstall.log'), \"w\")\nclass Tee:\n    def __init__(self, file):\n        self.f = file\n    def write(self, what):\n        if self.f is not None:\n            try:\n                self.f.write(what.replace(\"\\n\", \"\\r\\n\"))\n            except IOError:\n                pass",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "sys.stderr",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "sys.stderr = Tee(sys.stderr)\nsys.stdout = Tee(sys.stdout)\ncom_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "sys.stdout",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "sys.stdout = Tee(sys.stdout)\ncom_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'\nsilent = 0",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "com_modules",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "com_modules = [\n    # module_name,                      class_names\n    (\"win32com.servers.interp\",         \"Interpreter\"),\n    (\"win32com.servers.dictionary\",     \"DictionaryPolicy\"),\n    (\"win32com.axscript.client.pyscript\",\"PyScript\"),\n]\n# Is this a 'silent' install - ie, avoid all dialogs.\n# Different than 'verbose'\nsilent = 0\n# Verbosity of output messages.",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "silent",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "silent = 0\n# Verbosity of output messages.\nverbose = 1\nver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "verbose",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "verbose = 1\nver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "ver_string",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "ver_string = \"%d.%d\" % (sys.version_info[0], sys.version_info[1])\nroot_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created\n    is_bdist_wininst = True",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "root_key_name",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_postinstall",
        "description": "venv.Scripts.pywin32_postinstall",
        "peekOfCode": "root_key_name = \"Software\\\\Python\\\\PythonCore\\\\\" + ver_string\ntry:\n    # When this script is run from inside the bdist_wininst installer,\n    # file_created() and directory_created() are additional builtin\n    # functions which write lines to Python23\\pywin32-install.log. This is\n    # a list of actions for the uninstaller, the format is inspired by what\n    # the Wise installer also creates.\n    file_created\n    is_bdist_wininst = True\nexcept NameError:",
        "detail": "venv.Scripts.pywin32_postinstall",
        "documentation": {}
    },
    {
        "label": "run_test",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_testall",
        "description": "venv.Scripts.pywin32_testall",
        "peekOfCode": "def run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,\n                             stdout=subprocess.PIPE, stderr=subprocess.STDOUT)\n    data = popen.communicate()[0]\n    if sys.version_info > (3,):\n        sys.stdout.write(data.decode('latin-1'))",
        "detail": "venv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "find_and_run",
        "kind": 2,
        "importPath": "venv.Scripts.pywin32_testall",
        "description": "venv.Scripts.pywin32_testall",
        "peekOfCode": "def find_and_run(possible_locations, script, cmdline_rest=\"\"):\n    for maybe in possible_locations:\n        if os.path.isfile(os.path.join(maybe, script)):\n            run_test(os.path.abspath(os.path.join(maybe, script)), cmdline_rest)\n            break\n    else:\n        raise RuntimeError(\"Failed to locate the test script '%s' in one of %s\"\n                           % (script, possible_locations))\nif __name__ == '__main__':\n    import argparse",
        "detail": "venv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "this_dir",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_testall",
        "description": "venv.Scripts.pywin32_testall",
        "peekOfCode": "this_dir = os.path.dirname(__file__)\nsite_packages = [site.getusersitepackages(), ] + site.getsitepackages()\n# Run a test using subprocess and wait for the result.\n# If we get an returncode != 0, we know that there was an error.\ndef run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,",
        "detail": "venv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "site_packages",
        "kind": 5,
        "importPath": "venv.Scripts.pywin32_testall",
        "description": "venv.Scripts.pywin32_testall",
        "peekOfCode": "site_packages = [site.getusersitepackages(), ] + site.getsitepackages()\n# Run a test using subprocess and wait for the result.\n# If we get an returncode != 0, we know that there was an error.\ndef run_test(script, cmdline_rest=\"\"):\n    dirname, scriptname = os.path.split(script)\n    # some tests prefer to be run from their directory.\n    cmd = [sys.executable, \"-u\", scriptname] + cmdline_rest.split()\n    print(script)\n    popen = subprocess.Popen(cmd, shell=True, cwd=dirname,\n                             stdout=subprocess.PIPE, stderr=subprocess.STDOUT)",
        "detail": "venv.Scripts.pywin32_testall",
        "documentation": {}
    },
    {
        "label": "cmd_doc",
        "kind": 5,
        "importPath": "venv.Scripts.runxlrd",
        "description": "venv.Scripts.runxlrd",
        "peekOfCode": "cmd_doc = \"\"\"\nCommands:\n2rows           Print the contents of first and last row in each sheet\n3rows           Print the contents of first, second and last row in each sheet\nbench           Same as \"show\", but doesn't print -- for profiling\nbiff_count[1]   Print a count of each type of BIFF record in the file\nbiff_dump[1]    Print a dump (char and hex) of the BIFF records in the file\nfonts           hdr + print a dump of all font objects\nhdr             Mini-overview of file (no per-sheet information)\nhotshot         Do a hotshot profile run e.g. ... -f1 hotshot bench bigfile*.xls",
        "detail": "venv.Scripts.runxlrd",
        "documentation": {}
    },
    {
        "label": "options",
        "kind": 5,
        "importPath": "venv.Scripts.runxlrd",
        "description": "venv.Scripts.runxlrd",
        "peekOfCode": "options = None\nif __name__ == \"__main__\":\n    import xlrd\n    import sys\n    import time\n    import glob\n    import traceback\n    import gc\n    from xlrd.timemachine import xrange, REPR\n    class LogHandler(object):",
        "detail": "venv.Scripts.runxlrd",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0001_initial",
        "description": "Work_Orders.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Customer',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "Work_Orders.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0002_account",
        "description": "Work_Orders.migrations.0002_account",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('auth', '0012_alter_user_first_name_max_length'),\n        ('Work_Orders', '0001_initial'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Account',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "Work_Orders.migrations.0002_account",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0003_product_product_sector",
        "description": "Work_Orders.migrations.0003_product_product_sector",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0002_account'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='Product_Sector',\n            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='Product_Sector', to='Work_Orders.sector'),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0003_product_product_sector",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0004_alter_product_product_sector",
        "description": "Work_Orders.migrations.0004_alter_product_product_sector",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0003_product_product_sector'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Sector',\n            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Products', to='Work_Orders.sector'),\n        ),",
        "detail": "Work_Orders.migrations.0004_alter_product_product_sector",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0005_alter_product_product_name",
        "description": "Work_Orders.migrations.0005_alter_product_product_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0004_alter_product_product_sector'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Name',\n            field=models.CharField(max_length=300),\n        ),",
        "detail": "Work_Orders.migrations.0005_alter_product_product_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0006_sector_sector_code",
        "description": "Work_Orders.migrations.0006_sector_sector_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0005_alter_product_product_name'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='sector',\n            name='Sector_code',\n            field=models.PositiveIntegerField(default=0),\n        ),",
        "detail": "Work_Orders.migrations.0006_sector_sector_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0007_rename_sector_code_sector_sector_code",
        "description": "Work_Orders.migrations.0007_rename_sector_code_sector_sector_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0006_sector_sector_code'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='sector',\n            old_name='Sector_code',\n            new_name='Sector_Code',\n        ),",
        "detail": "Work_Orders.migrations.0007_rename_sector_code_sector_sector_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0008_alter_sector_sector_code",
        "description": "Work_Orders.migrations.0008_alter_sector_sector_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0007_rename_sector_code_sector_sector_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sector',\n            name='Sector_Code',\n            field=models.CharField(max_length=2, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0008_alter_sector_sector_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0009_customer_customer_code",
        "description": "Work_Orders.migrations.0009_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0008_alter_sector_sector_code'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(blank=True, max_length=50, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0009_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0010_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0010_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0009_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=50, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0010_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0011_customer_customerss_code",
        "description": "Work_Orders.migrations.0011_customer_customerss_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0010_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='customerss_code',\n            field=models.CharField(max_length=9, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0011_customer_customerss_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0012_remove_customer_customer_code",
        "description": "Work_Orders.migrations.0012_remove_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0011_customer_customerss_code'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='customer',\n            name='customer_code',\n        ),\n    ]",
        "detail": "Work_Orders.migrations.0012_remove_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0013_rename_customerss_code_customer_customer_code",
        "description": "Work_Orders.migrations.0013_rename_customerss_code_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0012_remove_customer_customer_code'),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name='customer',\n            old_name='customerss_code',\n            new_name='customer_code',\n        ),",
        "detail": "Work_Orders.migrations.0013_rename_customerss_code_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0014_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0014_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0013_rename_customerss_code_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(default='', max_length=50, unique=True),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0014_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0015_aftar_print_services_crushing_data_and_more",
        "description": "Work_Orders.migrations.0015_aftar_print_services_crushing_data_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0014_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Aftar_Print_Services',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('pro_aftar_print_services_type', models.CharField(choices=[('ورنيش مائى ', 'ورنيش مائى '), ('يوفى ', 'يوفى '), ('سلوفان ', 'سلوفان '), ('سبوت يوفى  ', 'سبوت يوفى  '), ('بصمه ', 'بصمه '), ('مضلع  ', 'مضلع  ')], max_length=100)),",
        "detail": "Work_Orders.migrations.0015_aftar_print_services_crushing_data_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0016_product_product_paper_specification",
        "description": "Work_Orders.migrations.0016_product_product_paper_specification",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0015_aftar_print_services_crushing_data_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='Product_paper_specification',\n            field=models.ManyToManyField(blank=True, related_name='Products', to='Work_Orders.Paper_Specification'),\n        ),",
        "detail": "Work_Orders.migrations.0016_product_product_paper_specification",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0017_design_and_printing_specifications_attachments_file",
        "description": "Work_Orders.migrations.0017_design_and_printing_specifications_attachments_file",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0016_product_product_paper_specification'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='design_and_printing_specifications',\n            name='attachments_file',\n            field=models.FileField(blank=True, null=True, upload_to='attachments/%Y/%m/%d'),\n        ),",
        "detail": "Work_Orders.migrations.0017_design_and_printing_specifications_attachments_file",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0018_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "description": "Work_Orders.migrations.0018_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0017_design_and_printing_specifications_attachments_file'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_old_execution',\n            field=models.CharField(choices=[('اعدام القديم  ', 'اعدام القديم  ')], max_length=70),\n        ),",
        "detail": "Work_Orders.migrations.0018_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0019_alter_product_product_allowable_increase",
        "description": "Work_Orders.migrations.0019_alter_product_product_allowable_increase",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0018_alter_design_and_printing_specifications_pro_old_execution_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Allowable_increase',\n            field=models.CharField(choices=[('حسب امر الشغل ', 'حسب امر الشغل '), ('10% بحد اقصى ', '10% بحد اقصى ')], default='حسب امر الشغل ', max_length=50),\n        ),",
        "detail": "Work_Orders.migrations.0019_alter_product_product_allowable_increase",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0020_remove_product_product_dicription_and_more",
        "description": "Work_Orders.migrations.0020_remove_product_product_dicription_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0019_alter_product_product_allowable_increase'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='product_dicription',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0020_remove_product_product_dicription_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0021_alter_product_product_allowable_increase",
        "description": "Work_Orders.migrations.0021_alter_product_product_allowable_increase",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0020_remove_product_product_dicription_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Allowable_increase',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('حسب امر الشغل ', 'حسب امر الشغل '), ('10% بحد اقصى ', '10% بحد اقصى ')], default='حسب امر الشغل ', max_length=50),\n        ),",
        "detail": "Work_Orders.migrations.0021_alter_product_product_allowable_increase",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0022_alter_design_and_printing_specifications_pro_old_execution",
        "description": "Work_Orders.migrations.0022_alter_design_and_printing_specifications_pro_old_execution",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0021_alter_product_product_allowable_increase'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_old_execution',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('اعدام القديم  ', 'اعدام القديم  ')], max_length=70),\n        ),",
        "detail": "Work_Orders.migrations.0022_alter_design_and_printing_specifications_pro_old_execution",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0023_design_and_printing_specifications_number_of_sides",
        "description": "Work_Orders.migrations.0023_design_and_printing_specifications_number_of_sides",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0022_alter_design_and_printing_specifications_pro_old_execution'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='design_and_printing_specifications',\n            name='number_of_sides',\n            field=models.CharField(choices=[('وجه', 'وجه'), ('وجهان', 'وجهان'), ('قلاب', 'قلاب')], default='وجه', max_length=10),\n        ),",
        "detail": "Work_Orders.migrations.0023_design_and_printing_specifications_number_of_sides",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0024_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "description": "Work_Orders.migrations.0024_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0023_design_and_printing_specifications_number_of_sides'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='aftar_print_services',\n            name='pro_aftar_print_services_type',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('ورنيش مائى ', 'ورنيش مائى '), ('يوفى ', 'يوفى '), ('سلوفان ', 'سلوفان '), ('سبوت يوفى  ', 'سبوت يوفى  '), ('بصمه ', 'بصمه '), ('مضلع  ', 'مضلع  ')], max_length=100),\n        ),",
        "detail": "Work_Orders.migrations.0024_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0025_remove_paper_specification_pro_paper_type_and_more",
        "description": "Work_Orders.migrations.0025_remove_paper_specification_pro_paper_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0024_alter_aftar_print_services_pro_aftar_print_services_type_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='paper_specification',\n            name='pro_paper_type',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0025_remove_paper_specification_pro_paper_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0026_design_and_printing_specifications_pro_design_ditals_and_more",
        "description": "Work_Orders.migrations.0026_design_and_printing_specifications_pro_design_ditals_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0025_remove_paper_specification_pro_paper_type_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_ditals',\n            field=models.CharField(default='', max_length=200, verbose_name='تفاصيل التصميم '),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0026_design_and_printing_specifications_pro_design_ditals_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0027_alter_design_and_printing_specifications_pro_design_ditals",
        "description": "Work_Orders.migrations.0027_alter_design_and_printing_specifications_pro_design_ditals",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0026_design_and_printing_specifications_pro_design_ditals_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_ditals',\n            field=models.CharField(blank=True, max_length=200, null=True, verbose_name='تفاصيل التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0027_alter_design_and_printing_specifications_pro_design_ditals",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0028_alter_customer_customer_code_and_more",
        "description": "Work_Orders.migrations.0028_alter_customer_customer_code_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0027_alter_design_and_printing_specifications_pro_design_ditals'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0028_alter_customer_customer_code_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0029_alter_design_and_printing_specifications_pro_design_ditals_and_more",
        "description": "Work_Orders.migrations.0029_alter_design_and_printing_specifications_pro_design_ditals_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0028_alter_customer_customer_code_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_ditals',\n            field=models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='تفاصيل التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0029_alter_design_and_printing_specifications_pro_design_ditals_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0030_product_product_ordered_supply",
        "description": "Work_Orders.migrations.0030_product_product_ordered_supply",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0029_alter_design_and_printing_specifications_pro_design_ditals_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='product_Ordered_Supply',\n            field=models.CharField(default='', max_length=50, verbose_name='أمر توريد '),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0030_product_product_ordered_supply",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0031_customer_customer_code_edite_and_more",
        "description": "Work_Orders.migrations.0031_customer_customer_code_edite_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0030_product_product_ordered_supply'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='customer',\n            name='Customer_code_edite',\n            field=models.CharField(default='', editable=False, max_length=20),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0031_customer_customer_code_edite_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0032_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "description": "Work_Orders.migrations.0032_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0031_customer_customer_code_edite_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_old_execution',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('اعدام القديم', 'اعدام القديم')], default=None, max_length=70, null=True, verbose_name=''),\n        ),",
        "detail": "Work_Orders.migrations.0032_alter_design_and_printing_specifications_pro_old_execution_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0033_product_customer_representative_and_more",
        "description": "Work_Orders.migrations.0033_product_customer_representative_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0032_alter_design_and_printing_specifications_pro_old_execution_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='customer_representative',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='ممثل العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0033_product_customer_representative_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0034_alter_design_and_printing_specifications_pro_design_type",
        "description": "Work_Orders.migrations.0034_alter_design_and_printing_specifications_pro_design_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0033_product_customer_representative_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_type',\n            field=models.CharField(choices=[('جديد ', 'جديد '), ('تعديل', 'تعديل'), ('قديم', 'قديم')], max_length=70, verbose_name='نوع التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0034_alter_design_and_printing_specifications_pro_design_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0035_alter_aftar_print_services_pro_aftar_print_services_type",
        "description": "Work_Orders.migrations.0035_alter_aftar_print_services_pro_aftar_print_services_type",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0034_alter_design_and_printing_specifications_pro_design_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='aftar_print_services',\n            name='pro_aftar_print_services_type',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('قص', 'قص'), ('ورنيش ', 'ورنيش '), ('يوفى', 'يوفى'), ('سلوفان', 'سلوفان'), ('سبوت يوفى', 'سبوت يوفى'), ('بصمه', 'بصمه'), ('مضلع', 'مضلع')], default=None, max_length=100, null=True, verbose_name='نوع الخدمه '),\n        ),",
        "detail": "Work_Orders.migrations.0035_alter_aftar_print_services_pro_aftar_print_services_type",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0036_alter_product_customer_representative",
        "description": "Work_Orders.migrations.0036_alter_product_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0035_alter_aftar_print_services_pro_aftar_print_services_type'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='customer_representative',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('د/عمروالباز', 'د/عمروالباز'), ('ا/عمرو احمد', 'ا/عمرو احمد'), ('م/كريم عبد الغنى ', 'م/كريم عبد الغنى ')], default='', max_length=100, verbose_name='ممثل  العميل'),\n            preserve_default=False,",
        "detail": "Work_Orders.migrations.0036_alter_product_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0037_alter_product_product_allowable_increase_and_more",
        "description": "Work_Orders.migrations.0037_alter_product_product_allowable_increase_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0036_alter_product_customer_representative'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Allowable_increase',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('حسب امر الشغل', 'حسب امر الشغل'), ('10% بحد اقصى', '10% بحد اقصى')], default='حسب امر الشغل ', max_length=50, verbose_name='*الزياده المسموح بها  '),\n        ),",
        "detail": "Work_Orders.migrations.0037_alter_product_product_allowable_increase_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0038_alter_product_product_avrage_prdect_ammount",
        "description": "Work_Orders.migrations.0038_alter_product_product_avrage_prdect_ammount",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0037_alter_product_product_allowable_increase_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='product_avrage_prdect_ammount',\n            field=models.CharField(blank=True, default=0, max_length=20, null=True, verbose_name='المتوسط'),\n        ),",
        "detail": "Work_Orders.migrations.0038_alter_product_product_avrage_prdect_ammount",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0039_alter_product_product_code",
        "description": "Work_Orders.migrations.0039_alter_product_product_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0038_alter_product_product_avrage_prdect_ammount'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Code',\n            field=models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='كود العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0039_alter_product_product_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0040_alter_product_product_code",
        "description": "Work_Orders.migrations.0040_alter_product_product_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0039_alter_product_product_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Code',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='كود العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0040_alter_product_product_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0041_alter_design_and_printing_specifications_pro_design_source_and_more",
        "description": "Work_Orders.migrations.0041_alter_design_and_printing_specifications_pro_design_source_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0040_alter_product_product_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_source',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('المطبعه ', 'المطبعه '), ('العميل ', 'العميل ')], default=None, max_length=20, null=True, verbose_name='مصدر التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0041_alter_design_and_printing_specifications_pro_design_source_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0042_alter_design_and_printing_specifications_pro_design_source_and_more",
        "description": "Work_Orders.migrations.0042_alter_design_and_printing_specifications_pro_design_source_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0041_alter_design_and_printing_specifications_pro_design_source_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_source',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('المطبعه', 'المطبعه'), ('العميل', 'العميل')], default=None, max_length=20, null=True, verbose_name='مصدر التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0042_alter_design_and_printing_specifications_pro_design_source_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0043_alter_design_and_printing_specifications_number_of_sides_and_more",
        "description": "Work_Orders.migrations.0043_alter_design_and_printing_specifications_number_of_sides_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0042_alter_design_and_printing_specifications_pro_design_source_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='number_of_sides',\n            field=models.CharField(choices=[('وجه', 'وجه'), ('وجهين', 'وجهين'), ('قلاب', 'قلاب')], default='وجه', max_length=10, verbose_name='عدد الاوجه '),\n        ),",
        "detail": "Work_Orders.migrations.0043_alter_design_and_printing_specifications_number_of_sides_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0044_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "description": "Work_Orders.migrations.0044_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0043_alter_design_and_printing_specifications_number_of_sides_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='aftar_print_services',\n            name='pro_aftar_print_services_type',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('قص', 'قص'), ('ورنيش ', 'ورنيش '), ('يوفى', 'يوفى'), ('سلوفان', 'سلوفان'), ('سبوت يوفى', 'سبوت يوفى'), ('بصمه', 'بصمه'), ('مضلع', 'مضلع')], default=None, max_length=100, null=True, verbose_name='نوع الخدمة'),\n        ),",
        "detail": "Work_Orders.migrations.0044_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0045_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "description": "Work_Orders.migrations.0045_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0044_alter_aftar_print_services_pro_aftar_print_services_type_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='aftar_print_services',\n            name='pro_aftar_print_services_type',\n            field=multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('قص', 'قص'), ('ورنيش', 'ورنيش'), ('يوفى', 'يوفى'), ('سلوفان', 'سلوفان'), ('سبوت يوفى', 'سبوت يوفى'), ('بصمة', 'بصمة'), ('مضلع', 'مضلع')], default=None, max_length=100, null=True, verbose_name='نوع الخدمة'),\n        ),",
        "detail": "Work_Orders.migrations.0045_alter_aftar_print_services_pro_aftar_print_services_type_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0046_alter_customer_created_dt_alter_product_created_dt",
        "description": "Work_Orders.migrations.0046_alter_customer_created_dt_alter_product_created_dt",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0045_alter_aftar_print_services_pro_aftar_print_services_type_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='Created_Dt',\n            field=models.DateField(auto_now_add=True),\n        ),",
        "detail": "Work_Orders.migrations.0046_alter_customer_created_dt_alter_product_created_dt",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0047_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "description": "Work_Orders.migrations.0047_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0046_alter_customer_created_dt_alter_product_created_dt'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='tinted_colors1',\n            field=models.CharField(blank=True, default=' ', max_length=20, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0047_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0048_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "description": "Work_Orders.migrations.0048_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0047_alter_design_and_printing_specifications_tinted_colors1_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='tinted_colors1',\n            field=models.CharField(blank=True, default=None, max_length=20, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0048_alter_design_and_printing_specifications_tinted_colors1_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0049_alter_sector_sector_code",
        "description": "Work_Orders.migrations.0049_alter_sector_sector_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0048_alter_design_and_printing_specifications_tinted_colors1_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sector',\n            name='Sector_Code',\n            field=models.CharField(max_length=2),\n        ),",
        "detail": "Work_Orders.migrations.0049_alter_sector_sector_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0050_alter_sector_sector_name",
        "description": "Work_Orders.migrations.0050_alter_sector_sector_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0049_alter_sector_sector_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sector',\n            name='Sector_Name',\n            field=models.CharField(max_length=50),\n        ),",
        "detail": "Work_Orders.migrations.0050_alter_sector_sector_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0051_alter_sector_sector_code_alter_sector_sector_name",
        "description": "Work_Orders.migrations.0051_alter_sector_sector_code_alter_sector_sector_name",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0050_alter_sector_sector_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='sector',\n            name='Sector_Code',\n            field=models.CharField(max_length=2, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0051_alter_sector_sector_code_alter_sector_sector_name",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0052_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0052_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0051_alter_sector_sector_code_alter_sector_sector_name'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9),\n        ),",
        "detail": "Work_Orders.migrations.0052_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0053_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0053_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0052_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0053_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0054_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0054_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0053_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9),\n        ),",
        "detail": "Work_Orders.migrations.0054_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0055_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0055_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0054_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0055_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0056_alter_product_product_ordered_supply",
        "description": "Work_Orders.migrations.0056_alter_product_product_ordered_supply",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0055_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='product_Ordered_Supply',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='أمر توريد'),\n        ),",
        "detail": "Work_Orders.migrations.0056_alter_product_product_ordered_supply",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0057_alter_product_product_length_and_more",
        "description": "Work_Orders.migrations.0057_alter_product_product_length_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0056_alter_product_product_ordered_supply'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_length',\n            field=models.FloatField(blank=True, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0057_alter_product_product_length_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0058_remove_product_product_aftar_print_services_and_more",
        "description": "Work_Orders.migrations.0058_remove_product_product_aftar_print_services_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0057_alter_product_product_length_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='Product_Aftar_Print_Services',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0058_remove_product_product_aftar_print_services_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0059_alter_customer_customer_code",
        "description": "Work_Orders.migrations.0059_alter_customer_customer_code",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0058_remove_product_product_aftar_print_services_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9),\n        ),",
        "detail": "Work_Orders.migrations.0059_alter_customer_customer_code",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0060_alter_product_product_mycode",
        "description": "Work_Orders.migrations.0060_alter_product_product_mycode",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0059_alter_customer_customer_code'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_MyCode',\n            field=models.CharField(max_length=50),\n        ),",
        "detail": "Work_Orders.migrations.0060_alter_product_product_mycode",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0061_alter_customer_customer_code_and_more",
        "description": "Work_Orders.migrations.0061_alter_customer_customer_code_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0060_alter_product_product_mycode'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='customer_code',\n            field=models.CharField(max_length=9, unique=True),\n        ),",
        "detail": "Work_Orders.migrations.0061_alter_customer_customer_code_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0062_remove_product_product_details_and_more",
        "description": "Work_Orders.migrations.0062_remove_product_product_details_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0061_alter_customer_customer_code_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='Product_Details',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0062_remove_product_product_details_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0063_remove_product_product_status_and_more",
        "description": "Work_Orders.migrations.0063_remove_product_product_status_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0062_remove_product_product_details_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='Product_status',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0063_remove_product_product_status_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0064_alter_product_customer_representative",
        "description": "Work_Orders.migrations.0064_alter_product_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0063_remove_product_product_status_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='customer_representative',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('د/عمروالباز', 'د/عمروالباز'), ('ا/عمرو احمد', 'ا/عمرو احمد'), ('م/كريم عبد الغنى', 'م/كريم عبد الغنى'), ('أخرى', 'أخرى')], default='أخرى', max_length=100, verbose_name='ممثل  العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0064_alter_product_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0065_product_product_status",
        "description": "Work_Orders.migrations.0065_product_product_status",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0064_alter_product_customer_representative'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='Product_status',\n            field=models.CharField(blank=True, choices=[('Active', 'Active'), ('Deleted', 'Deleted')], default='Active', max_length=50, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0065_product_product_status",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0066_alter_product_product_details",
        "description": "Work_Orders.migrations.0066_alter_product_product_details",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0065_product_product_status'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='Product_Details',\n            field=models.TextField(blank=True, max_length=4000, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0066_alter_product_product_details",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0067_alter_customer_contact_email_and_more",
        "description": "Work_Orders.migrations.0067_alter_customer_contact_email_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0066_alter_product_product_details'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='Contact_Email',\n            field=models.EmailField(blank=True, max_length=254, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0067_alter_customer_contact_email_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0068_alter_customer_customer_code_edite",
        "description": "Work_Orders.migrations.0068_alter_customer_customer_code_edite",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0067_alter_customer_contact_email_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='customer',\n            name='Customer_code_edite',\n            field=models.CharField(blank=True, editable=False, max_length=20, null=True),\n        ),",
        "detail": "Work_Orders.migrations.0068_alter_customer_customer_code_edite",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0069_correctiveactions_and_more",
        "description": "Work_Orders.migrations.0069_correctiveactions_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0068_alter_customer_customer_code_edite'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='CorrectiveActions',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('date', models.DateField(blank=True, null=True, verbose_name='التاريخ')),",
        "detail": "Work_Orders.migrations.0069_correctiveactions_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0070_remove_product_product_design_and_printing_specifications_and_more",
        "description": "Work_Orders.migrations.0070_remove_product_product_design_and_printing_specifications_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0069_correctiveactions_and_more'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='Product_Design_and_printing_specifications',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0070_remove_product_product_design_and_printing_specifications_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0071_product_product_design_and_printing_specifications",
        "description": "Work_Orders.migrations.0071_product_product_design_and_printing_specifications",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0070_remove_product_product_design_and_printing_specifications_and_more'),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name='product',\n            name='Product_Design_and_printing_specifications',\n            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Products', to='Work_Orders.design_and_printing_specifications'),\n        ),",
        "detail": "Work_Orders.migrations.0071_product_product_design_and_printing_specifications",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0072_remove_product_product_correctiveactions_and_more",
        "description": "Work_Orders.migrations.0072_remove_product_product_correctiveactions_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0071_product_product_design_and_printing_specifications'),\n    ]\n    operations = [\n        migrations.RemoveField(\n            model_name='product',\n            name='Product_CorrectiveActions',\n        ),\n        migrations.AddField(",
        "detail": "Work_Orders.migrations.0072_remove_product_product_correctiveactions_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0073_alter_design_and_printing_specifications_pro_design_ditals",
        "description": "Work_Orders.migrations.0073_alter_design_and_printing_specifications_pro_design_ditals",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0072_remove_product_product_correctiveactions_and_more'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='pro_design_ditals',\n            field=models.CharField(blank=True, default=None, max_length=1000, null=True, verbose_name='تفاصيل التصميم '),\n        ),",
        "detail": "Work_Orders.migrations.0073_alter_design_and_printing_specifications_pro_design_ditals",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0074_representative_customer_representative",
        "description": "Work_Orders.migrations.0074_representative_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0073_alter_design_and_printing_specifications_pro_design_ditals'),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Representative',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),\n                ('name', models.CharField(max_length=100, unique=True)),",
        "detail": "Work_Orders.migrations.0074_representative_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0075_alter_product_customer_representative",
        "description": "Work_Orders.migrations.0075_alter_product_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0074_representative_customer_representative'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='customer_representative',\n            field=models.CharField(choices=[('د/عمروالباز', 'د/عمروالباز'), ('ا/عمرو احمد', 'ا/عمرو احمد'), ('م/كريم عبد الغنى', 'م/كريم عبد الغنى'), ('أخرى', 'أخرى')], default='أخرى', max_length=100, verbose_name='ممثل  العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0075_alter_product_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0076_alter_product_customer_representative",
        "description": "Work_Orders.migrations.0076_alter_product_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0075_alter_product_customer_representative'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='customer_representative',\n            field=multiselectfield.db.fields.MultiSelectField(choices=[('د/عمروالباز', 'د/عمروالباز'), ('ا/عمرو احمد', 'ا/عمرو احمد'), ('م/كريم عبد الغنى', 'م/كريم عبد الغنى'), ('أخرى', 'أخرى')], default='أخرى', max_length=100, verbose_name='ممثل  العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0076_alter_product_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0077_alter_product_customer_representative",
        "description": "Work_Orders.migrations.0077_alter_product_customer_representative",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0076_alter_product_customer_representative'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='product',\n            name='customer_representative',\n            field=models.CharField(choices=[('د/عمروالباز', 'د/عمروالباز'), ('ا/عمرو احمد', 'ا/عمرو احمد'), ('م/كريم عبد الغنى', 'م/كريم عبد الغنى'), ('أخرى', 'أخرى')], default='أخرى', max_length=100, verbose_name='ممثل  العميل'),\n        ),",
        "detail": "Work_Orders.migrations.0077_alter_product_customer_representative",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "Work_Orders.migrations.0078_alter_design_and_printing_specifications_approved_montage_count",
        "description": "Work_Orders.migrations.0078_alter_design_and_printing_specifications_approved_montage_count",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('Work_Orders', '0077_alter_product_customer_representative'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='design_and_printing_specifications',\n            name='approved_montage_count',\n            field=models.CharField(blank=True, max_length=50, null=True, verbose_name='العدد في المونتاج المعتمد'),\n        ),",
        "detail": "Work_Orders.migrations.0078_alter_design_and_printing_specifications_approved_montage_count",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "BASE_DIR = os. path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "ALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "#ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',\n    'Users',\n    'Work_Orders',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'Connect_ERP_System.urls'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "ROOT_URLCONF = 'Connect_ERP_System.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "WSGI_APPLICATION = 'Connect_ERP_System.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n     'default': {\n         'ENGINE': 'django.db.backends.postgresql_psycopg2',\n         'NAME': 'myproject',\n         'USER': 'myprojectuser',\n         'PASSWORD': 'password',\n         'HOST': 'localhost',",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "DATABASES = {\n     'default': {\n         'ENGINE': 'django.db.backends.postgresql_psycopg2',\n         'NAME': 'myproject',\n         'USER': 'myprojectuser',\n         'PASSWORD': 'password',\n         'HOST': 'localhost',\n         'PORT': '',\n     }\n }",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "Work_Orders.templates.settings",
        "description": "Work_Orders.templates.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "Work_Orders.templates.settings",
        "documentation": {}
    },
    {
        "label": "RepresentativeAdmin",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class RepresentativeAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('name',)\n    search_fields = ('name',)\nadmin.site.register(Representative, RepresentativeAdmin)\nclass Customerdp(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('Customer_Name', 'customer_code')\n    list_filter = ('Customer_Sector',)\n    search_fields = ('Customer_Name', 'customer_code',) \n    ordering = ('Customer_Name', 'customer_code')\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Customerdp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Customerdp(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('Customer_Name', 'customer_code')\n    list_filter = ('Customer_Sector',)\n    search_fields = ('Customer_Name', 'customer_code',) \n    ordering = ('Customer_Name', 'customer_code')\n    pass\nclass Sectordp(ImportExportModelAdmin):\n    pass\nclass Productdp(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('Product_Name', 'Product_MyCode')",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Sectordp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Sectordp(ImportExportModelAdmin):\n    pass\nclass Productdp(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('Product_Name', 'Product_MyCode')\n    list_filter = ('Product_Sector','Product_Customer',)\n    search_fields = ('Product_Name', 'Product_MyCode') \n    ordering = ('Product_Name', 'Product_MyCode')\n    pass\nclass Design_And_Printing_Specificationsdp(ImportExportModelAdmin):\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Productdp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Productdp(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('Product_Name', 'Product_MyCode')\n    list_filter = ('Product_Sector','Product_Customer',)\n    search_fields = ('Product_Name', 'Product_MyCode') \n    ordering = ('Product_Name', 'Product_MyCode')\n    pass\nclass Design_And_Printing_Specificationsdp(ImportExportModelAdmin):\n    pass\nclass Pro_Paper_Typedp(ImportExportModelAdmin):\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Design_And_Printing_Specificationsdp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Design_And_Printing_Specificationsdp(ImportExportModelAdmin):\n    pass\nclass Pro_Paper_Typedp(ImportExportModelAdmin):\n    pass\nclass Paper_Specificationdp(ImportExportModelAdmin):\n    pass\nclass Aftar_Print_Servicesdp(ImportExportModelAdmin):\n    pass\nclass Crushing_Datadp(ImportExportModelAdmin):\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Pro_Paper_Typedp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Pro_Paper_Typedp(ImportExportModelAdmin):\n    pass\nclass Paper_Specificationdp(ImportExportModelAdmin):\n    pass\nclass Aftar_Print_Servicesdp(ImportExportModelAdmin):\n    pass\nclass Crushing_Datadp(ImportExportModelAdmin):\n    pass\nclass Gluing_And_Binding_Datadp(ImportExportModelAdmin):\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Paper_Specificationdp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Paper_Specificationdp(ImportExportModelAdmin):\n    pass\nclass Aftar_Print_Servicesdp(ImportExportModelAdmin):\n    pass\nclass Crushing_Datadp(ImportExportModelAdmin):\n    pass\nclass Gluing_And_Binding_Datadp(ImportExportModelAdmin):\n    pass\nclass Finished_product_and_packing_datadp(ImportExportModelAdmin):\n    pass",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Aftar_Print_Servicesdp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Aftar_Print_Servicesdp(ImportExportModelAdmin):\n    pass\nclass Crushing_Datadp(ImportExportModelAdmin):\n    pass\nclass Gluing_And_Binding_Datadp(ImportExportModelAdmin):\n    pass\nclass Finished_product_and_packing_datadp(ImportExportModelAdmin):\n    pass\nclass CorrectiveActionsAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('date', 'complaint_details', 'proposed_solution', 'action_status', 'solution')",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Crushing_Datadp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Crushing_Datadp(ImportExportModelAdmin):\n    pass\nclass Gluing_And_Binding_Datadp(ImportExportModelAdmin):\n    pass\nclass Finished_product_and_packing_datadp(ImportExportModelAdmin):\n    pass\nclass CorrectiveActionsAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('date', 'complaint_details', 'proposed_solution', 'action_status', 'solution')\n    list_filter = ('action_status', 'date')\n    search_fields = ('complaint_details', 'proposed_solution', 'solution')",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Gluing_And_Binding_Datadp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Gluing_And_Binding_Datadp(ImportExportModelAdmin):\n    pass\nclass Finished_product_and_packing_datadp(ImportExportModelAdmin):\n    pass\nclass CorrectiveActionsAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('date', 'complaint_details', 'proposed_solution', 'action_status', 'solution')\n    list_filter = ('action_status', 'date')\n    search_fields = ('complaint_details', 'proposed_solution', 'solution')\nadmin.site.register(CorrectiveActions, CorrectiveActionsAdmin)\nadmin.site.register(Sector,Sectordp)",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "Finished_product_and_packing_datadp",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class Finished_product_and_packing_datadp(ImportExportModelAdmin):\n    pass\nclass CorrectiveActionsAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('date', 'complaint_details', 'proposed_solution', 'action_status', 'solution')\n    list_filter = ('action_status', 'date')\n    search_fields = ('complaint_details', 'proposed_solution', 'solution')\nadmin.site.register(CorrectiveActions, CorrectiveActionsAdmin)\nadmin.site.register(Sector,Sectordp)\nadmin.site.register(Customer,Customerdp)\nadmin.site.register(Product,Productdp)",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "CorrectiveActionsAdmin",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class CorrectiveActionsAdmin(ImportExportModelAdmin,admin.ModelAdmin):\n    list_display = ('date', 'complaint_details', 'proposed_solution', 'action_status', 'solution')\n    list_filter = ('action_status', 'date')\n    search_fields = ('complaint_details', 'proposed_solution', 'solution')\nadmin.site.register(CorrectiveActions, CorrectiveActionsAdmin)\nadmin.site.register(Sector,Sectordp)\nadmin.site.register(Customer,Customerdp)\nadmin.site.register(Product,Productdp)\nadmin.site.register(Design_And_Printing_Specifications,Design_And_Printing_Specificationsdp)\nadmin.site.register(Pro_Paper_Type,Pro_Paper_Typedp)",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "ProductDicriptionAdmin",
        "kind": 6,
        "importPath": "Work_Orders.admin",
        "description": "Work_Orders.admin",
        "peekOfCode": "class ProductDicriptionAdmin(ImportExportModelAdmin):\n    pass\nadmin.site.register(Product_Dicription, ProductDicriptionAdmin)",
        "detail": "Work_Orders.admin",
        "documentation": {}
    },
    {
        "label": "WorkOrdersConfig",
        "kind": 6,
        "importPath": "Work_Orders.apps",
        "description": "Work_Orders.apps",
        "peekOfCode": "class WorkOrdersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'Work_Orders'",
        "detail": "Work_Orders.apps",
        "documentation": {}
    },
    {
        "label": "NewCustomerForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class NewCustomerForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = ['Customer_Name', 'Contact_Name','representative', 'Contact_Phone', 'Contact_Email'] \nclass NewCustomerALLForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = ['Customer_Sector','Customer_Name', 'representative','Contact_Name', 'Contact_Phone', 'Contact_Email']\nclass NewProductForm(forms.ModelForm):\n    Product_Name=forms.CharField(max_length=100,widget=forms.TextInput(attrs={ 'class':'form-control'}),label='*إسم المنتج')",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "NewCustomerALLForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class NewCustomerALLForm(forms.ModelForm):\n    class Meta:\n        model = Customer\n        fields = ['Customer_Sector','Customer_Name', 'representative','Contact_Name', 'Contact_Phone', 'Contact_Email']\nclass NewProductForm(forms.ModelForm):\n    Product_Name=forms.CharField(max_length=100,widget=forms.TextInput(attrs={ 'class':'form-control'}),label='*إسم المنتج')\n    customer_representative = forms.ChoiceField (choices=[('د/عمروالباز','د/عمروالباز'),('ا/عمرو احمد','ا/عمرو احمد'),('م/كريم عبد الغنى','م/كريم عبد الغنى'),('أخرى','أخرى')],widget=forms.Select (attrs={'class':'form-control     '}) ,label=('*ممثل  العميل'))\n    Product_Code=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control'}),label='كود العميل ',required=False)\n    product_dicription=forms.ModelChoiceField(queryset=Product_Dicription.objects.all(),widget=forms.Select(attrs={'class':'form-control'}),label='وصف المنتج',required=False)\n    Product_length=forms.FloatField(widget=forms.NumberInput(attrs={'class':'form-control'}),label='*الطول')",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "NewProductForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class NewProductForm(forms.ModelForm):\n    Product_Name=forms.CharField(max_length=100,widget=forms.TextInput(attrs={ 'class':'form-control'}),label='*إسم المنتج')\n    customer_representative = forms.ChoiceField (choices=[('د/عمروالباز','د/عمروالباز'),('ا/عمرو احمد','ا/عمرو احمد'),('م/كريم عبد الغنى','م/كريم عبد الغنى'),('أخرى','أخرى')],widget=forms.Select (attrs={'class':'form-control     '}) ,label=('*ممثل  العميل'))\n    Product_Code=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control'}),label='كود العميل ',required=False)\n    product_dicription=forms.ModelChoiceField(queryset=Product_Dicription.objects.all(),widget=forms.Select(attrs={'class':'form-control'}),label='وصف المنتج',required=False)\n    Product_length=forms.FloatField(widget=forms.NumberInput(attrs={'class':'form-control'}),label='*الطول')\n    Product_width=forms.FloatField(widget=forms.NumberInput(attrs={'class':'form-control'}),label='*العرض') \n    Product_height=forms.FloatField(widget=forms.NumberInput(attrs={'class':'form-control'}),label='الإرتفاع',required=False)\n    product_avrage_prdect_ammount=forms.CharField(max_length=19,widget=forms.TextInput(attrs={'class':'form-control'}),label='متوسط الكميه المتوقعة',required=False)\n    class Meta:",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Design_And_Printing_SpecificationsForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Design_And_Printing_SpecificationsForm(forms.ModelForm):\n    pro_design_source=forms.ChoiceField(choices=[('المطبعة','المطبعة'),('العميل','العميل')],widget=forms.Select (attrs={'class':'form-control     '}) ,label='مصدر التصميم' ,required=False)\n    pro_design_type=forms.ChoiceField(choices=[('جديد','جديد'),('تعديل','تعديل'),('قديم','قديم')],widget=forms.Select (attrs={'class':'form-control    '}),label='نوع التصميم', required=False)\n    attachments_file=forms.FileField(widget=forms.FileInput(attrs={'class':'form-control  '}),label='إرفاق ملف معتمد ',required=False)\n    pro_design_ditals=forms.CharField(max_length=999,widget=forms.TextInput(attrs={'class':'form-control '}),label='تفاصيل التصميم ',required=False)\n    number_of_sides=forms.ChoiceField(choices=[('وجه','وجه'),('وجهين','وجهين'),('قلاب','قلاب')],widget=forms.Select (attrs={'class':'form-control    '})  ,label='عدد الأوجه',required=False)\n    tinted_colors1=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='الألوان المخصوصة',required=False)\n    tinted_colors2=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='',required=False)\n    tinted_colors3=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='',required=False)\n    tinted_colors4=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='',required=False)",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Paper_SpecificationForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Paper_SpecificationForm(forms.ModelForm):\n    pro_paper_type=forms.ModelChoiceField(queryset=Pro_Paper_Type.objects.all(),widget=forms.Select(attrs={'class':'form-control    '}),label='نوع الورق',required=False)\n    pro_paper_gram=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control   '}),label=' الجرامات للورق ',required=False)\n    fiber_direction=forms.ChoiceField(choices=(('ضرورية','ضرورية'),('غير ضرورىة','غير ضرورىة')),widget=forms.Select (attrs={'class':'form-control    '}) ,label='إتجاه الألياف',required=False)\n    class Meta:\n        model = Paper_Specification\n        fields = '__all__'\nclass Aftar_Print_ServicesForm(forms.ModelForm):\n    pro_aftar_print_services_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='تفاصيل الخدمة',required=False)\n    class Meta:",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Aftar_Print_ServicesForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Aftar_Print_ServicesForm(forms.ModelForm):\n    pro_aftar_print_services_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control '}),label='تفاصيل الخدمة',required=False)\n    class Meta:\n        model = Aftar_Print_Services\n        fields = '__all__'\nclass Crushing_DataForm(forms.ModelForm):\n    pro_crushing_data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control    '}),label='تفاصيل الخدمة' ,required=False)\n    class Meta:\n        model = Crushing_Data\n        fields = '__all__'",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Crushing_DataForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Crushing_DataForm(forms.ModelForm):\n    pro_crushing_data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control    '}),label='تفاصيل الخدمة' ,required=False)\n    class Meta:\n        model = Crushing_Data\n        fields = '__all__'\nclass Gluing_And_Binding_DataForm(forms.ModelForm):\n    pro_Gluing_And_Binding_Data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control    '}),label='تفاصيل الخدمة ' ,required=False)\n    class Meta:\n        model = Gluing_And_Binding_Data\n        fields = '__all__'",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Gluing_And_Binding_DataForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Gluing_And_Binding_DataForm(forms.ModelForm):\n    pro_Gluing_And_Binding_Data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control    '}),label='تفاصيل الخدمة ' ,required=False)\n    class Meta:\n        model = Gluing_And_Binding_Data\n        fields = '__all__'\nclass Finished_product_and_packing_dataForm(forms.ModelForm):\n    pro_finished_product_and_packing_data_type=forms.ChoiceField(choices=([('باندات ورق','باندات ورق'),('استيك','استيك')]),widget=forms.Select (attrs={'class':'form-control   '}) ,label='المنتج النهائي' ,required=False)\n    pro_Finished_product_and_packing_data_Baku=forms.ChoiceField(choices=([('ورق','ورق'),('اكياس','اكياس'),('شرنك','شرنك')]),widget=forms.Select (attrs={'class':'form-control   '}) ,label='الباكو',required=False)\n    pro_finished_product_and_packing_data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control   '}),label='تفاصيل الخدمة',required=False)\n    class Meta:",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Finished_product_and_packing_dataForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class Finished_product_and_packing_dataForm(forms.ModelForm):\n    pro_finished_product_and_packing_data_type=forms.ChoiceField(choices=([('باندات ورق','باندات ورق'),('استيك','استيك')]),widget=forms.Select (attrs={'class':'form-control   '}) ,label='المنتج النهائي' ,required=False)\n    pro_Finished_product_and_packing_data_Baku=forms.ChoiceField(choices=([('ورق','ورق'),('اكياس','اكياس'),('شرنك','شرنك')]),widget=forms.Select (attrs={'class':'form-control   '}) ,label='الباكو',required=False)\n    pro_finished_product_and_packing_data_detals=forms.CharField(max_length=100,widget=forms.TextInput(attrs={'class':'form-control   '}),label='تفاصيل الخدمة',required=False)\n    class Meta:\n        model = Finished_product_and_packing_data\n        fields = '__all__'\nfrom django import forms\nfrom .models import CorrectiveActions\nfrom django import forms",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "CorrectiveActionsForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class CorrectiveActionsForm(forms.ModelForm):    # اجراءات تصصيصيه المنتجات\n    ACTIONS_CHOICES = (\n        ('قيد التنفيذ', 'قيد التنفيذ'),\n        ('تم التنفيذ', 'تم التنفيذ'),\n        ('مرفوض', 'مرفوض'),\n        ('تحت الاعتماد', 'تحت الاعتماد'),\n    )\n    date = forms.DateField(widget=forms.DateInput(attrs={'class': 'form-control','type': 'date'}), label=\"التاريخ\", required=False)\n    complaint_details = forms.CharField(widget=forms.Textarea(attrs={'class': 'form-control'}), label=\"تفاصيل الشكوى\", required=False)\n    proposed_solution = forms.CharField(widget=forms.Textarea(attrs={'class': 'form-control'}), label=\"الحل المقترح\", required=False)",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "NewOrderForm",
        "kind": 6,
        "importPath": "Work_Orders.forms",
        "description": "Work_Orders.forms",
        "peekOfCode": "class NewOrderForm(forms.ModelForm):\n    class Meta:\n        model = Order\n        fields = ['Order_Details']",
        "detail": "Work_Orders.forms",
        "documentation": {}
    },
    {
        "label": "Sector",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Sector(models.Model):\n    Sector_Name = models.CharField(max_length=50,unique=True)\n    Sector_Code = models.CharField(max_length=2,unique=True)\n    Sector_Description = models.CharField(max_length=200)\n    def __str__(self):\n        return str(self.Sector_Name)\n    def save_sector(self,*args,**kwargs):\n        self.Sector_Code = self.Sector_Name[:2].upper() \n        super().save(*args,**kwargs)\n    def get_products_count(self):",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Representative",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Representative(models.Model):\n    name = models.CharField(max_length=100, unique=True)\n    def __str__(self):\n        return self.name    \n# Customers Table\nclass Customer(models.Model):\n    Customer_Name = models.CharField(max_length=200,unique=True)\n    customer_code =models.CharField(max_length=9,unique=True)\n    Customer_Sector = models.ForeignKey(Sector,related_name='Customers',on_delete=models.CASCADE)\n    representative = models.ForeignKey(Representative, on_delete=models.CASCADE,blank=True,null=True,default=None)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Customer",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Customer(models.Model):\n    Customer_Name = models.CharField(max_length=200,unique=True)\n    customer_code =models.CharField(max_length=9,unique=True)\n    Customer_Sector = models.ForeignKey(Sector,related_name='Customers',on_delete=models.CASCADE)\n    representative = models.ForeignKey(Representative, on_delete=models.CASCADE,blank=True,null=True,default=None)\n    Created_By = models.ForeignKey(User,related_name='Customers',on_delete=models.CASCADE)\n    Created_Dt = models.DateField(auto_now_add=True)\n    Contact_Name = models.CharField(max_length=200,blank=True,null=True)\n    Contact_Phone = models.CharField(max_length=50,blank=True,null=True)\n    Contact_Email = models.EmailField(max_length=254,blank=True,null=True)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Account",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Account(models.Model):\n    Account_Customer =  models.ForeignKey(Customer,related_name='Accounts',on_delete=models.CASCADE)\n    Account_Manager = models.ForeignKey(User,related_name='Accounts',on_delete=models.CASCADE)\n# Products Table\nclass Product(models.Model):\n    STATUS_CHOICES = (\n    ('Active', 'Active'),\n    ('Deleted', 'Deleted'),)\n    Product_Name = models.CharField(max_length=300,verbose_name=('اسم النتج'))\n    Product_Code = models.CharField(max_length=50,verbose_name=('كود العميل'),blank=True,null=True)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Product",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Product(models.Model):\n    STATUS_CHOICES = (\n    ('Active', 'Active'),\n    ('Deleted', 'Deleted'),)\n    Product_Name = models.CharField(max_length=300,verbose_name=('اسم النتج'))\n    Product_Code = models.CharField(max_length=50,verbose_name=('كود العميل'),blank=True,null=True)\n    product_Ordered_Supply=models.CharField(max_length=50,verbose_name=('أمر توريد'),blank=True,null=True)\n    customer_representative = models.CharField (choices=[('د/عمروالباز','د/عمروالباز'),('ا/عمرو احمد','ا/عمرو احمد'),('م/كريم عبد الغنى','م/كريم عبد الغنى'),('أخرى','أخرى')],max_length=100,verbose_name=('ممثل  العميل'),default= 'أخرى')\n    product_dicription=models.ForeignKey(\"Product_Dicription\",related_name='Product_Description',blank=True ,null=True,on_delete=models.CASCADE ,verbose_name=('وصف المنتج'))\n    Product_length = models.FloatField(blank=True,null=True)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Design_And_Printing_Specifications",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Design_And_Printing_Specifications(models.Model):\n    pro_design_source=MultiSelectField(choices=(('المطبعة','المطبعة'),('العميل','العميل')),max_length=20,verbose_name=('مصدر التصميم '),blank=True,null=True,default=None) #if the design is from the printer or from the customer\n    pro_design_type=MultiSelectField(choices=(('جديد','جديد'),('تعديل','تعديل'),('قديم','قديم')),max_length=70,verbose_name=('نوع التصميم '),blank=True,null=True,default=None)\n    pro_design_ditals=models.CharField(max_length=1000,verbose_name=('تفاصيل التصميم '),blank=True,null=True,default=None)\n    pro_old_execution=MultiSelectField(choices=([('إعدام القديم','إعدام القديم')]),max_length=70,verbose_name=(''), blank=True,null=True,default=None)\n    number_of_sides=models.CharField(choices=[('وجه','وجه'),('وجهين','وجهين'),('قلاب','قلاب')],max_length=10,default='وجه',verbose_name=('عدد الأوجه '))\n    attachments_file = models.FileField(upload_to='attachments/%Y/%m/%d', blank=True, null=True, verbose_name=('إرفاق ملف معتمد  '))\n    approved_montage_size = models.CharField(max_length=50, verbose_name=\"مقاس المونتاج المعتمد\", blank=True, null=True)#مقاس المونتاج المعتمد\n    approved_montage_count = models.CharField(verbose_name=\"العدد في المونتاج المعتمد\", blank=True, null=True, max_length=50)#العدد في المونتاج المعتمد\n    product_color = MultiSelectField(choices=([('Cyan','C'),('Magenta','M'),('yellow','Y'),('Key','K')]),max_length=50,blank=True,null=True,default=None ,verbose_name=('الألون'))",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Pro_Paper_Type",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Pro_Paper_Type(models.Model):\n    pro_paper_type=models.CharField(max_length=80)\n    def __str__ (self):\n        return str(self.pro_paper_type)\nclass Paper_Specification (models.Model):\n    pro_paper_type=models.ForeignKey(Pro_Paper_Type,related_name='Paper_Specification',blank=True,null=True,on_delete=models.CASCADE,verbose_name=('نوع الورق '))\n    pro_paper_gram=models.CharField(max_length=80,blank=True,null=True,default=None)\n    fiber_direction=models.CharField(choices=(('ضرورية','ضرورية'),('غير ضرورىة','غير ضرورىة')),max_length=80,blank=True,null=True,default=None,verbose_name=('إتجاه الألياف '))\n    def __str__ (self):\n        return  str(self.pro_paper_gram)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Paper_Specificatio",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Paper_Specification (models.Model):\n    pro_paper_type=models.ForeignKey(Pro_Paper_Type,related_name='Paper_Specification',blank=True,null=True,on_delete=models.CASCADE,verbose_name=('نوع الورق '))\n    pro_paper_gram=models.CharField(max_length=80,blank=True,null=True,default=None)\n    fiber_direction=models.CharField(choices=(('ضرورية','ضرورية'),('غير ضرورىة','غير ضرورىة')),max_length=80,blank=True,null=True,default=None,verbose_name=('إتجاه الألياف '))\n    def __str__ (self):\n        return  str(self.pro_paper_gram)\nclass Aftar_Print_Services (models.Model):\n    pro_aftar_print_services_type=MultiSelectField(choices=(('قص','قص'),('ورنيش','ورنيش'),('يوفى','يوفى'),('سلوفان','سلوفان'),('سبوت يوفى','سبوت يوفى'),('بصمة','بصمة'),('مضلع','مضلع')),max_length=100,verbose_name=('نوع الخدمة'),blank=True,null=True,default=None)\n    pro_aftar_print_services_detals=models.CharField(max_length=100,blank=True,null=True,default=None)\n    def __str__ (self):",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Aftar_Print_Service",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Aftar_Print_Services (models.Model):\n    pro_aftar_print_services_type=MultiSelectField(choices=(('قص','قص'),('ورنيش','ورنيش'),('يوفى','يوفى'),('سلوفان','سلوفان'),('سبوت يوفى','سبوت يوفى'),('بصمة','بصمة'),('مضلع','مضلع')),max_length=100,verbose_name=('نوع الخدمة'),blank=True,null=True,default=None)\n    pro_aftar_print_services_detals=models.CharField(max_length=100,blank=True,null=True,default=None)\n    def __str__ (self):\n        return str(self.pro_aftar_print_services_type)\nclass Crushing_Data (models.Model):\n    pro_crushing_data_type=MultiSelectField(choices=([('تام','تام'),('شباك','شباك'),('كوفراج','كوفراج'),('ريجة','ريجة'),('فورمة','فورمة')]),max_length=100,blank=True,null=True,verbose_name=('نوع الخدمة '))\n    pro_crushing_data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):\n        return str(self.pro_crushing_data_type)+\" \"+str(self.pro_crushing_data_detals) ",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Crushing_Dat",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Crushing_Data (models.Model):\n    pro_crushing_data_type=MultiSelectField(choices=([('تام','تام'),('شباك','شباك'),('كوفراج','كوفراج'),('ريجة','ريجة'),('فورمة','فورمة')]),max_length=100,blank=True,null=True,verbose_name=('نوع الخدمة '))\n    pro_crushing_data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):\n        return str(self.pro_crushing_data_type)+\" \"+str(self.pro_crushing_data_detals) \nclass Gluing_And_Binding_Data (models.Model):\n    pro_Gluing_And_Binding_Data_type=MultiSelectField(choices=([('تلزيق آلى','تلزيق آلى'),('تلزيق يدوي','تلزيق يدوي'),('تلزيق إستالون','تلزيق إستالون'),('تجليد','تجليد')]),max_length=100,blank=True,null=True,verbose_name=('نوع الخدمة '))\n    pro_Gluing_And_Binding_Data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):\n        return str(self.pro_Gluing_And_Binding_Data_type) + \" \" + str(self.pro_Gluing_And_Binding_Data_detals)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Gluing_And_Binding_Dat",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Gluing_And_Binding_Data (models.Model):\n    pro_Gluing_And_Binding_Data_type=MultiSelectField(choices=([('تلزيق آلى','تلزيق آلى'),('تلزيق يدوي','تلزيق يدوي'),('تلزيق إستالون','تلزيق إستالون'),('تجليد','تجليد')]),max_length=100,blank=True,null=True,verbose_name=('نوع الخدمة '))\n    pro_Gluing_And_Binding_Data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):\n        return str(self.pro_Gluing_And_Binding_Data_type) + \" \" + str(self.pro_Gluing_And_Binding_Data_detals)\nclass Finished_product_and_packing_data (models.Model):\n    pro_finished_product_and_packing_data_type=models.CharField(choices=[('باندات ورق','باندات ورق'),('أستيك','أستيك')],max_length=30,blank=True,null=True,verbose_name=('المنتج النهائي '))\n    pro_Finished_product_and_packing_data_Baku=models.CharField(choices=[('ورق','ورق'),('أكياس','أكياس'),('شرنك','شرنك')],max_length=100,blank=True,null=True,verbose_name=('الباكو'))\n    pro_finished_product_and_packing_data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Finished_product_and_packing_dat",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Finished_product_and_packing_data (models.Model):\n    pro_finished_product_and_packing_data_type=models.CharField(choices=[('باندات ورق','باندات ورق'),('أستيك','أستيك')],max_length=30,blank=True,null=True,verbose_name=('المنتج النهائي '))\n    pro_Finished_product_and_packing_data_Baku=models.CharField(choices=[('ورق','ورق'),('أكياس','أكياس'),('شرنك','شرنك')],max_length=100,blank=True,null=True,verbose_name=('الباكو'))\n    pro_finished_product_and_packing_data_detals=models.CharField(max_length=100,blank=True,null=True)\n    def __str__ (self):\n        return str(self.pro_finished_product_and_packing_data_type)  + \" \" + str(self.pro_Finished_product_and_packing_data_Baku) + \" \" + str(self.pro_finished_product_and_packing_data_detals)    \nclass Product_Dicription(models.Model):\n    Product_Description_type = models.TextField(max_length=4000)\n    def __str__ (self):\n        return str(self.Product_Description_type)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "Product_Dicription",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class Product_Dicription(models.Model):\n    Product_Description_type = models.TextField(max_length=4000)\n    def __str__ (self):\n        return str(self.Product_Description_type)\nclass CorrectiveActions(models.Model): # اجراءات تصصيصيه المنتجات\n    ACTIONS_CHOICES = (\n        ('قيد التنفيذ', 'قيد التنفيذ'),\n        ('تم التنفيذ', 'تم التنفيذ'),\n        ('مرفوض', 'مرفوض'),\n        ('تحت الاعتماد', 'تحت الاعتماد'),",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "CorrectiveActions",
        "kind": 6,
        "importPath": "Work_Orders.models",
        "description": "Work_Orders.models",
        "peekOfCode": "class CorrectiveActions(models.Model): # اجراءات تصصيصيه المنتجات\n    ACTIONS_CHOICES = (\n        ('قيد التنفيذ', 'قيد التنفيذ'),\n        ('تم التنفيذ', 'تم التنفيذ'),\n        ('مرفوض', 'مرفوض'),\n        ('تحت الاعتماد', 'تحت الاعتماد'),\n    )\n    date = models.DateField(verbose_name=\"التاريخ\", blank=True, null=True)\n    complaint_details = models.TextField(verbose_name=\"تفاصيل الشكوى\", blank=True, null=True)\n    proposed_solution = models.TextField(verbose_name=\"الحل المقترح\", blank=True, null=True)",
        "detail": "Work_Orders.models",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "Work_Orders.urls",
        "description": "Work_Orders.urls",
        "peekOfCode": "urlpatterns = [\n        path('', views.dashboard, name='dashboard'),\n        path('sectors/', views.sectors, name='sectors'),\n        path('customers/', views.customers, name='customers'),\n        path('products/', views.all_products_view, name='products'),\n        path('orders/', views.orders, name='orders'),\n        path('form/', views.new_customer_all, name='new_customer_all'),\n        path('<int:Sector_id>/', views.sector_customers, name='sector_customers' ),\n        path('<int:Sector_id>/new', views.new_customer, name='new_customer'),\n        path('<int:Sector_id>/<int:Customer_id>/edit/', views.CustomerUpdatedView, name='customer_update'),",
        "detail": "Work_Orders.urls",
        "documentation": {}
    },
    {
        "label": "not_in_marketing_group",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def not_in_marketing_group(user):\n    return not user.groups.filter(name='markting').exists()\ndef forbidden_page(request):\n    return render(request, 'user auth/forbidden_page.html')\n@login_required\ndef sectors(request):\n    sectors = Sector.objects.all()\n    return render (request,'Sectors.html',{'sectors':sectors})\n@user_passes_test(not_in_marketing_group, login_url='forbidden_page')\ndef customers(request):",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "forbidden_page",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def forbidden_page(request):\n    return render(request, 'user auth/forbidden_page.html')\n@login_required\ndef sectors(request):\n    sectors = Sector.objects.all()\n    return render (request,'Sectors.html',{'sectors':sectors})\n@user_passes_test(not_in_marketing_group, login_url='forbidden_page')\ndef customers(request):\n    customers = Customer.objects.all()\n    return render(request, 'Customers.html', {'customers': customers})",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "sectors",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def sectors(request):\n    sectors = Sector.objects.all()\n    return render (request,'Sectors.html',{'sectors':sectors})\n@user_passes_test(not_in_marketing_group, login_url='forbidden_page')\ndef customers(request):\n    customers = Customer.objects.all()\n    return render(request, 'Customers.html', {'customers': customers})\n@login_required\ndef orders(request):\n    orders = Order.objects.all()",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "customers",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def customers(request):\n    customers = Customer.objects.all()\n    return render(request, 'Customers.html', {'customers': customers})\n@login_required\ndef orders(request):\n    orders = Order.objects.all()\n    return render (request,'Orders.html',{'orders':orders})\n@login_required\ndef sector_customers(request,Sector_id):\n     sector = get_object_or_404(Sector,pk=Sector_id)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "orders",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def orders(request):\n    orders = Order.objects.all()\n    return render (request,'Orders.html',{'orders':orders})\n@login_required\ndef sector_customers(request,Sector_id):\n     sector = get_object_or_404(Sector,pk=Sector_id)\n     return render (request,'Sector_Customers.html',{'sector':sector})\n@login_required\ndef customer_products(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "sector_customers",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def sector_customers(request,Sector_id):\n     sector = get_object_or_404(Sector,pk=Sector_id)\n     return render (request,'Sector_Customers.html',{'sector':sector})\n@login_required\ndef customer_products(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)\n     return render (request,'Customer_Products.html',{'customer':customer})\n@login_required     \ndef customer_print(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "customer_products",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def customer_products(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)\n     return render (request,'Customer_Products.html',{'customer':customer})\n@login_required     \ndef customer_print(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)\n     return render (request,'customer_print.html',{'customer':customer})\ndef new_customer_all(request):  # Create a new customer\n          form = NewCustomerALLForm()  # Create a new form\n          user = User.objects.get(username=request.user)   # Get the first user",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "customer_print",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def customer_print(request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)\n     return render (request,'customer_print.html',{'customer':customer})\ndef new_customer_all(request):  # Create a new customer\n          form = NewCustomerALLForm()  # Create a new form\n          user = User.objects.get(username=request.user)   # Get the first user\n          # if sector_id is not None:\n          if request.method == \"POST\": # If the form has been submitted\n               form = NewCustomerALLForm(request.POST) # Get the data from the submitted form\n               if form.is_valid():      # If the form is valid",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "new_customer_all",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def new_customer_all(request):  # Create a new customer\n          form = NewCustomerALLForm()  # Create a new form\n          user = User.objects.get(username=request.user)   # Get the first user\n          # if sector_id is not None:\n          if request.method == \"POST\": # If the form has been submitted\n               form = NewCustomerALLForm(request.POST) # Get the data from the submitted form\n               if form.is_valid():      # If the form is valid\n                    Customer = form.save(commit=False) # Save the form data\n                    Customer.Created_By = user # Set the user\n                    Customer.Customer_Sector=Sector.objects.get(pk=request.POST['Customer_Sector'])",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "new_customer",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def new_customer(request,Sector_id):\n     sector = get_object_or_404(Sector,pk=Sector_id)\n     form = NewCustomerForm()\n     user = User.objects.first()\n     if request.method == \"POST\":\n          form = NewCustomerForm(request.POST)\n          if form.is_valid():\n               Customer = form.save(commit=False)\n               Customer.Customer_Sector = sector\n               Customer.Created_By = request.user",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "CustomerUpdatedVie",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def CustomerUpdatedView (request,Sector_id,Customer_id):\n     customer = get_object_or_404(Customer, Customer_Sector__pk = Sector_id, pk = Customer_id)\n     form = NewCustomerForm(request.POST  or None,instance=customer)\n     user = User.objects.first()\n     code=customer.customer_code\n     customer.Customer_code_edite=code\n     if request.method == \"POST\":\n          form = NewCustomerForm(request.POST  or None, instance=customer)\n          if form.is_valid():\n               customer = form.save(commit=False)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "new_product",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def new_product(request, Sector_id, Customer_id):\n    customer = get_object_or_404(Customer, Customer_Sector__pk=Sector_id, pk=Customer_id)\n    sector = get_object_or_404(Sector, pk=Sector_id)\n    if request.method == \"POST\":\n        form = NewProductForm(request.POST,request.FILES)\n        form_2 = Design_And_Printing_SpecificationsForm(request.POST,request.FILES )\n        form_3 = Paper_SpecificationForm(request.POST)\n        form_4 = Aftar_Print_ServicesForm(request.POST)\n        form_5 = Crushing_DataForm(request.POST)\n        form_6 = Gluing_And_Binding_DataForm(request.POST)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "edit_product",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def edit_product(request, sector_id, customer_id, product_id):\n    customer = get_object_or_404(Customer, Customer_Sector__pk=sector_id, pk=customer_id)\n    sector = get_object_or_404(Sector, pk=sector_id)\n    product = get_object_or_404(Product, pk=product_id)\n    if request.method == \"POST\":\n        form = NewProductForm(request.POST,request.FILES or None, instance=product)\n        form_2 = Design_And_Printing_SpecificationsForm(request.POST,request.FILES or None, instance=product.Product_Design_and_printing_specifications)\n        form_3 = Paper_SpecificationForm(request.POST, instance=product.Product_paper_specification)\n        form_4 = Aftar_Print_ServicesForm(request.POST, instance=product.Product_Aftar_Print_Services)\n        form_5 = Crushing_DataForm(request.POST, instance=product.Product_Crushing_Data)",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "print_product",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def print_product(request,Sector_id, Customer_id, Product_id):\n     product = get_object_or_404(Product, Product_Sector__pk = Sector_id, Product_Customer__pk = Customer_id, pk = Product_id)\n     return render (request,'print_product.html',{'product':product })\ndef all_products_view(request):\n     products = Product.objects.all()\n     return render (request,'all_products.html',{'products':products})\n@login_required\ndef dashboard(request):\n     sec=Sector.objects.all().count()\n     customers= Customer.objects.all().count()",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "all_products_view",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def all_products_view(request):\n     products = Product.objects.all()\n     return render (request,'all_products.html',{'products':products})\n@login_required\ndef dashboard(request):\n     sec=Sector.objects.all().count()\n     customers= Customer.objects.all().count()\n     products= Product.objects.all().count()\n     orders= Order.objects.all().count()\n     New = Order.objects.filter(Ord_states__name__contains='جديد').count()",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "dashboard",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def dashboard(request):\n     sec=Sector.objects.all().count()\n     customers= Customer.objects.all().count()\n     products= Product.objects.all().count()\n     orders= Order.objects.all().count()\n     New = Order.objects.filter(Ord_states__name__contains='جديد').count()\n     design = Order.objects.filter(Ord_states__name__contains = 'تصميم').count()\n     Produced_by = Order.objects.filter(Ord_states__name__contains = 'مونتاج').count()\n     buy_paper = Order.objects.filter(Ord_states__name__contains = 'شراءورق').count()\n     paper = Order.objects.filter(Ord_states__name__contains = 'ورق').exclude(Ord_states__name__contains='تجهيز ورق').exclude(Ord_states__name__contains='شراء ورق').count()",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "representative_view",
        "kind": 2,
        "importPath": "Work_Orders.views",
        "description": "Work_Orders.views",
        "peekOfCode": "def representative_view(request, customer_id):\n    try:\n        customer = Customer.objects.get(pk=customer_id)\n    except Customer.DoesNotExist:\n        return render(request, '404.html')  # Render a custom 404 page or handle the error appropriately\n    products = Product.objects.filter(Product_Customer=customer)\n    # Filter orders based on different criteria\n    orders = Order.objects.filter(Ord_Product__Product_Customer=customer)\\\n                      .exclude(Ord_states__name__in=['Deleted', 'Finished', 'Closed', 'حسابات'])\\\n                      .order_by('-id')",
        "detail": "Work_Orders.views",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'Connect_ERP_System.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "BASE_DIR = os. path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-qb08hoidcb-stm*!uuoa=rockwvij0^-)31_#bta51r-@r2o5b'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "ALLOWED_HOSTS = ['oms.connect-pack.com','24.199.111.36' ]\n#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "#ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "#ALLOWED_HOSTS = ['127.0.0.1']\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'widget_tweaks',\n    'Users',\n    'Work_Orders',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'simple_history.middleware.HistoryRequestMiddleware',\n]",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "ROOT_URLCONF = 'Connect_ERP_System.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [os.path.join(BASE_DIR,'templates')],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "WSGI_APPLICATION = 'Connect_ERP_System.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.0/ref/settings/#databases\nDATABASES = {\n     'default': {\n         'ENGINE': 'django.db.backends.postgresql_psycopg2',\n         'NAME': 'myproject',\n         'USER': 'myprojectuser',\n         'PASSWORD': 'password',\n         'HOST': 'localhost',",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DATABASES = {\n     'default': {\n         'ENGINE': 'django.db.backends.postgresql_psycopg2',\n         'NAME': 'myproject',\n         'USER': 'myprojectuser',\n         'PASSWORD': 'password',\n         'HOST': 'localhost',\n         'PORT': '',\n     }\n }",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "STATICFILES_DIRS = (os.path.join(BASE_DIR, 'static'),) \nSTATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'static_root')\nMEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "MEDIA_URL = '/media/'\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nLOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = 'dashboard'\nLOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "settings",
        "description": "settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = 'dashboard'\nLOGIN_URL='login'",
        "detail": "settings",
        "documentation": {}
    }
]